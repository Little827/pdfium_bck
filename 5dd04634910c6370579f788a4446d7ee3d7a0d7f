{
  "comments": [
    {
      "key": {
        "uuid": "56874db6_190522be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-06T21:54:35Z",
      "side": 1,
      "message": "extra blank line",
      "revId": "5dd04634910c6370579f788a4446d7ee3d7a0d7f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e91b9d6_1ff3e600",
        "filename": "core/fpdfapi/page/cpdf_psengine_unittest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-06T21:54:35Z",
      "side": 1,
      "message": "Maybe clearer to say \"smallest float value greater than 0\" because I was thinking \"Min float\" meant std::numeric_limits\u003cfloat\u003e::min().",
      "range": {
        "startLine": 120,
        "startChar": 68,
        "endLine": 120,
        "endChar": 80
      },
      "revId": "5dd04634910c6370579f788a4446d7ee3d7a0d7f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48ad12bc_c76baae3",
        "filename": "core/fpdfapi/page/cpdf_psengine_unittest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 7644
      },
      "writtenOn": "2019-06-06T22:16:21Z",
      "side": 1,
      "message": "According to StackOverflow (https://stackoverflow.com/questions/17070351/why-does-numeric-limitsmin-return-a-negative-value-for-int-but-positive-values): \"By definition, for floating types, `min` returns the smallest positive value the type can encode, not the lowest.\"\n\nEarlier when I had tried it myself, `std::numeric_limits\u003cfloat\u003e::min()` actually returned `1.17549e-38`. Nonetheless, while my terminology is correct, it is apparently unclear. I will change the comment.",
      "parentUuid": "0e91b9d6_1ff3e600",
      "range": {
        "startLine": 120,
        "startChar": 68,
        "endLine": 120,
        "endChar": 80
      },
      "revId": "5dd04634910c6370579f788a4446d7ee3d7a0d7f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9fb796_2f575ddb",
        "filename": "core/fpdfapi/page/cpdf_psengine_unittest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-06T22:19:10Z",
      "side": 1,
      "message": "Oh, interesting. I usually care more about std::numeric_limits\u003cT\u003e::min() for integer types of T, so I forgot float types have this different definition. In that case, do you want to just use std::numeric_limits\u003cfloat\u003e::min() here then?",
      "parentUuid": "48ad12bc_c76baae3",
      "range": {
        "startLine": 120,
        "startChar": 68,
        "endLine": 120,
        "endChar": 80
      },
      "revId": "5dd04634910c6370579f788a4446d7ee3d7a0d7f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbf223e8_f285959a",
        "filename": "core/fpdfapi/page/cpdf_psengine_unittest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 120,
      "author": {
        "id": 7644
      },
      "writtenOn": "2019-06-06T22:25:36Z",
      "side": 1,
      "message": "Do you mean in the comment or directly in the test code? \nFor example,\nEXPECT_FLOAT_EQ(0.0f, DoOperator1(\u0026engine, std::numeric_limits\u003cfloat\u003e::min(), PSOP_ROUND)); \n\nIf that\u0027s acceptable, I\u0027d be happy to.",
      "parentUuid": "bc9fb796_2f575ddb",
      "range": {
        "startLine": 120,
        "startChar": 68,
        "endLine": 120,
        "endChar": 80
      },
      "revId": "5dd04634910c6370579f788a4446d7ee3d7a0d7f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}