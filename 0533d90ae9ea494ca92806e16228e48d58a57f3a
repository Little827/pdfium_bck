{
  "comments": [
    {
      "key": {
        "uuid": "761e1ea6_e49b8114",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 5965
      },
      "writtenOn": "2018-06-19T15:29:33Z",
      "side": 1,
      "message": "Do you have numbers on the reduced memory usage? Is the savings just from removing the two maps?",
      "range": {
        "startLine": 10,
        "startChar": 24,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c262c848_b8dd836c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T15:43:13Z",
      "side": 1,
      "message": "\u003e Do you have numbers on the reduced memory usage?\n\nI have just example:\nOn this PDF i have reduced for ~7 Mb  http://www.nasa.gov/pdf/750614main_NASA_FY_2014_Budget_Estimates-508.pdf \n\n\u003e Is the savings just from removing the two maps?\n\nNo, after this CL, we do not store compressed (useless after decompress) data for \"objects streams\" \n(See http://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/pdf/pdfs/PDF32000_2008.pdf#53).",
      "parentUuid": "761e1ea6_e49b8114",
      "range": {
        "startLine": 10,
        "startChar": 24,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f258e53_54e417c0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:42:37Z",
      "side": 1,
      "message": "This seems worthwhile.  Do we pay any costs for multiple decompressions, say, if we bounce back and forth between pages?",
      "parentUuid": "c262c848_b8dd836c",
      "range": {
        "startLine": 10,
        "startChar": 24,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "179b1b2a_c4135a0f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "No. As before, we decopress objects only once. But now, we destroy original compressed stream, as big and useless.",
      "parentUuid": "8f258e53_54e417c0",
      "range": {
        "startLine": 10,
        "startChar": 24,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de44ca30_454225d2",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:23:50Z",
      "side": 1,
      "message": "nit:  \n\n  return pdfium::MakeUnique\u003cCPDF_ObjStream\u003e(std::move(stream));",
      "range": {
        "startLine": 55,
        "startChar": 9,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01f2b166_b3ce5e33",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T16:41:27Z",
      "side": 1,
      "message": "It have protected constructor, can not use with pdfium::MakeUnique",
      "parentUuid": "de44ca30_454225d2",
      "range": {
        "startLine": 55,
        "startChar": 9,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ed6f65f_725b9f69",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:55:46Z",
      "side": 1,
      "message": "Ack.  Maybe add comment to that effect, WrapUnique() is almost always wrong otherwise.",
      "parentUuid": "01f2b166_b3ce5e33",
      "range": {
        "startLine": 55,
        "startChar": 9,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b2b6e32_78579bf5",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ed6f65f_725b9f69",
      "range": {
        "startLine": 55,
        "startChar": 9,
        "endLine": 55,
        "endChar": 66
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97f56ea4_b2ee7db6",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T17:14:50Z",
      "side": 1,
      "message": "nit: rendundant, perhaps, given the nullptr check in IsObjectStream() itself?",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 21
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e52c3f97_8b7d26df",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Teoreticaly it may be subclassed (in test for example). Just added to consistency.",
      "parentUuid": "97f56ea4_b2ee7db6",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 21
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8d12fdf_7e89d282",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "nit: third_party/base/stl_util.h has pdfium::ContainsKey() helper for these exact cases.",
      "range": {
        "startLine": 67,
        "startChar": 2,
        "endLine": 68,
        "endChar": 38
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2df0ee3d_13da4114",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8d12fdf_7e89d282",
      "range": {
        "startLine": 67,
        "startChar": 2,
        "endLine": 68,
        "endChar": 38
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f492e0f3_36c654b1",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "nit: maybe spell out type fully since it isn\u0027t obvious from context.",
      "range": {
        "startLine": 78,
        "startChar": 1,
        "endLine": 78,
        "endChar": 6
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7cec57d_68157ebf",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 78,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f492e0f3_36c654b1",
      "range": {
        "startLine": 78,
        "startChar": 1,
        "endLine": 78,
        "endChar": 6
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e15a95ad_e5843eb8",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "nit: const auto\u0026 avoids a (small) copy.",
      "range": {
        "startLine": 89,
        "startChar": 13,
        "endLine": 89,
        "endChar": 17
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0831f540_cd29bc73",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 89,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e15a95ad_e5843eb8",
      "range": {
        "startLine": 89,
        "startChar": 13,
        "endLine": 89,
        "endChar": 17
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfa7503b_6a6b0ea5",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "Init doesn\u0027t really take ownership of the stream.  In fact, it destroys it upon return.  There isn\u0027t really any reason to do this -- stream, could in theory, outlive the ObjStream, and we could, in fact, make several objstreams from each stream, right?  (Not that its useful to do so, but it gives insight into lifetimes).\n\nI suspect that we may just want to pass a CPDF_Stream* here.\n\nAlso, is this the only call to Init() in the ctor?  maybe move it there?",
      "range": {
        "startLine": 99,
        "startChar": 6,
        "endLine": 99,
        "endChar": 25
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc1df78a_e378d424",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "\u003e Init doesn\u0027t really take ownership of the stream.  In fact, it destroys it upon return.\n\nYes, because after parsing, we do not need it.\n\n\u003e  There isn\u0027t really any reason to do this -- stream, could in theory, outlive the ObjStream, and we could, in fact, make several objstreams from each stream, right? \n\nYes, we can, but instead using raw CPDF_Stream(which is useless without CPDF_ObjStream),  more best share CPDF_ObjStream.\nAlso destroying of the source CPDF_Stream, reduce memory usage so much.\n\n\u003c I suspect that we may just want to pass a CPDF_Stream* here.\n\nNo, Why we need big useless data in memory?\n\n\u003e Also, is this the only call to Init() in the ctor?  maybe move it there?\n\nI do not like big constructors. If we will add something other into big it, will be muddle.",
      "parentUuid": "bfa7503b_6a6b0ea5",
      "range": {
        "startLine": 99,
        "startChar": 6,
        "endLine": 99,
        "endChar": 25
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7212289_26b991b2",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "nit: we don\u0027t use i within this loop, so why count down?",
      "range": {
        "startLine": 121,
        "startChar": 7,
        "endLine": 121,
        "endChar": 44
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9eec1ef9_54174e3a",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 121,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "This was original logic.",
      "parentUuid": "b7212289_26b991b2",
      "range": {
        "startLine": 121,
        "startChar": 7,
        "endLine": 121,
        "endChar": 44
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10a868aa_1ce30070",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 130,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "nit: object_offsets_[obj_num] \u003d obj_offset;",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 130,
        "endChar": 65
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7bff0c4_016d666e",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 130,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10a868aa_1ce30070",
      "range": {
        "startLine": 130,
        "startChar": 4,
        "endLine": 130,
        "endChar": 65
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d7c75f5_5b125a85",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 137,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T17:00:21Z",
      "side": 1,
      "message": "nit: stream",
      "range": {
        "startLine": 137,
        "startChar": 29,
        "endLine": 137,
        "endChar": 34
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca4e0483_6cf6e5e6",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 137,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d7c75f5_5b125a85",
      "range": {
        "startLine": 137,
        "startChar": 29,
        "endLine": 137,
        "endChar": 34
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "241a4e06_af976039",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:23:50Z",
      "side": 1,
      "message": "How does this relate to the other kinds of CPDF_Objects?  Should this inherit from CPDF_Object ?? In other words, does a better design have sub-classes for each of the various sub-types of stream?",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 20
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "970595bc_31cfb4ba",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T16:41:27Z",
      "side": 1,
      "message": "No, this is like CPDF_Image, the typed wrapper of CPDF_Stream.",
      "parentUuid": "241a4e06_af976039",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 20
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da3ed752_5cadb823",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T17:14:50Z",
      "side": 1,
      "message": "ah, OK. Maybe spell out Object to match the way it\u0027s referred to in the documentation?  Its unfortunate that we have CPDF_Objects and CPDF_Streams, which sound so similar to this, but then that\u0027s how they named it ...",
      "parentUuid": "970595bc_31cfb4ba",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 20
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d8f8a3c_39cd7fd6",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Them named \"Object Stream\"\nSee http://wwwimages.adobe.com/www.adobe.com/content/dam/acom/en/devnet/pdf/pdfs/PDF32000_2008.pdf#53",
      "parentUuid": "da3ed752_5cadb823",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 20
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d23ca9f_5f72ab7c",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:23:50Z",
      "side": 1,
      "message": "Nit: Rather than being static, this is probably a method of CPDF_Stream.  Given a CPDF_Stream, it seems reasonable to ask it if it is an object stream vs. some other kind of stream.",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 16
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3401cd23_c1356584",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T16:41:27Z",
      "side": 1,
      "message": "This is special case of CPDF_Stream, which is used only for parsing, and i do not want to make this method common. This is internal parsing object.",
      "parentUuid": "3d23ca9f_5f72ab7c",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 16
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb712b28_faf73bdd",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:45:48Z",
      "side": 1,
      "message": "Ok, makes sense.  As a follow-on, could this all then live in an anonymous namespace in cpdf_syntax_parser.cpp (if that\u0027s the associated parser)?",
      "parentUuid": "3401cd23_c1356584",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 16
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f0a35a1_4c628541",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T17:02:25Z",
      "side": 1,
      "message": "Alternatively, can we make a unit test for all this if we keep it in its own files?  That would be a good justification for keeping it as you have it.\n\nCan IsObjectsStreamObject() be private?",
      "parentUuid": "cb712b28_faf73bdd",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 16
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14267876_104ec870",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "\u003e Ok, makes sense.  As a follow-on, could this all then live in an anonymous namespace in cpdf_syntax_parser.cpp (if that\u0027s the associated parser)?\n\nThe associated parser is CPDF_Parser (not Syntax). But it is use this class, and will be strange, that the class ask its utilizer about is it itself. I want that CPDF_Parser is dependend on CPDF_ObjStream. Not both from each other.\n\nAlso i want reuse it, when will refactore the cross ref rebuilding. Currently we have not support of objects streams, when we rebuilding crossrefs.\n\nAnd in far way, use it to write correctly (not reduced like now) support of hint tables.\n\n\u003e Alternatively, can we make a unit test for all this if we keep it in its own files?  That would be a good justification for keeping it as you have it.\n\nYes, but before i want to finish review, and make related changes.\nBTW: Currently this logic is tested by corpus_tests.\n\n\u003e Can IsObjectsStreamObject() be private?\n\nI want to store it for tests and future use.",
      "parentUuid": "cb712b28_faf73bdd",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 16
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "998d34d9_97487f23",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "nit: is this uint32_t to match object_offests_ second type?",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bfce1e4_c5cc8a77",
        "filename": "core/fpdfapi/parser/cpdf_obj_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 50,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "I have moved this type from original code. Store it for now.",
      "parentUuid": "998d34d9_97487f23",
      "range": {
        "startLine": 50,
        "startChar": 2,
        "endLine": 50,
        "endChar": 5
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74d338ea_2fb19b99",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1222,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "nit: probably want to spell out the full type information here since it isn\u0027t immediately obvious from the context.",
      "range": {
        "startLine": 1222,
        "startChar": 2,
        "endLine": 1222,
        "endChar": 6
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59a41897_9cb0772b",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1222,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74d338ea_2fb19b99",
      "range": {
        "startLine": 1222,
        "startChar": 2,
        "endLine": 1222,
        "endChar": 6
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f0797a2_24edf65c",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1228,
      "author": {
        "id": 5495
      },
      "writtenOn": "2018-06-19T16:40:55Z",
      "side": 1,
      "message": "nit: generally, the m_ObjectStreamMap[object_number] \u003d std::move(objs_stream) syntax is clearer.",
      "range": {
        "startLine": 1227,
        "startChar": 10,
        "endLine": 1228,
        "endChar": 28
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8755d54f_5dcd59a4",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1228,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T20:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f0797a2_24edf65c",
      "range": {
        "startLine": 1227,
        "startChar": 10,
        "endLine": 1228,
        "endChar": 28
      },
      "revId": "0533d90ae9ea494ca92806e16228e48d58a57f3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}