{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a5e685e1_15060ee8",
        "filename": "core/fxcrt/c_string_template.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-02-24T01:44:35Z",
      "side": 1,
      "message": "Not sure if this is a good idea or not.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 54
      },
      "revId": "5bf9f5644211845171f027c30f8ca116d2415d00",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b45cf0a_325fe25c",
        "filename": "core/fxcrt/c_string_template.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-02-24T02:04:39Z",
      "side": 1,
      "message": "e.g. I\u0027d like to be able to write:\n\nstatic constexpr CString kResourceKeys[] \u003d {\"ExtGState\", \"Font\", \"XObject\"};\n\nso that there\u0027s no question about UNSAFE_BUFFERS right from the beginning ..\n\nNot sure if there is a way to do this.",
      "parentUuid": "a5e685e1_15060ee8",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 54
      },
      "revId": "5bf9f5644211845171f027c30f8ca116d2415d00",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e6249fe_ab87b14f",
        "filename": "core/fxcrt/c_string_template.h",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 9516
      },
      "writtenOn": "2024-02-23T14:52:15Z",
      "side": 1,
      "message": "I think we don\u0027t think we want to force it to convert to const, do we? The basic one would be `operator T*() { return ptr_; }`\n\nThis type isn\u0027t even going to be used in a const way really probably?",
      "revId": "5bf9f5644211845171f027c30f8ca116d2415d00",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "494aca37_e8e8ea9f",
        "filename": "core/fxcrt/c_string_template.h",
        "patchSetId": 6
      },
      "lineNbr": 93,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-02-24T01:44:35Z",
      "side": 1,
      "message": "Me no want mutable CString class.  We could be pointing at the NUL, then smartaleck caller might stomp the NUL with new value through the CString, then advance check is no longer valid.\n\nSo I templated on T, but made the internal stuff const T*",
      "parentUuid": "5e6249fe_ab87b14f",
      "revId": "5bf9f5644211845171f027c30f8ca116d2415d00",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}