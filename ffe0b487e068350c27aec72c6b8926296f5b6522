{
  "comments": [
    {
      "key": {
        "uuid": "acde02f4_02c05cd6",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1172,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-28T22:23:28Z",
      "side": 1,
      "message": "Remove and just use |kHelloWorldChecksum| directly?\n\nAs is, |kGreetingsRemovedChecksum| is not a true constant, as one can write kGreetingsRemovedChecksum \u003d nullptr on the next line and it still compiles.",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d22d1995_d41642fe",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1172,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-28T23:18:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acde02f4_02c05cd6",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9cc543a_a21871d0",
        "filename": "fpdfsdk/fpdf_view_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 25,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-28T22:23:28Z",
      "side": 1,
      "message": "Put using statements with global scope outside of (above) the anonymous namespace.\n\nIn a Chromium checkout, run \"git grep -l \u0027using content::\u0027 chrome\" and see just about every file does it that way.",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b77a2756_2f952bfe",
        "filename": "fpdfsdk/fpdf_view_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 25,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-28T23:18:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9cc543a_a21871d0",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "effebd1e_1fd1cf7b",
        "filename": "fpdfsdk/fpdf_view_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 25,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-29T15:23:17Z",
      "side": 1,
      "message": "I don\u0027t think this is too harmful, but this advice runs counter to https://abseil.io/tips/119; see \"Unnamed Namespaces.\" Maybe worth another thread on cxx@ to draw attention to this?\n\nIt also suggests prefixing with :: for using-declarations.",
      "parentUuid": "b77a2756_2f952bfe",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff64058d_e94fc96f",
        "filename": "fpdfsdk/fpdf_view_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 25,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-29T16:21:56Z",
      "side": 1,
      "message": "https://abseil.io/tips/119 does suggest prefixing with :: for using-declaration, but due to this hasn\u0027t happened in PDFium code base, I didn\u0027t make that shift in this CL.\nHowever, prefixing with :: is quite common in Chromium code base.\nMaybe we can consult Lei whether to make the move of switching to using prefixed \"::\" in PDFium as well? Less discrepancy between PDFium and Chromium styles will make things less confusing in the future.",
      "parentUuid": "effebd1e_1fd1cf7b",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f61a9ddd_41cae913",
        "filename": "fpdfsdk/fpdf_view_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 25,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-29T19:53:11Z",
      "side": 1,
      "message": "I\u0027m generally in favor of consistency between PDFium and Chromium. I also generally prefer Chromium style over Google style/Abseil tip of the week, should they conflict. In case of conflict, if it is an important issue worth discussing, bring it up on the appropriate mailing list, build consensus, and then resolve the issue.\n\nFor prefixing with ::, there\u0027s already an existing cxx@ thread on this topic with no conclusion: https://groups.google.com/a/chromium.org/d/topic/cxx/faUcFCvZA4M/discussion\n\nI share Jan\u0027s sentiment: \"While adding the global namespace prefix doesn\u0027t hurt, there shouldn\u0027t be a need for it as long as we follow the \u0027Avoid collisions between nested namespaces and well-known top-level namespaces.\u0027 style guide rule.\"\n\nAlthough the Abseil advice is good, it is trying to solve/prevent problems that we rarely encounter. Given the number of libraries PDFium interacts with, and us avoiding a nested testing namespace earlier in this CL, the chances of name collisions are relatively low.\n\nTo add some data points from Chromium:\n- \"using content::\u0027 in Chromium currently outnumbers \"using ::content::\" 1661 to 1. Likely because there\u0027s little risk of collision.\n- Whereas \"using testing\" shows an almost a 1:1 ratio, leaning towards no prefix. This is because some parts of Chromium do use a nested testing namespace.\n- \"using ::testing\" makes up 83% of all prefix usage.\n- Overall, the no prefix to prefix ratio is 19:1.\n\nWith these numbers, I would like PDFium to generally have no prefix for consistency with Chromium. Use prefixes only when necessary. If Chromium as a whole changes in the future, it\u0027s not too hard to follow along.\n\nSimilarly, sampling Chromium code shows most existing code declares using statements outside of unnamed namespaces, which is why I added a comment to ask for it to be done this way.",
      "parentUuid": "ff64058d_e94fc96f",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63d82d60_2c556b99",
        "filename": "fpdfsdk/fpdf_view_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1182,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-28T16:24:40Z",
      "side": 1,
      "message": "I think it\u0027d be better to declare this at the beginning of the function, rather than just before use.",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b81da04_44629b46",
        "filename": "fpdfsdk/fpdf_view_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1182,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-28T18:36:11Z",
      "side": 1,
      "message": "I couldn\u0027t find any specific style guide on which is preferred for using-declaration (declare right before use or at the top of the scope), as long as it\u0027s in the smallest scope of where it\u0027s being used. But judging by https://abseil.io/tips/119, it says \"More generally, the closer a declaration is to the point of use, the smaller is the set of scopes that can break your code.\" Maybe putting using-declaration right before use is the preferred way?",
      "parentUuid": "63d82d60_2c556b99",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc504d8b_f5e1a966",
        "filename": "fpdfsdk/fpdf_view_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1182,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-28T22:04:05Z",
      "side": 1,
      "message": "I think this is fine. Though given it\u0027s |kHelloWorldChecksum|, this may end up at the top of the file eventually anyway, if another test reuses hello_world.pdf.",
      "parentUuid": "0b81da04_44629b46",
      "revId": "ffe0b487e068350c27aec72c6b8926296f5b6522",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}