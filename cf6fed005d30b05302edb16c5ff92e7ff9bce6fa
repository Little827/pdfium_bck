{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8883b5af_69aa66d0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-17T01:41:29Z",
      "side": 1,
      "message": "I think this meant to say \"getter and setter\" ?\n\nIt would be great if the commit message can also explain in slightly more detail what this CL does.",
      "range": {
        "startLine": 7,
        "startChar": 20,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "cf6fed005d30b05302edb16c5ff92e7ff9bce6fa",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49f394fb_b7987e89",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-17T01:41:29Z",
      "side": 1,
      "message": "Could you file a feature request on crbug.com/pdfium/new to explain why you want to add this API? It\u0027s also helpful to have for tracking purposes. Then add `Bug: pdfium:NNNN` here.",
      "revId": "cf6fed005d30b05302edb16c5ff92e7ff9bce6fa",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f35523d_25f682be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-17T01:41:29Z",
      "side": 1,
      "message": "Please add some tests to make sure these APIs work as expected.",
      "revId": "cf6fed005d30b05302edb16c5ff92e7ff9bce6fa",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73095f0e_3ca738e1",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 988,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-17T01:41:29Z",
      "side": 1,
      "message": "Is a width of 0 allowed? Negative width?",
      "revId": "cf6fed005d30b05302edb16c5ff92e7ff9bce6fa",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d79bbc7_6624a000",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 989,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-17T01:41:29Z",
      "side": 1,
      "message": "Why does this function have this check, but FPDFAnnot_GetBorderWidth() below does not?",
      "revId": "cf6fed005d30b05302edb16c5ff92e7ff9bce6fa",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d047b31_e9cb94c6",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1018,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-17T01:41:29Z",
      "side": 1,
      "message": "Please try to consistently use Google C++ style naming.",
      "range": {
        "startLine": 1018,
        "startChar": 35,
        "endLine": 1018,
        "endChar": 42
      },
      "revId": "cf6fed005d30b05302edb16c5ff92e7ff9bce6fa",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}