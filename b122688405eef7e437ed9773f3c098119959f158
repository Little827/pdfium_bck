{
  "comments": [
    {
      "key": {
        "uuid": "508287fa_cc0957f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6835
      },
      "writtenOn": "2020-09-04T09:51:13Z",
      "side": 1,
      "message": "Lei, Tom: could you please take a look?\n\nThis implements the idea that was already discussed on the mailing list. Thanks.",
      "revId": "b122688405eef7e437ed9773f3c098119959f158",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c689a82_c98c3d92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6835
      },
      "writtenOn": "2020-09-07T13:15:03Z",
      "side": 1,
      "message": "Forgot to mention an independent use-case. Ignoring signatures, in case a PDF document has incremental updates, this API allows writing a reader that can show you older revisions of the document. Just load the document, call this function to get the trailer ends, then you can use FPDF_LoadMemDocument() to later load only an older revision of the document, and present each of those revisions to the user.",
      "revId": "b122688405eef7e437ed9773f3c098119959f158",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0ad066e_e917be04",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-09-08T19:02:56Z",
      "side": 1,
      "message": "\\n vs. \\r - could be either or both.",
      "range": {
        "startLine": 393,
        "startChar": 20,
        "endLine": 393,
        "endChar": 24
      },
      "revId": "b122688405eef7e437ed9773f3c098119959f158",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6243b7e_9c082f4e",
        "filename": "core/fpdfapi/parser/cpdf_syntax_parser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-09-08T19:02:56Z",
      "side": 1,
      "message": "this is going to be expensive, I\u0027d  prefer if you had a state machine here where you went from % -\u003e E -\u003e O -\u003e F -\u003e \\n.  That would probably be cheap enough that you could do it all the time, not just when tracking this.",
      "range": {
        "startLine": 402,
        "startChar": 7,
        "endLine": 402,
        "endChar": 22
      },
      "revId": "b122688405eef7e437ed9773f3c098119959f158",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55ff132e_cd14551e",
        "filename": "fpdfsdk/fpdf_signature.cpp",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-09-08T19:02:56Z",
      "side": 1,
      "message": "probably should be unsigned",
      "range": {
        "startLine": 163,
        "startChar": 44,
        "endLine": 163,
        "endChar": 47
      },
      "revId": "b122688405eef7e437ed9773f3c098119959f158",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c766f54_6e839d13",
        "filename": "fpdfsdk/fpdf_signature.cpp",
        "patchSetId": 1
      },
      "lineNbr": 176,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-09-08T19:02:56Z",
      "side": 1,
      "message": "I\u0027d really like to be able to do this without reparsing.",
      "range": {
        "startLine": 175,
        "startChar": 2,
        "endLine": 176,
        "endChar": 13
      },
      "revId": "b122688405eef7e437ed9773f3c098119959f158",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}