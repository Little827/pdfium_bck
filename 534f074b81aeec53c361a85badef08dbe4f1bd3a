{
  "comments": [
    {
      "key": {
        "uuid": "0b163ddc_25846c3b",
        "filename": "fpdfsdk/pwl/cpwl_edit_impl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 317,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-07-02T20:22:27Z",
      "side": 1,
      "message": "Not needed?",
      "range": {
        "startLine": 317,
        "startChar": 41,
        "endLine": 317,
        "endChar": 48
      },
      "revId": "534f074b81aeec53c361a85badef08dbe4f1bd3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2da12103_c29d830a",
        "filename": "fpdfsdk/pwl/cpwl_edit_impl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 317,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-07-03T00:59:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b163ddc_25846c3b",
      "range": {
        "startLine": 317,
        "startChar": 41,
        "endLine": 317,
        "endChar": 48
      },
      "revId": "534f074b81aeec53c361a85badef08dbe4f1bd3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b769f70_1d06c82e",
        "filename": "fpdfsdk/pwl/cpwl_edit_impl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 329,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-07-02T20:22:27Z",
      "side": 1,
      "message": "Calling Redo() / Undo() inside of another Redo() / Undo() adds re-entrancy to CPWL_EditImpl. In general, the possibility of re-entrancy can make it harder to write correct code. Can we avoid doing that?\n\nSee the description for https://pdfium-review.googlesource.com/57170 for an example of where an assumption about how CPWL_EditImpl works breaks down with re-entrancy.",
      "revId": "534f074b81aeec53c361a85badef08dbe4f1bd3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7069393_737fff01",
        "filename": "fpdfsdk/pwl/cpwl_edit_impl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 329,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-07-02T20:35:48Z",
      "side": 1,
      "message": "I think we can avoid re-entrancy by making Redo() / Undo() return the number of additional redo/undo actions to take. Then CPWL_EditImpl_Undo::Redo() needs to use that return value to keep calling m_UndoItemStack[m_nCurUndoPos - 1]-\u003eRedo(). Similarly for Undo().",
      "parentUuid": "0b769f70_1d06c82e",
      "revId": "534f074b81aeec53c361a85badef08dbe4f1bd3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77a87346_d17a490a",
        "filename": "fpdfsdk/pwl/cpwl_edit_impl.cpp",
        "patchSetId": 12
      },
      "lineNbr": 329,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-07-03T00:59:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7069393_737fff01",
      "revId": "534f074b81aeec53c361a85badef08dbe4f1bd3a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}