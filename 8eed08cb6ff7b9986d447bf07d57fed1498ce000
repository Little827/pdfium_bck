{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3c85cccb_b65124c5",
        "filename": "core/fxge/dib/cfx_bitmapcomposer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-01-10T19:24:07Z",
      "side": 1,
      "message": "Do we need to multiply at line 80 only to divide here?\nAlso 255.0f in both places?",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 62
      },
      "revId": "8eed08cb6ff7b9986d447bf07d57fed1498ce000",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2954ae6_faecfc6a",
        "filename": "core/fxge/dib/cfx_bitmapcomposer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-01-10T19:51:32Z",
      "side": 1,
      "message": "I was trying to keep the pre-existing behavior, but I\u0027m fine with making the change. Now \"255\" is only in the else-branch.\n\nI checked 255 vs. 255.0f on Godbolt, and they generate the same code either way.",
      "parentUuid": "3c85cccb_b65124c5",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 62
      },
      "revId": "8eed08cb6ff7b9986d447bf07d57fed1498ce000",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472af493_9f6279b1",
        "filename": "core/fxge/dib/cfx_bitmapcomposer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-01-10T21:19:01Z",
      "side": 1,
      "message": "The pre-existing divide by 255 is meant to be an integer division, so no need to use 255.0f. Whereas a few places in this CL chain has divide by 255.0f to explicitly produce a float result to match the parameter that is changing from into to float. Those should go away, as more of the code use floats and pass that straight through.",
      "parentUuid": "a2954ae6_faecfc6a",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 62
      },
      "revId": "8eed08cb6ff7b9986d447bf07d57fed1498ce000",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48a32222_2d173bab",
        "filename": "core/fxge/dib/cfx_bitmapcomposer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-01-10T23:14:01Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "472af493_9f6279b1",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 62
      },
      "revId": "8eed08cb6ff7b9986d447bf07d57fed1498ce000",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24a5b742_fd707904",
        "filename": "core/fxge/dib/cfx_imagerenderer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-01-10T19:24:07Z",
      "side": 1,
      "message": "nit: maybe reads better if before the call we have\nconst bool flip_x \u003d m_Matrix.c \u003e 0;\nconst bool flip_y \u003d m_Matrix.b \u003c 0;",
      "range": {
        "startLine": 54,
        "startChar": 30,
        "endLine": 54,
        "endChar": 52
      },
      "revId": "8eed08cb6ff7b9986d447bf07d57fed1498ce000",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51f14be8_483d6008",
        "filename": "core/fxge/dib/cfx_imagerenderer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-01-10T19:51:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24a5b742_fd707904",
      "range": {
        "startLine": 54,
        "startChar": 30,
        "endLine": 54,
        "endChar": 52
      },
      "revId": "8eed08cb6ff7b9986d447bf07d57fed1498ce000",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}