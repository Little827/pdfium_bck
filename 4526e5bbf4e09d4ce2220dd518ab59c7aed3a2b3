{
  "comments": [
    {
      "key": {
        "uuid": "809da330_ac416686",
        "filename": "core/fxge/cfx_fontmapper.cpp",
        "patchSetId": 24
      },
      "lineNbr": 262,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-03T00:56:00Z",
      "side": 1,
      "message": "This function matches uppercase Unicode characters (code points); I\u0027m wondering:\n\n1. If the types even makes sense, since we\u0027re using a ByteString here. (8-bit code units, with PDF names encoded in UTF-8)\n2. If this is too broad. Do we really want to support non-ASCII uppercase letters here?\n\nI think it would make sense to just limit this to \u0027A\u0027-\u0027Z\u0027; I don\u0027t know if we have a handy function for this. (We don\u0027t want this matching to be locale-sensitive, either.)",
      "range": {
        "startLine": 262,
        "startChar": 9,
        "endLine": 262,
        "endChar": 23
      },
      "revId": "4526e5bbf4e09d4ce2220dd518ab59c7aed3a2b3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68a59089_978f2f43",
        "filename": "core/fxge/cfx_fontmapper.cpp",
        "patchSetId": 24
      },
      "lineNbr": 272,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-03T00:56:00Z",
      "side": 1,
      "message": "Optional: ByteString::First() creates a (small) copy, which could be avoided here by using a span/ByteStringView. I don\u0027t know if we care enough to fix it, though; I imagine this operation will be pretty rare.",
      "range": {
        "startLine": 272,
        "startChar": 29,
        "endLine": 272,
        "endChar": 34
      },
      "revId": "4526e5bbf4e09d4ce2220dd518ab59c7aed3a2b3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}