{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b52a469c_eb0e9ed5",
        "filename": "fxbarcode/qrcode/BC_QRCoderEncoder.cpp",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-08-12T00:42:50Z",
      "side": 1,
      "message": "guess the compiler couldn\u0027t deduce this?",
      "range": {
        "startLine": 325,
        "startChar": 8,
        "endLine": 325,
        "endChar": 37
      },
      "revId": "462b2503e038cb5ce8dbf8d36605ea1c86f29390",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa5a5b81_ffdf16c5",
        "filename": "fxbarcode/qrcode/BC_QRCoderEncoder.cpp",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-08-12T00:47:03Z",
      "side": 1,
      "message": "That was the first thing I tried.\n\n```\n../../fxbarcode/qrcode/BC_QRCoderEncoder.cpp:324:5: error: no matching function for call to \u0027spancpy\u0027\n    fxcrt::spancpy(\n    ^~~~~~~~~~~~~~\n../../core/fxcrt/span_util.h:19:6: note: candidate template ignored: could not match \u0027span\u0027 against \u0027vector\u0027\nvoid spancpy(pdfium::span\u003cT\u003e dst, pdfium::span\u003cU\u003e src) {\n     ^\n1 error generated.\n```",
      "parentUuid": "b52a469c_eb0e9ed5",
      "range": {
        "startLine": 325,
        "startChar": 8,
        "endLine": 325,
        "endChar": 37
      },
      "revId": "462b2503e038cb5ce8dbf8d36605ea1c86f29390",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "462b2503e038cb5ce8dbf8d36605ea1c86f29390",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "462b2503e038cb5ce8dbf8d36605ea1c86f29390",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}