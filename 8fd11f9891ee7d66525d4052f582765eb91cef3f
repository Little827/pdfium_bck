{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2cf8dff5_c5f32943",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-11-11T01:25:10Z",
      "side": 1,
      "message": "Reads much nicer with spans, I think. thanks.",
      "revId": "8fd11f9891ee7d66525d4052f582765eb91cef3f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c09bf87c_c26385e2",
        "filename": "fxbarcode/oned/BC_OnedCode128Writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-11-11T01:25:10Z",
      "side": 1,
      "message": "Maybe AppendPattern() could return the remaining span (i.e. result_span.subspan(pos)) so these all become\n\nresult_span \u003d AppendPattern(result_span, {pattern, kPatternSize}, true);\n\nsince they all call subspan() immediately after. Or is that far too clever for our own good?",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 147,
        "endChar": 42
      },
      "revId": "8fd11f9891ee7d66525d4052f582765eb91cef3f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81c5cf89_4d8ae994",
        "filename": "fxbarcode/oned/BC_OnedCode128Writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-11-11T02:04:32Z",
      "side": 1,
      "message": "Good idea. Done.",
      "parentUuid": "c09bf87c_c26385e2",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 147,
        "endChar": 42
      },
      "revId": "8fd11f9891ee7d66525d4052f582765eb91cef3f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}