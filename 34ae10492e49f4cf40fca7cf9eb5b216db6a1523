{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e0a3399_d47c7b28",
        "filename": "fpdfsdk/fpdf_structtree.cpp",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-02-11T20:46:53Z",
      "side": 1,
      "message": "Maybe more compactly written follows, with a pattern similar to FPDF_StructElement_GetChildAtIndex() above:\n\n```\nCPDF_StructElement* parent \u003d elem ? elem-\u003eGetParent() : nullptr;\nif (!parent)\n  return nullptr;\n  \nreturn FPDFStructElementFromCPDFStructElement(parent);\n```",
      "revId": "34ae10492e49f4cf40fca7cf9eb5b216db6a1523",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ad46f6d_5cb1f102",
        "filename": "fpdfsdk/fpdf_structtree.cpp",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 8786
      },
      "writtenOn": "2022-02-11T22:16:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e0a3399_d47c7b28",
      "revId": "34ae10492e49f4cf40fca7cf9eb5b216db6a1523",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79219c2f_3fa505e0",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-02-11T20:35:35Z",
      "side": 1,
      "message": "Since the caller uses `parent` to get a handle to `child` in the first place, doesn\u0027t the caller already know who the parent of `child` is?",
      "revId": "34ae10492e49f4cf40fca7cf9eb5b216db6a1523",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b62442a_90f11392",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 8786
      },
      "writtenOn": "2022-02-11T22:16:50Z",
      "side": 1,
      "message": "If we do that, we would differ from how it is implemented. If we had implemented StructureTree using \"K\" dictionary then we would know who the parent is. But we instead implemented it using \"ParentTree\" which ideally would be same but this is exactly what we saw during the construction. We anyway keep parent in the \"P\" entry of the dictionary but since we have wrapped it all into internal structure, it is good to have a clean API.",
      "parentUuid": "79219c2f_3fa505e0",
      "revId": "34ae10492e49f4cf40fca7cf9eb5b216db6a1523",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c312d7ec_e219ef3d",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-02-12T00:32:32Z",
      "side": 1,
      "message": "My question isn\u0027t about the implementation. It\u0027s about the API and why it\u0027s necessary to provide FPDF_StructElement_GetParent(). Isn\u0027t this just going around in circles, given the caller already has `parent`?\n\nIs the concern that there are struct elements, where the parent element points to a child element via /K, but the child element doesn\u0027t point back to the parent via /P?",
      "parentUuid": "0b62442a_90f11392",
      "revId": "34ae10492e49f4cf40fca7cf9eb5b216db6a1523",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5750c578_effaf8fe",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 8786
      },
      "writtenOn": "2022-02-12T00:39:43Z",
      "side": 1,
      "message": "\"Is the concern that there are struct elements, where the parent element points to a child element via /K, but the child element doesn\u0027t point back to the parent via /P?\"\n\nIt is possible. Also implementation matters because parent traversed through K may not be same as one from P.\n\nAlso, child only have parent if they are storing it, there is no direct way otherwise. For instance if you are recursively calling a function with StructElem in signature, you won\u0027t have parent unless you keep track of it. It just makes writing code much easier for the client and makes it look complete from specification side without someone digging deep into code.",
      "parentUuid": "c312d7ec_e219ef3d",
      "revId": "34ae10492e49f4cf40fca7cf9eb5b216db6a1523",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e704efe0_ad887aca",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 341,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-02-11T20:46:53Z",
      "side": 1,
      "message": "Isn\u0027t the parent of `parent` an object of type StructTreeRoot and no longer a StructElem? Given the API is to for fetching StructElem objects, this is by design, right?\n\nIf that\u0027s the case, can we rephrase this comment to make it clearer this is what the API is suppose to do. The first time I read this, I thought there was a bug in the API.",
      "revId": "34ae10492e49f4cf40fca7cf9eb5b216db6a1523",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77300631_4d21f127",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 341,
      "author": {
        "id": 8786
      },
      "writtenOn": "2022-02-11T22:16:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e704efe0_ad887aca",
      "revId": "34ae10492e49f4cf40fca7cf9eb5b216db6a1523",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}