{
  "comments": [
    {
      "key": {
        "uuid": "10f236e7_7a3e6e27",
        "filename": "fpdfsdk/cpdfsdk_annothandlermgr.cpp",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T18:49:33Z",
      "side": 1,
      "message": "nit: last_annot?",
      "range": {
        "startLine": 247,
        "startChar": 31,
        "endLine": 247,
        "endChar": 40
      },
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6aa314de_c1612ae9",
        "filename": "fpdfsdk/cpdfsdk_annothandlermgr.cpp",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 7659
      },
      "writtenOn": "2020-04-07T19:20:24Z",
      "side": 1,
      "message": "Added it in camel case to keep it consistent with the surrounding code, let me know if you think if i should switch to snake case for this block.",
      "parentUuid": "10f236e7_7a3e6e27",
      "range": {
        "startLine": 247,
        "startChar": 31,
        "endLine": 247,
        "endChar": 40
      },
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1958c8c_c975ffff",
        "filename": "fpdfsdk/cpdfsdk_annothandlermgr.cpp",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T19:29:41Z",
      "side": 1,
      "message": "Or \"end_annot\" ? Since this is either the first or last annotation.\n\nThough its use exists, in PDFium, camelCase is never the right style. It\u0027s either Hungarian style or snake_case. Having 2 styles is already not good. Let\u0027s not have 3.",
      "parentUuid": "10f236e7_7a3e6e27",
      "range": {
        "startLine": 247,
        "startChar": 31,
        "endLine": 247,
        "endChar": 40
      },
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbbf718e_447a8369",
        "filename": "fpdfsdk/cpdfsdk_annothandlermgr.cpp",
        "patchSetId": 15
      },
      "lineNbr": 257,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T19:29:41Z",
      "side": 1,
      "message": "Is this always the same pointer as |pPageView|?",
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9b6b0c9_8019e0d3",
        "filename": "fpdfsdk/cpdfsdk_annothandlermgr.h",
        "patchSetId": 15
      },
      "lineNbr": 129,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T18:49:33Z",
      "side": 1,
      "message": "I don\u0027t think this name is very clear, but at the same time, I don\u0027t have a great suggestion. Maybe GetFirstOrLastFocusableAnnot() ?",
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d65c28c_49c6c343",
        "filename": "fpdfsdk/cpdfsdk_annothandlermgr.h",
        "patchSetId": 15
      },
      "lineNbr": 129,
      "author": {
        "id": 7659
      },
      "writtenOn": "2020-04-07T19:20:24Z",
      "side": 1,
      "message": "The function above this is named GetNextAnnot() where we get next and previous annot, so i modeled it in the same way. \nChanging it to the suggested name as its more informative than the current name.\n\nRenamed the function in XFA as well.",
      "parentUuid": "c9b6b0c9_8019e0d3",
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d379f1d4_6c7e8f63",
        "filename": "fpdfsdk/cpdfsdk_annothandlermgr.h",
        "patchSetId": 15
      },
      "lineNbr": 129,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T19:29:41Z",
      "side": 1,
      "message": "The existing code may not always be the best.",
      "parentUuid": "9d65c28c_49c6c343",
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73493481_79ebd54e",
        "filename": "fpdfsdk/fpdf_formfill_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 737,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T18:49:33Z",
      "side": 1,
      "message": "Wrap this in EXPECT_TRUE(). Even though the out parameters are being checked, it is just good form to consistently check return results.",
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17fbbc5b_1a1ab023",
        "filename": "fpdfsdk/fpdf_formfill_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 737,
      "author": {
        "id": 7659
      },
      "writtenOn": "2020-04-07T19:20:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73493481_79ebd54e",
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7064f876_d5b49403",
        "filename": "fpdfsdk/fpdf_formfill_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 772,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T18:49:33Z",
      "side": 1,
      "message": "FX_ArraySize(kExpectedAnnotIndex)",
      "range": {
        "startLine": 772,
        "startChar": 25,
        "endLine": 772,
        "endChar": 26
      },
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d65bbc4_ac0ff990",
        "filename": "fpdfsdk/fpdf_formfill_embeddertest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 772,
      "author": {
        "id": 7659
      },
      "writtenOn": "2020-04-07T19:20:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7064f876_d5b49403",
      "range": {
        "startLine": 772,
        "startChar": 25,
        "endLine": 772,
        "endChar": 26
      },
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26908fd6_65427dfb",
        "filename": "fpdfsdk/fpdfxfa/cpdfxfa_page.cpp",
        "patchSetId": 15
      },
      "lineNbr": 214,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T18:49:33Z",
      "side": 1,
      "message": "How about using a ternary operator like in the other \"GetLast\" methods?\n\nreturn page_view-\u003eGetAnnotByXFAWidget(last ? widget_iterator-\u003eMoveToLast() : widget_iterator-\u003eMoveToFirst());\n\nMaybe shorten |widget_iterator| to \"it\" as there are no other iterators to be confused with.",
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80705795_88a05e33",
        "filename": "fpdfsdk/fpdfxfa/cpdfxfa_page.cpp",
        "patchSetId": 15
      },
      "lineNbr": 214,
      "author": {
        "id": 7659
      },
      "writtenOn": "2020-04-07T19:20:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26908fd6_65427dfb",
      "revId": "6e71081f184d8fe526af4037c04332036c04f5b0",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}