{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3ac3362a_b7620486",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-02-01T00:58:28Z",
      "side": 1,
      "message": "This is what it might look like.  Pretty acceptable I think.",
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09a86773_a45654b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9516
      },
      "writtenOn": "2024-02-01T16:44:07Z",
      "side": 1,
      "message": "High level feedback: The new unsafe macro keyword should be used like in rust: as narrowly as possible and with a comment explaining how it\u0027s impossible for anything to go wrong.",
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4f6a2c0_528935bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-02-01T16:59:56Z",
      "side": 1,
      "message": "Yeah, I\u0027d wrapped them around places that I\u0027d thought would be easy to read and would not mess up clang formatting.  Generally, this looks pretty bad unless there is a {} block inside the macro.  Which means if there are locals declared, we\u0027d either move them outside the block or use many individual applications of the macro.",
      "parentUuid": "09a86773_a45654b7",
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3219c87_7b02def7",
        "filename": "core/fxcrt/bytestring.cpp",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 9516
      },
      "writtenOn": "2024-02-01T16:44:07Z",
      "side": 1,
      "message": "Many of these look like they can be applied much more narrowly to individual expressions, which is much easier to document safety for and review/think about.",
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "545cd89c_dee44d32",
        "filename": "core/fxcrt/bytestring.h",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 9516
      },
      "writtenOn": "2024-02-01T16:44:07Z",
      "side": 1,
      "message": "These should all come with a SAFETY comment explaining how they are sound for any possible state, or a TODO saying they are not actually sound",
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe4fd745_c303cfd0",
        "filename": "core/fxcrt/bytestring.h",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-02-01T16:59:56Z",
      "side": 1,
      "message": "Or alternativley, the UNSAFFE_BUFFER_USAGE keyword to propogate the effect to callers, right?",
      "parentUuid": "545cd89c_dee44d32",
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33b91ed8_67eb0d93",
        "filename": "core/fxcrt/fx_memory_pa.cpp",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-02-01T00:58:28Z",
      "side": 1,
      "message": "THIS.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 22
      },
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08be9b60_f953eaae",
        "filename": "core/fxcrt/fx_string.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 9516
      },
      "writtenOn": "2024-02-01T16:44:07Z",
      "side": 1,
      "message": "only this needs to be wrapped in UNSAFE_BUFFERS() right?",
      "range": {
        "startLine": 59,
        "startChar": 29,
        "endLine": 59,
        "endChar": 51
      },
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef4f6c2e_2fb24de4",
        "filename": "core/fxcrt/fx_string.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-02-01T16:59:56Z",
      "side": 1,
      "message": "I guess so, is this safe to use around expressions or just statements?",
      "parentUuid": "08be9b60_f953eaae",
      "range": {
        "startLine": 59,
        "startChar": 29,
        "endLine": 59,
        "endChar": 51
      },
      "revId": "1d210ea0966bb38ad5fafb1ec80531b82f7dd394",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}