{
  "comments": [
    {
      "key": {
        "uuid": "77f54019_851ed2f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-02T17:53:18Z",
      "side": 1,
      "message": "\"Sting\" -\u003e \"String\"",
      "range": {
        "startLine": 7,
        "startChar": 7,
        "endLine": 7,
        "endChar": 12
      },
      "revId": "c6579693f5992f166ee7acaec6910914f5e5690f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6706cdde_22e33b09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-02T17:53:18Z",
      "side": 1,
      "message": "Optional: I might use \"character codes\" instead of \"code values\", to be more consistent with the PDF specification.",
      "range": {
        "startLine": 11,
        "startChar": 21,
        "endLine": 11,
        "endChar": 32
      },
      "revId": "c6579693f5992f166ee7acaec6910914f5e5690f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aecddaad_e709bc4d",
        "filename": "core/fpdfapi/font/cpdf_tounicodemap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-02T17:53:18Z",
      "side": 1,
      "message": "Note: You probably can replace this with pdfium::make_optional(), but it won\u0027t help that much after you switch the type of \"result\" from uint32_t, so I probably wouldn\u0027t bother.",
      "range": {
        "startLine": 84,
        "startChar": 9,
        "endLine": 84,
        "endChar": 35
      },
      "revId": "c6579693f5992f166ee7acaec6910914f5e5690f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c272cf11_6daa62ba",
        "filename": "core/fpdfapi/font/cpdf_tounicodemap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-02T17:53:18Z",
      "side": 1,
      "message": "To minimize behavioral changes in this CL, consider using \"code.value_or(0)\" to continue treating StringToCode() as if it returned 0 for errors (instead of nullopt).\n\nIt doesn\u0027t look like we have test coverage for HandleBeginBFChar(), so this isn\u0027t detectable currently. Let\u0027s make sure to add some sooner or later.",
      "range": {
        "startLine": 145,
        "startChar": 6,
        "endLine": 145,
        "endChar": 12
      },
      "revId": "c6579693f5992f166ee7acaec6910914f5e5690f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "852c1cc8_ffe39176",
        "filename": "core/fpdfapi/font/cpdf_tounicodemap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-02T17:53:18Z",
      "side": 1,
      "message": "Because the names are so similar, it\u0027s difficult to keep track of the difference between low_code/lowcode, and high/high_code/highcode. Can you make these names more distinct?\n\nFor example, instead of using low_code/high_code (which we\u0027ll use a lot less than lowcode/highcode), I might replace these names with something longer that makes it clear they\u0027re optionals. (\"parsed_lowcode\", say, or \"maybe_lowcode\", or \"lowcode_or_error\", or even \"optional_lowcode\", although that last one gets a bit too close to encoding the type into the variable name.)",
      "range": {
        "startLine": 166,
        "startChar": 25,
        "endLine": 166,
        "endChar": 32
      },
      "revId": "c6579693f5992f166ee7acaec6910914f5e5690f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}