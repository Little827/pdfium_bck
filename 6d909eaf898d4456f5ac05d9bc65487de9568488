{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bd41827c_b426727a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Thanks for putting this together. I think we should work out the API first, as that will affect everything else.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6af3f289_2d6ffc3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "I forgot to kick off the try bots earlier. I think all the XFA bots will fail here.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "824c9b39_84dc361c",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 506,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "PDFium generally don\u0027t print errors to stderr. Just returning false is fine.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d83968b8_88d83c63",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 513,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "FWIW, I would suggest trying to use Google C++ style in new code, or use the existing code style (typically Hungarian notation) if that looks really out of place with existing code. Here, \"startingIndex\" is neither of those styles.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db1fd281_478195c0",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "++i ?\n\nThere are a few other places that can use operator++ or operator--.",
      "range": {
        "startLine": 514,
        "startChar": 41,
        "endLine": 514,
        "endChar": 47
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cd84fc4_8067ba43",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 549,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Use a range-based for-loop instead?",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f422ae_820bea0c",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4137,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "PDFium (and Chromium in general) do not use TestWithParam to iterate through test cases. FPDFEditReorderEmbedderTest should just inherit from EmbedderTest, and the test cases can just be a for-loop in the test case itself.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41a55d77_7712a2aa",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4139,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "\"pagenum\" is probably a slightly better name. I oftentimes expand this to \"page no\" and then wonder \"no? why not?\"",
      "range": {
        "startLine": 4139,
        "startChar": 30,
        "endLine": 4139,
        "endChar": 36
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "943548c3_9808c964",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4156,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "This isn\u0027t necessary. Just call document().",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b7970d7_276008bc",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4157,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Also not necessary. This is protected in EmbedderTest, so if FPDFEditReorderEmbedderTest derived from EmbedderTest, then it can access it.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8ee4618_0c39f428",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4183,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 4183,
        "startChar": 51,
        "endLine": 4183,
        "endChar": 54
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89125d7b_d6fc90e3",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Is deletion a requirement for this API?",
      "range": {
        "startLine": 129,
        "startChar": 27,
        "endLine": 129,
        "endChar": 39
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0f4e2f1_f7c7cf41",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "The documentation needs to clearly state somewhere that it takes page indices and not page numbers.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc83fe13_2d29c77f",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "If the PDF document has 1000 pages, the caller needs to pass in an array of 1000 elements, even if they just need to reorder 2 pages within?",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d1b454d_2bc40c0d",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-10-25T19:08:04Z",
      "side": 1,
      "message": "Yes.\n\nI realize this is not convenient for other clients, but Ink keeps track of page reorders and deletions by keeping an array of the old page indices, which represents the new order of pages. So we could easily just pass that into this PDFium API.\n\nI considered trying to submit an API similar to adlr@\u0027s abandoned CL (https://pdfium-review.googlesource.com/c/pdfium/+/56235/) but it would be a lot of complicated logic for Ink to figure out how to translate its array of old page indices to PDFium MovePage calls.",
      "parentUuid": "dc83fe13_2d29c77f",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d07fc2f9_a444acf7",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T20:46:01Z",
      "side": 1,
      "message": "WDYT about an API that just moved 1 page at a time? e.g. FPDF_BOOL FPDFPage_Move(FPDF_DOCUMENT document, int page_index, int new_page_index)\n\nThen [A, B, C, D] \u003d\u003e [A, C] can be:\n// Doesn\u0027t even need a new API.\nFPDFPage_Delete(doc, 3);\nFPDFPage_Delete(doc, 1);\n\nThen [A, B, C, D] \u003d\u003e [C, A] can be:\nFPDFPage_Delete(doc, 3);\nFPDFPage_Delete(doc, 1);\nFPDFPage_Move(doc, 1, 0);  // Or FPDFPage_Move(doc, 0, 1)\n\nThen [A, B, C, D] \u003d\u003e [B, C, A, D]\nFPDFPage_Move(doc, 1, 0);  // [B, A, C, D]\nFPDFPage_Move(doc, 2, 1);  // [B, C, A, D]\n\nBeing simpler, input validation would be a lot easier. It shouldn\u0027t be too hard to transform a vector that contains what the end result should be into a set of FPDFPage_Move() calls, right?",
      "parentUuid": "5d1b454d_2bc40c0d",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b5dc382_b7af6acf",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-10-25T20:54:08Z",
      "side": 1,
      "message": "I considered an API like that from adlr@\u0027s abandoned CL. \n\nIt would be inefficient for Ink to make up to O(n) FPDFPage_Move calls. If our new page order looks like [3, 2, 1, 0], we would have to call\n\nFPDFPage_Move(3, 0);\nFPDFPage_Move(2, 1);\nFPDFPage_Move(1, 2);\n\nEach FPDFPage_Move call deletes the pages starting from min(page_index, new_page_index) and reinserts them in the new order.",
      "parentUuid": "d07fc2f9_a444acf7",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75dc28ad_dca90e24",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "Yes, moving one page at a time would be less efficient, as many data internal structures are std::vector based. Though in practice it might be ok, because:\n\na) The number of pages is usually small. Even 100,000 pages can be shuffled around relatively quickly.\nb) This API doesn\u0027t get called that often, compared to page rendering APIs for example.\n\nEfficiency is certainly important, but in this case, it is a trade off against API simplicity. Either way, since the API starts off in an experimental state, we can try it out and see how it goes.",
      "parentUuid": "3b5dc382_b7af6acf",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "447ae097_816e32cf",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Thinking of other inputs... can the caller pass in duplicate page indices? e.g. [0, 0], 2?",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93b8574d_31ad4659",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "All new APIs need to start out in the experimental state. PDFium uses a comment above the API to indicate this. Look around for examples.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5be62b82_d60f0cde",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "const int*, as FPDFPage_Reorder() does not write into `dest_page_order`, right?",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}