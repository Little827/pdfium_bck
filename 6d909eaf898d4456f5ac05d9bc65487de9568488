{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bd41827c_b426727a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Thanks for putting this together. I think we should work out the API first, as that will affect everything else.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6af3f289_2d6ffc3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "I forgot to kick off the try bots earlier. I think all the XFA bots will fail here.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36896403_4a1118a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T22:28:07Z",
      "side": 1,
      "message": "It\u0027s fine if the API doesn\u0027t work for XFA PDFs. However, it needs to work for non-XFA PDFs when PDFium\u0027s XFA support is enabled.",
      "parentUuid": "6af3f289_2d6ffc3c",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62513728_41b10c26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Do I need to do something special to get it to work for non-XFA PDFs when XFA support is enabled?",
      "parentUuid": "36896403_4a1118a5",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cad193d6_66c63d64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-11-02T17:59:25Z",
      "side": 1,
      "message": "Given the failing XFA bots, yes. When XFA support is compiled in, page handling going through a different class. Look at CPDF_Page vs. CPDFXFA_Page.",
      "parentUuid": "62513728_41b10c26",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "824c9b39_84dc361c",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 506,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "PDFium generally don\u0027t print errors to stderr. Just returning false is fine.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ec3de76_277f80a8",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 506,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Does PDFium print errors at all? Seems bad for client debugging.",
      "parentUuid": "824c9b39_84dc361c",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1f345c7_66ece05e",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 506,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-11-02T17:59:25Z",
      "side": 1,
      "message": "Nope. Just like when POSIX open() fails, it doesn\u0027t print anything either.\n\nThere is FPDF_GetLastError(), but that is generally only used for PDF loading.",
      "parentUuid": "4ec3de76_277f80a8",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d83968b8_88d83c63",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 513,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "FWIW, I would suggest trying to use Google C++ style in new code, or use the existing code style (typically Hungarian notation) if that looks really out of place with existing code. Here, \"startingIndex\" is neither of those styles.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c5bc6eb_633acf39",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 513,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d83968b8_88d83c63",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db1fd281_478195c0",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "++i ?\n\nThere are a few other places that can use operator++ or operator--.",
      "range": {
        "startLine": 514,
        "startChar": 41,
        "endLine": 514,
        "endChar": 47
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d593ea57_eff8a3b2",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 514,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db1fd281_478195c0",
      "range": {
        "startLine": 514,
        "startChar": 41,
        "endLine": 514,
        "endChar": 47
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cd84fc4_8067ba43",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 549,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Use a range-based for-loop instead?",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41e6aa30_f4ed8a57",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 549,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cd84fc4_8067ba43",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90796ac0_a9e0608a",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 1
      },
      "lineNbr": 549,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-11-02T17:59:25Z",
      "side": 1,
      "message": "A range-based for-loop looks like:\n\nfor (CPDF_Dictionary* pPage : pPagesToKeep) {\n  DoSomethingWith(pPage);\n}",
      "parentUuid": "41e6aa30_f4ed8a57",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f422ae_820bea0c",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4137,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "PDFium (and Chromium in general) do not use TestWithParam to iterate through test cases. FPDFEditReorderEmbedderTest should just inherit from EmbedderTest, and the test cases can just be a for-loop in the test case itself.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0387eb8e_f412fc01",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4137,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77f422ae_820bea0c",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41a55d77_7712a2aa",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4139,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "\"pagenum\" is probably a slightly better name. I oftentimes expand this to \"page no\" and then wonder \"no? why not?\"",
      "range": {
        "startLine": 4139,
        "startChar": 30,
        "endLine": 4139,
        "endChar": 36
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c63dd71b_2c6fac35",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4139,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41a55d77_7712a2aa",
      "range": {
        "startLine": 4139,
        "startChar": 30,
        "endLine": 4139,
        "endChar": 36
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "943548c3_9808c964",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4156,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "This isn\u0027t necessary. Just call document().",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faa1468b_00c74ac0",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4156,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "943548c3_9808c964",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b7970d7_276008bc",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4157,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Also not necessary. This is protected in EmbedderTest, so if FPDFEditReorderEmbedderTest derived from EmbedderTest, then it can access it.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60326bb0_dab3f816",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4157,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b7970d7_276008bc",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8ee4618_0c39f428",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4183,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 4183,
        "startChar": 51,
        "endLine": 4183,
        "endChar": 54
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a59ba79_bdedf062",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4183,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8ee4618_0c39f428",
      "range": {
        "startLine": 4183,
        "startChar": 51,
        "endLine": 4183,
        "endChar": 54
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89125d7b_d6fc90e3",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Is deletion a requirement for this API?",
      "range": {
        "startLine": 129,
        "startChar": 27,
        "endLine": 129,
        "endChar": 39
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30f2d893_d3c7df74",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Do you mean: is the page deletion API required to implement this page reorder API? Yes. \n\nIs the caller required to delete pages using the page order API? No, but they can, if they specify a page order that is missing an index, e.g. dest_page_order of [0, 1, 3] will delete page 2.",
      "parentUuid": "89125d7b_d6fc90e3",
      "range": {
        "startLine": 129,
        "startChar": 27,
        "endLine": 129,
        "endChar": 39
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "775670f4_ba6d8986",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-11-02T17:59:25Z",
      "side": 1,
      "message": "I\u0027m asking if FPDFPage_Reorder(), as an API, regardless of the implementation, has to support page deletion. Similarly, while the current implementation can copy pages, is that a requirement for this API?\n\nIn general, I\u0027m in favor of simpler APIs that are easier to understand, implement, and test. FPDFPage_Reorder(), as is, seems to be a \"do it all\" API. So before we discuss the implementation, I want to first figure out the API, which means asking if deletion is required, or if it just happens to be a capability that one gets with the current implementation.",
      "parentUuid": "30f2d893_d3c7df74",
      "range": {
        "startLine": 129,
        "startChar": 27,
        "endLine": 129,
        "endChar": 39
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47558d12_ec6b8b0e",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T18:15:23Z",
      "side": 1,
      "message": "Ah, I see. \n\nInk needs FPDFPage_Reorder() to be able to delete pages. It does not need the API to be able to copy pages right now, but I can see it being useful for us in the future. Many PDF editors allow the user to copy a page.\n\nCopying is a capability that one gets with the current implementation. I think it would be great to have simpler APIs like FPDFPage_MovePage(), and FPDFPage_CopyPage(), that manipulate pages one at a time... in addition to this very powerful API. This powerful API should actually be used to implement simpler APIs. It is extremely useful for Ink, and its implementation is actually very simple, so it could be used to prevent duplicate code in implementations of simpler APIs.\n\nWDYT?",
      "parentUuid": "775670f4_ba6d8986",
      "range": {
        "startLine": 129,
        "startChar": 27,
        "endLine": 129,
        "endChar": 39
      },
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0f4e2f1_f7c7cf41",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "The documentation needs to clearly state somewhere that it takes page indices and not page numbers.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c609e4e0_bbd8f3e0",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0f4e2f1_f7c7cf41",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc83fe13_2d29c77f",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "If the PDF document has 1000 pages, the caller needs to pass in an array of 1000 elements, even if they just need to reorder 2 pages within?",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d1b454d_2bc40c0d",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-10-25T19:08:04Z",
      "side": 1,
      "message": "Yes.\n\nI realize this is not convenient for other clients, but Ink keeps track of page reorders and deletions by keeping an array of the old page indices, which represents the new order of pages. So we could easily just pass that into this PDFium API.\n\nI considered trying to submit an API similar to adlr@\u0027s abandoned CL (https://pdfium-review.googlesource.com/c/pdfium/+/56235/) but it would be a lot of complicated logic for Ink to figure out how to translate its array of old page indices to PDFium MovePage calls.",
      "parentUuid": "dc83fe13_2d29c77f",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d07fc2f9_a444acf7",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T20:46:01Z",
      "side": 1,
      "message": "WDYT about an API that just moved 1 page at a time? e.g. FPDF_BOOL FPDFPage_Move(FPDF_DOCUMENT document, int page_index, int new_page_index)\n\nThen [A, B, C, D] \u003d\u003e [A, C] can be:\n// Doesn\u0027t even need a new API.\nFPDFPage_Delete(doc, 3);\nFPDFPage_Delete(doc, 1);\n\nThen [A, B, C, D] \u003d\u003e [C, A] can be:\nFPDFPage_Delete(doc, 3);\nFPDFPage_Delete(doc, 1);\nFPDFPage_Move(doc, 1, 0);  // Or FPDFPage_Move(doc, 0, 1)\n\nThen [A, B, C, D] \u003d\u003e [B, C, A, D]\nFPDFPage_Move(doc, 1, 0);  // [B, A, C, D]\nFPDFPage_Move(doc, 2, 1);  // [B, C, A, D]\n\nBeing simpler, input validation would be a lot easier. It shouldn\u0027t be too hard to transform a vector that contains what the end result should be into a set of FPDFPage_Move() calls, right?",
      "parentUuid": "5d1b454d_2bc40c0d",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b5dc382_b7af6acf",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-10-25T20:54:08Z",
      "side": 1,
      "message": "I considered an API like that from adlr@\u0027s abandoned CL. \n\nIt would be inefficient for Ink to make up to O(n) FPDFPage_Move calls. If our new page order looks like [3, 2, 1, 0], we would have to call\n\nFPDFPage_Move(3, 0);\nFPDFPage_Move(2, 1);\nFPDFPage_Move(1, 2);\n\nEach FPDFPage_Move call deletes the pages starting from min(page_index, new_page_index) and reinserts them in the new order.",
      "parentUuid": "d07fc2f9_a444acf7",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75dc28ad_dca90e24",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "Yes, moving one page at a time would be less efficient, as many data internal structures are std::vector based. Though in practice it might be ok, because:\n\na) The number of pages is usually small. Even 100,000 pages can be shuffled around relatively quickly.\nb) This API doesn\u0027t get called that often, compared to page rendering APIs for example.\n\nEfficiency is certainly important, but in this case, it is a trade off against API simplicity. Either way, since the API starts off in an experimental state, we can try it out and see how it goes.",
      "parentUuid": "3b5dc382_b7af6acf",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fdb4b35_75ff5a14",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Thanks! Marked it as experimental.",
      "parentUuid": "75dc28ad_dca90e24",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "447ae097_816e32cf",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "Thinking of other inputs... can the caller pass in duplicate page indices? e.g. [0, 0], 2?",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df33f20b_2796bc0b",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Duplicate page indices are allowed and my implementation supports it, so I will document that input. This would allow clients to copy pages as well.",
      "parentUuid": "447ae097_816e32cf",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93b8574d_31ad4659",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-25T18:50:13Z",
      "side": 1,
      "message": "All new APIs need to start out in the experimental state. PDFium uses a comment above the API to indicate this. Look around for examples.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e276dcbb_9017423a",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93b8574d_31ad4659",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5be62b82_d60f0cde",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-29T21:08:37Z",
      "side": 1,
      "message": "const int*, as FPDFPage_Reorder() does not write into `dest_page_order`, right?",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98177dea_26c9deaa",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T16:25:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5be62b82_d60f0cde",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33e5e0c1_a04f1fc4",
        "filename": "testing/embedder_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-11-02T17:59:25Z",
      "side": 1,
      "message": "Was this removed intentionally? If this was failing, I think it may mean something is wrong with the calling code. In which case, try fixing the calling code and not just remove the existing failing check.",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1365eee8_e714523a",
        "filename": "testing/embedder_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 8711
      },
      "writtenOn": "2021-11-02T18:15:23Z",
      "side": 1,
      "message": "Yes, I removed intentionally. If I don\u0027t remove it, then I can\u0027t call EmbedderTest::OpenDocument again after calling EmbedderTest::CloseDocument. Then what is the purpose of having a CloseDocument function, if I can\u0027t call OpenDocument again?",
      "parentUuid": "33e5e0c1_a04f1fc4",
      "revId": "6d909eaf898d4456f5ac05d9bc65487de9568488",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}