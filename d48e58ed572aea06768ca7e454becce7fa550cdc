{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0852ba43_aa4e0252",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-02T23:52:25Z",
      "side": 1,
      "message": "Thanks for the review!",
      "revId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90589e9a_a0f0b05b",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 2
      },
      "lineNbr": 767,
      "author": {
        "id": 7620
      },
      "writtenOn": "2023-06-02T22:12:56Z",
      "side": 1,
      "message": "Out of curiosity, what\u0027s performance difference between the following two paths to generate SkImage:\n(1) Use SkPixmap ctor + SkImages::RasterFromPixmap()\n(2) Create SkBitmap first (use installPixels()) + use SkBitmap::asImage()",
      "range": {
        "startLine": 767,
        "startChar": 9,
        "endLine": 767,
        "endChar": 45
      },
      "revId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e84c5119_de69c365",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 2
      },
      "lineNbr": 767,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-02T22:29:42Z",
      "side": 1,
      "message": "asImage() creates a copy if the SkBitmap is not immutable. (We make it immutable in all these cases, though.) Otherwise, there\u0027s no significant difference, but the immutable SkImage can be optimized elsewhere.",
      "parentUuid": "90589e9a_a0f0b05b",
      "range": {
        "startLine": 767,
        "startChar": 9,
        "endLine": 767,
        "endChar": 45
      },
      "revId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7caccf1c_78f5c81f",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 2
      },
      "lineNbr": 767,
      "author": {
        "id": 7620
      },
      "writtenOn": "2023-06-02T22:39:39Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e84c5119_de69c365",
      "range": {
        "startLine": 767,
        "startChar": 9,
        "endLine": 767,
        "endChar": 45
      },
      "revId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f88e9c38_fee1aee5",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1800,
      "author": {
        "id": 7620
      },
      "writtenOn": "2023-06-02T22:12:56Z",
      "side": 1,
      "message": "Accidental space?",
      "revId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dde158d_20e53ae6",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1800,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-02T22:29:42Z",
      "side": 1,
      "message": "Intentional. This makes the beginning and the ending of the function more consistent.",
      "parentUuid": "f88e9c38_fee1aee5",
      "revId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f0b2bab_77074397",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1800,
      "author": {
        "id": 7620
      },
      "writtenOn": "2023-06-02T22:39:39Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8dde158d_20e53ae6",
      "revId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "d48e58ed572aea06768ca7e454becce7fa550cdc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}