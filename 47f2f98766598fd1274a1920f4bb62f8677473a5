{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "81917f2c_946abbd1",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-05-11T23:46:16Z",
      "side": 1,
      "message": "Can this function just skip negative values and not add them to the list?",
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "575ba6d4_3b66914c",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-05-11T23:55:45Z",
      "side": 1,
      "message": "Not sure.  I thought these arrays might be parallel with each other with one entry in each for each trailer.",
      "parentUuid": "81917f2c_946abbd1",
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d2c6663_abcdb0d0",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-05-12T18:29:43Z",
      "side": 1,
      "message": "Maybe we should put the values in a struct, to avoid having 2 vectors where the elements / sizes get out of sync.\n\nAnyway, can we just add negative numbers as is to `xref_stream_list` then? When line 407 reads it, check it\u0027s greater than 0 and not just non-zero.",
      "parentUuid": "575ba6d4_3b66914c",
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e2306c8_c0beb237",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 364,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-05-12T20:07:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d2c6663_abcdb0d0",
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e66ae49_d29f23da",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 372,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-05-11T23:46:53Z",
      "side": 1,
      "message": "Note sometimes we call GetDirectInterger(dict) and other times dict-\u003eGetIntegerFor() which makes consolidating this into a helper less helpful.",
      "range": {
        "startLine": 372,
        "startChar": 16,
        "endLine": 372,
        "endChar": 32
      },
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f619fe4_b2fa896a",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 373,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-05-11T23:46:16Z",
      "side": 1,
      "message": "And instead, line 375 should make sure `xref_offset` has not gone negative.",
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f0f46fc_16008d34",
        "filename": "core/fpdfapi/parser/cpdf_parser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 373,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-05-11T23:55:45Z",
      "side": 1,
      "message": "except that we update it at 391 do more work at 397.  The whole loop is terrible and be combined with line 372 someday.",
      "parentUuid": "2f619fe4_b2fa896a",
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "391a6c77_1a69dde7",
        "filename": "fpdfsdk/fpdf_dataavail_embeddertest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 393,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-05-11T23:46:16Z",
      "side": 1,
      "message": "I don\u0027t feel too strongly about it, but another possibility is to write ParserTest test cases, where the dummy PDF data goes in a string constant.",
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bc39d05_8ac05d4f",
        "filename": "fpdfsdk/fpdf_dataavail_embeddertest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 393,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-05-11T23:55:45Z",
      "side": 1,
      "message": "This kinda needs correct offsets, I\u0027d think so hence the .in file.",
      "parentUuid": "391a6c77_1a69dde7",
      "revId": "47f2f98766598fd1274a1920f4bb62f8677473a5",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}