{
  "pushCert": "certificate version 0.1\npusher 5A66FD7B 1580336892 -0800\nnonce AC6AUtNs3ev4o6OD6U2WM5AjWKvUqSibGzz+wTNiFJY7Qv46eoohnhL/FzyrI+gUCKae+DaaDRw2\n\n0000000000000000000000000000000000000000 a90d42444f7409b270efdc14994d207e15192894 refs/for/refs/heads/master%wip,m\u003dInitial_upload,cc\u003dpdfium-reviews@googlegroups.com\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEE5k8iyLVP2jn8A19DqzYtYVpm/XsFAl4yBvwACgkQqzYtYVpm\n/Xu2dwf9HR9NLzhw9T7Ag2ywINKAGflEaQ2JC3agLtDUiOKzqARMAA8U/Ux5b9M0\npUrlKxzkdd8pi4kximjOjDz68GmecekSZUq5rI2Id8/Flx2K2lCCUvZ3dMU1Y2So\nB8peWdME5aeoOucoMzgBDKNufza2PxDE/yEvly8t2mJCytL1Ol3dnmUkDb9NmwD0\nTvQUTzrZgoIhzxIOXFZLk72UBdkhvOgJV8kEmdFayxxBkFCEiEs48SkrbFqcgpMW\ntWSzSttdgTCX+/hQ6+pFnNj9qIVP5cYtmOPg57iQUa6NbY83Xeh4jGYOFlEXJYBd\niq6qqjqEjCZwtvE7Cw9selUmFnxAKw\u003d\u003d\n\u003d+8n2\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "a7ae7699_732d4f24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "\"Unsuppress\"",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 5
      },
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d9bb8c1_cdea7612",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-30T00:45:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7ae7699_732d4f24",
      "range": {
        "startLine": 13,
        "startChar": 4,
        "endLine": 13,
        "endChar": 5
      },
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9dffb079_21fbb7d6",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-29T23:50:16Z",
      "side": 1,
      "message": "Note: I tried putting a CHECK() here, rebuilt, ran pdfium_test on 10K+ PDFs, and didn\u0027t ever hit the CHECK(). Given the lack of PDFs from the wild to test with, I\u0027m just handling this one particular condition that we do have a test PDF for. I\u0027m going to try generating some of my own PDFs later to see if we can do more here, but for now, this is all I want to do.",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79b3b828_676c4fb9",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "9dffb079_21fbb7d6",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cafc892f_c98d1cf5",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "Does this require that pdf_colorspace-\u003eCountComponents() \u003d\u003d 3, or is that not required?",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ee141e3_13222ba8",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-30T00:45:10Z",
      "side": 1,
      "message": "Added to limit the fix. When we get more samples, we can adjust as necessary.",
      "parentUuid": "cafc892f_c98d1cf5",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70a80e5e_ce5af257",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "Idea: Not going to push hard for this, but another way to refactor this could be to replace \"swap_rgb\" and \"convert_argb_to_rgb\" with helper functions per dimension that map from an enumerator to a boolean.\n\nExample:\n\n  IsSwapRgb(JpxDecodeAction action) \u003d\u003e true if kUseRgb, kConvertArgbToRgb...\n  IsConvertArgbToRgb(...) \u003d\u003e true if kConvertArgbToRgb...",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c7be293_980334d8",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-30T00:45:10Z",
      "side": 1,
      "message": "Feels a bit disconnected - slightly harder to see when the condition is true. I\u0027m going to leave this as is for now.",
      "parentUuid": "70a80e5e_ce5af257",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "151b844d_e90862dc",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 664,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T01:13:41Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "4c7be293_980334d8",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8421bb8c_070a089d",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 704,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "Speculation: This function keeps getting longer. I wonder if any of this can be broken out into helper functions? (Like a, \"convert bitmap from ARGB-to-RGB\" function, for example.)",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ad97992_bb402e9b",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 704,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-30T00:45:10Z",
      "side": 1,
      "message": "I\u0027ll follow up on this, and try to see if there\u0027s more opportunities to consolidate similar code.",
      "parentUuid": "8421bb8c_070a089d",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b58ef6d_87070b5d",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "Nit: This seems like a poor use of auto. I need to refer back to pCachedBitmap, which was also defined using auto, and then finally read the type from MakeRetain\u003cCFX_DIBitmap\u003e.",
      "range": {
        "startLine": 706,
        "startChar": 4,
        "endLine": 706,
        "endChar": 8
      },
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40e63e19_26837e27",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-30T00:45:10Z",
      "side": 1,
      "message": "|pCachedBitmap| is also assigned to using MakeRetain() on the next line, but I\u0027ll remove the auto. That\u0027s just lazy copy + pasting.",
      "parentUuid": "0b58ef6d_87070b5d",
      "range": {
        "startLine": 706,
        "startChar": 4,
        "endLine": 706,
        "endChar": 8
      },
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21413064_363b3f9b",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 707,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "Optional: Maybe using swap (RetainedPtr::Swap?) with original_bitmap and pCachedBitmap would make this a bit clearer?\n\nThe idea of doing a swap also suggests to me that it might make sense to do the conversion into a new bitmap, and then swap the new bitmap pointer over the cached bitmap pointer at the end (rather than doing the swap first, and then writing to pCachedBitmap).\n\nI think this depends on what you want the final state to be on an error, though. For example, if the Create() on line 708 fails, is it better to have an empty pCachedBitmap, or whatever was there before?\n\nNit: It\u0027s also a little confusing to have Hungarian notation for pCachedBitmap, and then not for original_bitmap.",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc14588_c590b615",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 707,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-30T00:45:10Z",
      "side": 1,
      "message": "It feels sufficiently straightforward to me. Roughly the Unix cmdline equivalent is:\n\nmv existing.txt new.txt\ntouch existing.txt\n\nCan you explain how Swap() makes this clearer?\n\nAs for Hungarian notation - this method is already mixing them. So I\u0027m just goint to write new code here in the preferred style. Will switch Hungarian notation names over later.",
      "parentUuid": "21413064_363b3f9b",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82679244_4425083e",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 707,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T01:13:41Z",
      "side": 1,
      "message": "I think the more important question I had is what the correct state should be if Create() fails. To use your analogy, what should we do if this happens:\n\n1. mv existing.txt new.txt\n2. touch existing.txt\n3. edit existing.txt # fail without modifying\n\nShould existing.txt be empty (option A), or should it have the old contents from new.txt (option B)? If the former, the current code is fine. If the latter, the code needs to be different (more like the atomic rename performed when editing a file in place).\n\nWith regards to using RetainPtr::Swap(), I think I find the existing code slightly less readable because of this:\n\n  auto original_bitmap \u003d std::move(pCachedBitmap);  // pCachedBitmap invalidated\n\nI then have to read the following line to know what happens to pCachedBitmap:\n\n  pCachedBitmap \u003d MakeRetain\u003cCFX_DIBitmap\u003e();  // oh, going to use it as a new bitmap now\n\nSomething like this feels slightly more readable to me:\n\n  auto original_bitmap \u003d MakeRetain\u003cCFX_DIBitmap\u003e();  // creating a new bitmap\n  pCachedBitmap.Swap(original_bitmap);  // old and new bitmaps exchange places\n\nIt\u0027s a very, very minor thing, though. Also, if we go with option B, I don\u0027t know if swapping still makes sense anyway:\n\n  auto new_bitmap \u003d MakeRetain\u003cCFX_DIBitmap\u003e();\n  CopyRgbToNewBitmap(pCachedBitmap, new_bitmap);\n  pCachedBitmap \u003d std::move(new_bitmap);  // don\u0027t care about new_bitmap, won\u0027t use again",
      "parentUuid": "8fc14588_c590b615",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf3d01f3_1659ec36",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "Just making sure: ARGB is A as the 4th component?\n\n(Also, I\u0027d like to think there\u0027s some SIMD instruction that can do this, but no need to micro-optimize right now...)",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "651026d9_30c876c5",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:28:22Z",
      "side": 1,
      "message": "Another thought: Instead of dropping the alpha component entirely, perhaps we could make a soft mask out of it (as with /SMaskInData)? That doesn\u0027t seem to be something we support now, but could be a possible FR or TODO.",
      "parentUuid": "bf3d01f3_1659ec36",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "587a9cd4_f536bd40",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-30T00:45:10Z",
      "side": 1,
      "message": "I believe the 4th component is the alpha. I can add a TODO to check and see how that\u0027s handled.\n\nI\u0027m hoping we can consolidate the code first, and then optimize.",
      "parentUuid": "bf3d01f3_1659ec36",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d15c83e_42cfff15",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 715,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T01:13:41Z",
      "side": 1,
      "message": "I went ahead and filed crbug.com/pdfium/1469 for adding /SMaskInData support. (It looks like the only reference to this in the code base currently is for fuzzing.)",
      "parentUuid": "587a9cd4_f536bd40",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "828612c9_af20b452",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 717,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-30T00:12:54Z",
      "side": 1,
      "message": "Optional: Might be better if these magic numbers (3/4/3) could be replaced with symbolic constants, if there are any convenient ones. If there aren\u0027t, it\u0027s probably clear enough...",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ded3d60_d13395b9",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 1
      },
      "lineNbr": 717,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-30T00:45:10Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "828612c9_af20b452",
      "revId": "a90d42444f7409b270efdc14994d207e15192894",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}