{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "23ae35d7_5953792f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-10-24T20:38:47Z",
      "side": 1,
      "message": "LG/w nit.",
      "revId": "062b9c6dfa234244fa10f3f0b5e7eda6b9cd0507",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a6184b6_1c9f6ca1",
        "filename": "core/fpdfapi/font/cpdf_font.h",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-10-24T20:38:47Z",
      "side": 1,
      "message": "nit:  probably const FXFT_FaceRec* , but none of the others are ... and a lot of code would change ?",
      "range": {
        "startLine": 143,
        "startChar": 36,
        "endLine": 143,
        "endChar": 48
      },
      "revId": "062b9c6dfa234244fa10f3f0b5e7eda6b9cd0507",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e38cbe5_6c8be4af",
        "filename": "core/fpdfapi/font/cpdf_font.h",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-10-24T21:18:54Z",
      "side": 1,
      "message": "Oftentimes, `face` gets passed to FreeType, and FreeType APIs take a non-const handle. I\u0027m just going to leave it as-is, since nearly all code is written this way.",
      "parentUuid": "6a6184b6_1c9f6ca1",
      "range": {
        "startLine": 143,
        "startChar": 36,
        "endLine": 143,
        "endChar": 48
      },
      "revId": "062b9c6dfa234244fa10f3f0b5e7eda6b9cd0507",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19ed15f4_cf403b47",
        "filename": "core/fpdfapi/font/cpdf_font.h",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-10-24T22:15:21Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3e38cbe5_6c8be4af",
      "range": {
        "startLine": 143,
        "startChar": 36,
        "endLine": 143,
        "endChar": 48
      },
      "revId": "062b9c6dfa234244fa10f3f0b5e7eda6b9cd0507",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "062b9c6dfa234244fa10f3f0b5e7eda6b9cd0507",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "062b9c6dfa234244fa10f3f0b5e7eda6b9cd0507",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}