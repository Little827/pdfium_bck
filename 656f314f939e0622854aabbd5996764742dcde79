{
  "comments": [
    {
      "key": {
        "uuid": "4528963c_35f98073",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-11T00:04:44Z",
      "side": 1,
      "message": "A final metapoint: N is always supposed to be max(object number) + 1, which seems like a pretty easy rule to follow (no counting necessary). In the (currently) rare cases you need a custom trailer, it doesn\u0027t seem that onerous to maintain this manually.",
      "range": {
        "startLine": 27,
        "startChar": 61,
        "endLine": 28,
        "endChar": 21
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "297db3e7_36ebc3c1",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 7659
      },
      "writtenOn": "2020-03-11T14:37:59Z",
      "side": 1,
      "message": "Can we add an entry similar to this one for this scenario. I think this enhancement could provide a way to handcraft password protected files as well.",
      "range": {
        "startLine": 13,
        "startChar": 2,
        "endLine": 13,
        "endChar": 72
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8eae4e7_4dd51875",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-11T00:00:45Z",
      "side": 1,
      "message": "\"size\" is pretty generic. (For example, {{streamlen}} wasn\u0027t simply {{length}}.) Maybe we should name this something else?\n\nMaybe {{trailersize}} would best fit existing precedent, although I don\u0027t think it reads particularly well.",
      "range": {
        "startLine": 44,
        "startChar": 18,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4f97c5e_c9cf3791",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-03-11T00:08:14Z",
      "side": 1,
      "message": "pdfobjsize perhaps?\nor pdfsize?\n\nI\u0027m open to bikeshed.",
      "parentUuid": "a8eae4e7_4dd51875",
      "range": {
        "startLine": 44,
        "startChar": 18,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09410d58_5c21777f",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-11T00:19:22Z",
      "side": 1,
      "message": "On a side note (since you\u0027ve used this term multiple times now), I\u0027d be more selective in using the term \"bikeshed\". ðŸ˜Š Not every naming discussion is a bikeshed.",
      "parentUuid": "f4f97c5e_c9cf3791",
      "range": {
        "startLine": 44,
        "startChar": 18,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "553681c3_01c67faa",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-11T00:00:45Z",
      "side": 1,
      "message": "Seems like this might as well be {{size}}.",
      "range": {
        "startLine": 48,
        "startChar": 54,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "606e6f55_1cf6708a",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-03-11T00:08:14Z",
      "side": 1,
      "message": "That\u0027s what I had in PS1. I changed my mind and thought this would be \"cleaner\".",
      "parentUuid": "553681c3_01c67faa",
      "range": {
        "startLine": 48,
        "startChar": 54,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "475d6e36_23242d39",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-11T00:00:45Z",
      "side": 1,
      "message": "Of course, this means there\u0027s an order-dependence between this branch and the next one, which doesn\u0027t apply to any of the other replacements.\n\nI would note this in a comment, or even better, avoid the double-replacement behavior entirely by just duplicating the logic for the /Size entry.",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 108,
        "endChar": 62
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5dc2df5_e3c3454c",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-03-11T00:08:14Z",
      "side": 1,
      "message": "Duplication seems reasonable, but maybe isn\u0027t as clean looking.",
      "parentUuid": "475d6e36_23242d39",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 108,
        "endChar": 62
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab86c217_8f7031c3",
        "filename": "testing/tools/fixup_pdf_template.py",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-11T00:19:22Z",
      "side": 1,
      "message": "A helper method could address that, but it\u0027s basically self.SIZE_TOKEN vs. (self.max_object_number + 1), which doesn\u0027t seem worth extracting.",
      "parentUuid": "a5dc2df5_e3c3454c",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 108,
        "endChar": 62
      },
      "revId": "656f314f939e0622854aabbd5996764742dcde79",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}