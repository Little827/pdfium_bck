{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "646029f0_394fc7ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-04-01T21:05:01Z",
      "side": 1,
      "message": "How do we keep the list up to date?",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c27002f_6dfa3086",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-04-01T21:24:17Z",
      "side": 1,
      "message": "Ideally, there is a +/- syntax coming, where all the top-level directories will be opted in, and only exceptions will be listed.  This is a rough cut to see how far there is to go.",
      "parentUuid": "646029f0_394fc7ca",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "151d8b0e_2b058be4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-04-01T22:06:06Z",
      "side": 1,
      "message": "Should we wait for that syntax before landing something? i.e. Keep this in local for now.",
      "parentUuid": "6c27002f_6dfa3086",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c33dcb08_58449390",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-04-01T23:06:52Z",
      "side": 1,
      "message": "I\u0027m not sure about when this might arrive ...",
      "parentUuid": "151d8b0e_2b058be4",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b4ca7e1_4f0c3a3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-04-01T23:21:24Z",
      "side": 1,
      "message": "Can we talk to danakj@ about that? I would love to be able to have a file that\u0027s:\n\n```\n+*\n-core/fdrm/fx_crypt.cpp\n[250 more entries to eventually remove]\n-xfa/fxfa/parser/xfa_utils_unittest.cpp\n```\n\nThen all new files have to use safe buffers by default, and the list would be 1/8 as long. While the current model treats new files as allow unsafe by default.",
      "parentUuid": "c33dcb08_58449390",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77aeaafa_4eaae143",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9666
      },
      "writtenOn": "2024-04-01T23:30:40Z",
      "side": 1,
      "message": "Definitely agree there are some ergonomics + maintenance issues with the current approach, and we\u0027ll need to make improvements to make this deployable at larger scale in Chromium. But we haven\u0027t spec\u0027d the \"next right way\" yet and, even once we do, we need to build and roll a new Clang plugin everywhere to light it up. So probably a couple weeks out modulo other interrupts.\n\nSo it seems like there\u0027s real value to checking this file in now to \"lock in\" this set, avoid backsliding, and allow parallel effort on bringing new files into the fold while the new syntax is designed, implemented, and rolled out.\n\nAlso I have a presentation soon where it\u0027d be helpful to show we have more lines of code covered by this warning. This is a terrible reason! But maybe it can break a tie.",
      "parentUuid": "c33dcb08_58449390",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29ad800d_51d02987",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-04-02T01:42:13Z",
      "side": 1,
      "message": "Here\u0027s a somewhat wild idea:\n\n1) Instead of using //pdfium_unsafe_buffers_paths.txt, use a generated file in the gen/ sub-dir inside the out directory.\n2) Create another .txt file with the ~250 entries to exclude.\n3) Add a script that uses GN data to generate the file based on (1) and (2).\n\nThen that would achieve the safe-by-default property, while only maintaining a 250 line entry file with the unsafe files. Of course, (3) may be as much work as just changing the unsafe_buffers_paths.txt syntax.\n\nThe presentation can have an asterisk on the graph? :-)",
      "parentUuid": "77aeaafa_4eaae143",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30b3f10f_938733b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9516
      },
      "writtenOn": "2024-04-02T17:42:29Z",
      "side": 1,
      "message": "I can work on the `-` syntax this week.",
      "parentUuid": "29ad800d_51d02987",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e695c6aa_3e97b134",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-04-02T18:18:54Z",
      "side": 1,
      "message": "Thanks. FWIW, I tried writing a GN querying tool: https://pdfium-review.googlesource.com/118090, but the problem currently is that it takes ~30 seconds to run all the `gn desc` commands serially.",
      "parentUuid": "30b3f10f_938733b7",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "813a2241_f581e347",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-04-08T22:59:00Z",
      "side": 1,
      "message": "Not sure if there is a good way to refer to the out/ directory when setting the gn variables.  I can certainly land some of the remediations without having the full config other than locally, I suppose.",
      "parentUuid": "29ad800d_51d02987",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea8ce7df_f8119b92",
        "filename": "pdfium_unsafe_buffers_paths.txt",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-04-01T21:05:01Z",
      "side": 1,
      "message": "Needs trailing slash, per line 10?",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bb9f0c9_9f65726a",
        "filename": "pdfium_unsafe_buffers_paths.txt",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-04-01T21:24:17Z",
      "side": 1,
      "message": "yep. done.",
      "parentUuid": "ea8ce7df_f8119b92",
      "revId": "4036546e5d8c61d71921a01381e3f5e902329900",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}