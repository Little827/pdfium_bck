{
  "pushCert": "certificate version 0.1\npusher 5A66FD7B 1576260787 -0800\nnonce AC6AUtOroBWQ7YPVs4gSpNYQaNAukr1H8gwFbTtYaUvvv5B3ms0zvm+uF5vWkzYIlRx5MfGcUvnD\n\n0000000000000000000000000000000000000000 3fe9bc1a843a613608fe858d6b782d2a7f3df06c refs/for/refs/heads/master%notify\u003dNONE,m\u003dfix\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEE5k8iyLVP2jn8A19DqzYtYVpm/XsFAl3z1LMACgkQqzYtYVpm\n/XsFYQgAs14qtIa7JaXLMab7i89vhXSRrlnE6SWNkhektWf0EJ/M15y3bqeZxcnZ\nykocmWR3i47BryJU7tuqYn59FTuyRq17ILyIA7rBYptr0FxrOr2LP9tsRylIOHZk\nGbqa0UhMjaZH+mAIQvKI8zc5I6uQsSHJoWiVwKQEhawJLIgcNAL7HCjNQzaTMmeh\nPaQLNl9xEPzmQe/IkFh52KjolmrVb03iVCdVz4r1AHeH2LVkC1AROxnFxigiG5vq\nc3O1RrztuKmS4He7E8tw5wVbkSylxXNl/Wdoyc/L2FDEmre5hkO9MdF5cFyEKk/G\nyQ6oYgOepoynCqvBWK3R710m8T6KvQ\u003d\u003d\n\u003dSjds\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "2a8c886a_10c85a34",
        "filename": "core/fxcrt/widestring.cpp",
        "patchSetId": 2
      },
      "lineNbr": 280,
      "author": {
        "id": 5495
      },
      "writtenOn": "2019-12-13T20:36:42Z",
      "side": 1,
      "message": "can we template this on a function rather than passing a lambda?  Debug builds might be really slow if it doesn\u0027t inline things.",
      "range": {
        "startLine": 280,
        "startChar": 11,
        "endLine": 280,
        "endChar": 34
      },
      "revId": "3fe9bc1a843a613608fe858d6b782d2a7f3df06c",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26b0b059_5a528b9a",
        "filename": "core/fxcrt/widestring.cpp",
        "patchSetId": 2
      },
      "lineNbr": 280,
      "author": {
        "id": 5495
      },
      "writtenOn": "2019-12-13T21:21:59Z",
      "side": 1,
      "message": "This is complicated because we can\u0027t use a lambda as a template arg, else  error: lambda-expression in template-argument is produced, so it would have to look like:\n\ninline uint16_t swerp(uint16_t x) { return (x \u003e\u003e 8) | (x \u003c\u003c 8); }\n\ntemplate \u003cuint16_t(*P)(uint16_t)\u003e\nvoid FromUTF16WithPredicate(uint16_t* buf, size_t len) {\n  ...\n      buf[i] \u003d P(wstr[i]);\n  ...\n\n}\n\nthen invoke like FromUTF16WithPredicate\u003cswerp\u003e(p, len) which looks more C++-like.",
      "parentUuid": "2a8c886a_10c85a34",
      "range": {
        "startLine": 280,
        "startChar": 11,
        "endLine": 280,
        "endChar": 34
      },
      "revId": "3fe9bc1a843a613608fe858d6b782d2a7f3df06c",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b00c3a3_84d3ba38",
        "filename": "core/fxcrt/widestring.cpp",
        "patchSetId": 2
      },
      "lineNbr": 280,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-19T06:06:43Z",
      "side": 1,
      "message": "I wrote a micro benchmark just to test locally. This version is indeed 5x slower in debug builds. With the template optimization instead of std::function, the performance is about the same as the function pointer version.",
      "parentUuid": "26b0b059_5a528b9a",
      "range": {
        "startLine": 280,
        "startChar": 11,
        "endLine": 280,
        "endChar": 34
      },
      "revId": "3fe9bc1a843a613608fe858d6b782d2a7f3df06c",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be48772f_91218be7",
        "filename": "core/fxcrt/widestring.cpp",
        "patchSetId": 2
      },
      "lineNbr": 961,
      "author": {
        "id": 5495
      },
      "writtenOn": "2019-12-13T21:21:59Z",
      "side": 1,
      "message": "can we write this as ((wch \u003e\u003e 8) \u0026 0xff) | ((wch \u0026 0xff) \u003c\u003c 8)\n\nI worry about arguments silently promoted to ints, and wch is 32bits excecpt on win.",
      "range": {
        "startLine": 961,
        "startChar": 50,
        "endLine": 961,
        "endChar": 73
      },
      "revId": "3fe9bc1a843a613608fe858d6b782d2a7f3df06c",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a31d1e2d_39150795",
        "filename": "core/fxcrt/widestring.cpp",
        "patchSetId": 2
      },
      "lineNbr": 961,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-19T06:06:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be48772f_91218be7",
      "range": {
        "startLine": 961,
        "startChar": 50,
        "endLine": 961,
        "endChar": 73
      },
      "revId": "3fe9bc1a843a613608fe858d6b782d2a7f3df06c",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}