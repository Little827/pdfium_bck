{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1af9e372_bcb24f1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 3293871
      },
      "writtenOn": "2024-05-31T21:21:56Z",
      "side": 1,
      "message": "I didn\u0027t manage to find any `v8::FunctionTemplate`s created with signatures and I didn\u0027t find any `v8::Signature::New(..)` usages in PDFium. For this case `info.Holder()` is equal to `info.This()` (see https://source.chromium.org/chromium/chromium/src/+/main:v8/include/v8-function-callback.h;l\u003d125;drc\u003d2b8b8c15ea96feadd34e04ca947e5f05069e3b24;bpv\u003d1;bpt\u003d1).\n\nso, LGTM\n\nAre there other `info.Holder()` usages?",
      "revId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be75e8d7_4afcd033",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 3293871
      },
      "writtenOn": "2024-05-31T21:31:10Z",
      "side": 1,
      "message": "Answering my own question. Here are they (only left in PDFium): https://source.chromium.org/chromium/chromium/src/+/main:v8/include/v8-function-callback.h;l\u003d589;drc\u003d2b8b8c15ea96feadd34e04ca947e5f05069e3b24;bpv\u003d1;bpt\u003d1",
      "parentUuid": "1af9e372_bcb24f1d",
      "revId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0827585d_9a079557",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-05-31T21:43:54Z",
      "side": 1,
      "message": "Yes, there are a few.  For these, I think we need some way to get holder() if V8 isn\u0027t going to provide it.  Does that involve walking a prototype chain and invoking something like HasOwnProperty() or is there a better approach?",
      "parentUuid": "be75e8d7_4afcd033",
      "revId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86909546_23fbd549",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-05-31T21:51:54Z",
      "side": 1,
      "message": "Cleanup of these 4 usages at https://pdfium-review.googlesource.com/c/pdfium/+/119950?forceReload\u003dtrue while we try to progress on the others.",
      "revId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "042c4e42_6fb91930",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 3293871
      },
      "writtenOn": "2024-05-31T23:07:52Z",
      "side": 1,
      "message": "Holder() for Api functions callbacks is different (and simpler) than a Holder() for property or interceptor callbacks. For functions Holder() is literally either `This()` or, if the function was created with `v8::Signature` matching global object (V8\u0027s JSGlobalProxy), a global object\u0027s prototype (V8\u0027s JSGlobalObject).\n\nI believe we are falling into the former category (no functions with `v8::Signatures`).",
      "parentUuid": "0827585d_9a079557",
      "revId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1397d9a3_82edfe2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 3293871
      },
      "writtenOn": "2024-05-31T23:36:21Z",
      "side": 1,
      "message": "I found signature usages: https://source.chromium.org/chromium/chromium/src/+/main:third_party/pdfium/fxjs/cfxjs_engine.cpp;drc\u003d2b8b8c15ea96feadd34e04ca947e5f05069e3b24;bpv\u003d1;bpt\u003d1;l\u003d210\n\nSo, the question is whether we ever use that for install properties on global objects?\n\nThe main \"observable\" differences between `This/Holder` for global object are:\n1) they might have different values of internal fields,\n2) they belong to different places in the prototype chain (holder will be one step higher), so if the Api function tries to `GetPrototype()` then there will be a difference.\n\nI see the following ways of fixing the potential issues:\nFix1) we should ensure that we install the same values into global object and its direct prototype,\nFix2) we should use `v8::Object::GetPrototypeV2()`, it\u0027ll skip JSGlobalObject and equalize `info.Holder().GetPrototype()` with `info.This().GetPrototypeV2()`.\n\nFrom the JavaScript property getting/setting perspective there are no differences between This() and Holder().",
      "parentUuid": "042c4e42_6fb91930",
      "revId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3e42acc_a0422950",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-06-01T00:16:35Z",
      "side": 1,
      "message": "Looking at this, I\u0027m not entirely sure why we are using signatures here.",
      "parentUuid": "1397d9a3_82edfe2f",
      "revId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "164a3f265847ac05bc8016529f85939c4c83bb8e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}