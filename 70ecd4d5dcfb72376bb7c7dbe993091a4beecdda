{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "72d7ee32_aa9b4fa6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-01-17T17:40:35Z",
      "side": 1,
      "message": "Thanks for the suggested patch. Before landing this, there are a few more investigations that will help justify a move to fp arithmetic.",
      "revId": "70ecd4d5dcfb72376bb7c7dbe993091a4beecdda",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d0c40f4_15ac43b1",
        "filename": "core/fxge/dib/cfx_imagetransformer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-01-17T17:40:35Z",
      "side": 1,
      "message": "This code in general, and the multiplication by kbase in particular, was an attempt from long ago to avoid floating-point arithmetic in favor of (at that time) more efficient fixed point arithmetic.  Do we still need to do this? I don\u0027t know.  You help settle the argument by measuring some timings of the old and new approaches on the platform of your choice.",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 25
      },
      "revId": "70ecd4d5dcfb72376bb7c7dbe993091a4beecdda",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b711177_0ba90ac6",
        "filename": "core/fxge/dib/cfx_imagetransformer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-01-17T17:40:35Z",
      "side": 1,
      "message": "kBase is an artifact of doing fixed-point interger arithmetic with 8 fractional bits.  So if we are moving to floating-point, we ought remove all references to kbase and do this in terms of the float value itself.",
      "range": {
        "startLine": 60,
        "startChar": 52,
        "endLine": 60,
        "endChar": 57
      },
      "revId": "70ecd4d5dcfb72376bb7c7dbe993091a4beecdda",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92a60ec3_b86d26d9",
        "filename": "core/fxge/dib/cfx_imagetransformer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-01-17T17:40:35Z",
      "side": 1,
      "message": "For your test case, it would be intersting to know what a-e are in the new and old world for a few points that diverge, and know why the float vs. fixed-point representations are so far apart.",
      "range": {
        "startLine": 76,
        "startChar": 1,
        "endLine": 76,
        "endChar": 16
      },
      "revId": "70ecd4d5dcfb72376bb7c7dbe993091a4beecdda",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8a34a89_4771bb2b",
        "filename": "core/fxge/dib/cfx_imagetransformer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-01-17T17:40:35Z",
      "side": 1,
      "message": "similarly, we\u0027d liekly want to propagate the floats downward rather than passing a discrete int value and a 8-bit fractional residue.",
      "range": {
        "startLine": 115,
        "startChar": 65,
        "endLine": 116,
        "endChar": 35
      },
      "revId": "70ecd4d5dcfb72376bb7c7dbe993091a4beecdda",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}