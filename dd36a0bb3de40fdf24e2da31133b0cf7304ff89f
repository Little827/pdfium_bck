{
  "pushCert": "certificate version 0.1\npusher 5A66FD7B 1632271308 -0700\npushee https://pdfium.googlesource.com/pdfium/\nnonce ALC2d18jmm48HmqRZ76L/h6HSufsc0vJAldFw6X2RhPXzHoBm6brxdUCnYmUQdWGygQ4a6NAkjRK\n\n0000000000000000000000000000000000000000 dd36a0bb3de40fdf24e2da31133b0cf7304ff89f refs/for/refs/heads/main%notify\u003dNONE,m\u003dfail2,l\u003dCommit-Queue+1\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEE5k8iyLVP2jn8A19DqzYtYVpm/XsFAmFKe8wACgkQqzYtYVpm\n/XvW9QgApkYtPrXRGtyR7Rrs9S6twUEHVnHmpjvwtyLcj34s5ItrbwrJdBJgMdPp\nGll+CgCrtyHIhp6RjLZNkhaSwpxcWsuF5TnvHKuVSIjxId+uqOy6xofkqfBoIXFv\ng/zCMgU8BxrK+ivoJB2+2GAP5PXRZGA//8OLJT/KBzefR6vId/QSwCeavd5768sB\nJIzb7phbc67WA4ZzxKci5EbxRvO2/tWPHjyFTQm3IlEZEztC7zRVupjPpzUrGrrz\nKZtLFEuB//yYMT2s+drubbP9Ljw5tijLnoqQc6XRERPW/s78Yb62RK8PKzj2zpHa\nzZz6phlh6bt57E+hYvG99yeaIPSxNg\u003d\u003d\n\u003d555z\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cffe9c1f_4b56d14a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 7704
      },
      "writtenOn": "2021-09-22T00:51:49Z",
      "side": 1,
      "message": "LGTM",
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a3662df_847a7529",
        "filename": "core/fxge/cfx_font.cpp",
        "patchSetId": 4
      },
      "lineNbr": 585,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T15:49:30Z",
      "side": 1,
      "message": "nit: Invert and early return of nullopt?",
      "range": {
        "startLine": 585,
        "startChar": 2,
        "endLine": 585,
        "endChar": 27
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de0d3d8f_ab5c8b74",
        "filename": "core/fxge/cfx_font.cpp",
        "patchSetId": 4
      },
      "lineNbr": 585,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-09-22T17:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a3662df_847a7529",
      "range": {
        "startLine": 585,
        "startChar": 2,
        "endLine": 585,
        "endChar": 27
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b67ca819_8e50f11e",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T15:49:30Z",
      "side": 1,
      "message": "nit: this is really counting output character pairs per line, and the constants might all be named to include the term CharPairs or some such\nsince we worry about overflowing the output line (not the input line)?",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 18
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb8c4f1d_1ccc8e4d",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T16:20:53Z",
      "side": 1,
      "message": "(Note: part of my confusion is the input is octets or bytes, not necessarily meaningful when interpreted directly as characters, right?)",
      "parentUuid": "b67ca819_8e50f11e",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 18
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b81f91bf_134e8663",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-09-22T17:04:57Z",
      "side": 1,
      "message": "Renamed and added comment. Hope that\u0027s clearer.",
      "parentUuid": "eb8c4f1d_1ccc8e4d",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 18
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a32bd88e_1b028890",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T15:49:30Z",
      "side": 1,
      "message": "you mean \u003d\u003d 1?  It seems odd to pad out an even length to an odd length.\nOr the so so clever FX_IsOdd() macro could strike here again.",
      "range": {
        "startLine": 77,
        "startChar": 27,
        "endLine": 77,
        "endChar": 32
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ba2510f_5b98c85e",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-09-22T17:04:57Z",
      "side": 1,
      "message": "That\u0027s what the spec says. https://adobe-type-tools.github.io/font-tech-notes/pdfs/5012.Type42_Spec.pdf#page\u003d13 right above section 4.3.",
      "parentUuid": "a32bd88e_1b028890",
      "range": {
        "startLine": 77,
        "startChar": 27,
        "endLine": 77,
        "endChar": 32
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d80b49b_3eb5cad9",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T15:49:30Z",
      "side": 1,
      "message": "The 0 + 0 - 1 case underflows to a large unsigned constant.",
      "range": {
        "startLine": 97,
        "startChar": 7,
        "endLine": 97,
        "endChar": 47
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1eb40ef3_1b26d7a6",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-09-22T17:04:57Z",
      "side": 1,
      "message": "- If the code has made it this far, `num_glyphs` is unlikely to be 0.\n- `glyphs_per_descendant_font` is always 256 in production, and only lower for testing. It is never 0, as that would cause a divide by 0 error as well. I added another DCHECK().",
      "parentUuid": "3d80b49b_3eb5cad9",
      "range": {
        "startLine": 97,
        "startChar": 7,
        "endLine": 97,
        "endChar": 47
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7e8b326_694c9e80",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T15:49:30Z",
      "side": 1,
      "message": "second memcpy here, the first took place when we made a bytestring from the stringstream for the result return from GenerateType42FontDictioary().  Maybe we can avoid this?",
      "range": {
        "startLine": 179,
        "startChar": 3,
        "endLine": 179,
        "endChar": 40
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1251cd9_ccc4a9f4",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-09-22T17:04:57Z",
      "side": 1,
      "message": "Do you see a better way to balance ease of testing with performance? Since this is used for printing, and printing doesn\u0027t happen that often, relatively speaking, the cost of \u003c 1 MB of data copying in memory (likely cached) per page isn\u0027t a deal breaker IMO.",
      "parentUuid": "c7e8b326_694c9e80",
      "range": {
        "startLine": 179,
        "startChar": 3,
        "endLine": 179,
        "endChar": 40
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "302466cc_07e87f9a",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T17:35:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a1251cd9_ccc4a9f4",
      "range": {
        "startLine": 179,
        "startChar": 3,
        "endLine": 179,
        "endChar": 40
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d49c6a6_7ec8b1e9",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 744,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T15:49:30Z",
      "side": 1,
      "message": "follow-up: Optional\u003costringstream\u003e return? Or are we appending to buf so it really is in-out?",
      "range": {
        "startLine": 744,
        "startChar": 0,
        "endLine": 744,
        "endChar": 4
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da731884_f1652854",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 744,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-09-22T17:04:57Z",
      "side": 1,
      "message": "Appending to `buf`.",
      "parentUuid": "9d49c6a6_7ec8b1e9",
      "range": {
        "startLine": 744,
        "startChar": 0,
        "endLine": 744,
        "endChar": 4
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71b07adc_5900e328",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 745,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T15:49:30Z",
      "side": 1,
      "message": "follow-up: span\u003cconst TextCharPos\u003e",
      "range": {
        "startLine": 744,
        "startChar": 42,
        "endLine": 745,
        "endChar": 70
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "324fdc17_09ceb64a",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 745,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-09-22T17:04:57Z",
      "side": 1,
      "message": "Yep, on the TODO list.",
      "parentUuid": "71b07adc_5900e328",
      "range": {
        "startLine": 744,
        "startChar": 42,
        "endLine": 745,
        "endChar": 70
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "603889c2_2fea3fb3",
        "filename": "core/fxge/win32/cfx_psrenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 745,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T17:35:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "324fdc17_09ceb64a",
      "range": {
        "startLine": 744,
        "startChar": 42,
        "endLine": 745,
        "endChar": 70
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5324c920_56d064eb",
        "filename": "core/fxge/win32/cfx_psrenderer_unittest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-09-22T15:49:30Z",
      "side": 1,
      "message": "nit: can\u0027t be constexpr because gtest makes undefined symbols from address of kExpected1DescendantFontResult, right?",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 7
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f1f3672_4c9555fd",
        "filename": "core/fxge/win32/cfx_psrenderer_unittest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-09-22T17:04:57Z",
      "side": 1,
      "message": "It can be. Done.",
      "parentUuid": "5324c920_56d064eb",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 7
      },
      "revId": "dd36a0bb3de40fdf24e2da31133b0cf7304ff89f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}