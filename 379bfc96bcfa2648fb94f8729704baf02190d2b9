{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9673664a_43809304",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 8751
      },
      "writtenOn": "2023-04-24T11:51:40Z",
      "side": 1,
      "message": "Thanks for this addition!",
      "revId": "379bfc96bcfa2648fb94f8729704baf02190d2b9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a42d36e_f9719f39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 8751
      },
      "writtenOn": "2023-04-24T14:22:24Z",
      "side": 1,
      "message": "And yet I\u0027m a bit doubtful if this is going in the right direction.\nWith `FPDFImageObj_GetImageMetadata()` there\u0027s always the problem that it may do more work than the caller actually needs. E. g. if you only want DPI, the other values are calculated unnecessarily.\nMaybe a single API function with flags of possible metadata params to retrieve would be (rsp. have been) better? Like this:\n```C\n#define FPDF_IMGMETA_SIZE 0x01,\n#define FPDF_IMGMETA_DPI 0x02,\n#define FPDF_IMGMETA_BPP 0x04,\n// and so on ...\n\nFPDFImageObj_GetMetadataByFlags(FPDF_PAGEOBJECT image, FPDF_PAGE page,\n                                FPDF_IMAGEOBJ_METADATA* metadata, int flags)\n```\nThen only the params requested by the caller would be set on the metadata object.\nIf further params are needed later, the function may be re-called with the same metadata object.",
      "parentUuid": "9673664a_43809304",
      "revId": "379bfc96bcfa2648fb94f8729704baf02190d2b9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee12843e_ca47041c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 8606
      },
      "writtenOn": "2023-04-27T06:28:01Z",
      "side": 1,
      "message": "It seems that this is not the most correct architectural solutions, it is better to have several methods to get specific values.\nIn any case, the final decision should be made by the authors of the project. @thestig@chromium.org what do you think about this?",
      "parentUuid": "6a42d36e_f9719f39",
      "revId": "379bfc96bcfa2648fb94f8729704baf02190d2b9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1abf2e12_78c914f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 8751
      },
      "writtenOn": "2023-04-27T12:05:47Z",
      "side": 1,
      "message": "Agreed my proposal above isn\u0027t elegant. (I guess the problem is unnecessary allocations for unused struct fields, right?)\n\nAnyway, thinking about this again, I guess it\u0027s too much fuss for little advantage.\nHaving a separate API for image size (as added here) is good as it\u0027s a very common operation, but actually I don\u0027t mind much if the other values can only be retrieved as a group. And after all, `GetImageMetadata()` usually runs quickly.",
      "parentUuid": "ee12843e_ca47041c",
      "revId": "379bfc96bcfa2648fb94f8729704baf02190d2b9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1356551e_17989b2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 8751
      },
      "writtenOn": "2023-04-27T12:06:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1abf2e12_78c914f9",
      "revId": "379bfc96bcfa2648fb94f8729704baf02190d2b9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41ce5ad3_8e61ff02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-04T01:02:29Z",
      "side": 1,
      "message": "WDYT about retiring FPDFImageObj_GetImageMetadata() in favor of more focused APIs?",
      "parentUuid": "1356551e_17989b2d",
      "revId": "379bfc96bcfa2648fb94f8729704baf02190d2b9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99f3df2e_9f02fa4c",
        "filename": "fpdfsdk/fpdf_editimg.cpp",
        "patchSetId": 5
      },
      "lineNbr": 425,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-04T00:52:51Z",
      "side": 1,
      "message": "I missed an issue here: the pointer on the LHS is unsigned int*, but the method on the RHS returns a signed int. I think this should be ok, as the dimensions are never negative, but using pdfium::base::checked_cast() can help ensure that\u0027s the case.",
      "revId": "379bfc96bcfa2648fb94f8729704baf02190d2b9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71590894_275205e9",
        "filename": "fpdfsdk/fpdf_editimg.cpp",
        "patchSetId": 5
      },
      "lineNbr": 425,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-05-04T01:02:29Z",
      "side": 1,
      "message": "Or maybe switch to int pointers. Most APIs do not use unsigned types for image dimensions.",
      "parentUuid": "99f3df2e_9f02fa4c",
      "revId": "379bfc96bcfa2648fb94f8729704baf02190d2b9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}