{
  "comments": [
    {
      "key": {
        "uuid": "bc5b3909_0fde3594",
        "filename": "fpdfsdk/fpdf_structtree.cpp",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-07-16T00:48:21Z",
      "side": 1,
      "message": "Maybe write:\n\nif (!dict)\n  return 0;\nreturn WideStringToBuffer(dict-\u003eGetUnicodeTextFor(\"ID\"), buffer, buflen);\n\nIf you find that to be more readable than the ternary operator that\u0027s a bit too long to fit on 1 line.",
      "revId": "98de19ee850ff763850d59688aaed11e992f7c4f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a0ce10f_41d33ea7",
        "filename": "fpdfsdk/fpdf_structtree.cpp",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 8056
      },
      "writtenOn": "2020-07-16T04:20:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc5b3909_0fde3594",
      "revId": "98de19ee850ff763850d59688aaed11e992f7c4f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebccf0a1_7362f1ce",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-07-16T00:48:21Z",
      "side": 1,
      "message": "Arg. I was expecting this to return 2, since an empty string is {NUL, NUL} in this case. Then I noticed fpdfsdk/fpdf_structtree.cpp has its own WideStringToBuffer(), which behaves slightly differently from Utf16EncodeMaybeCopyAndReturnLength().\n\nIn APIs that use Utf16EncodeMaybeCopyAndReturnLength() internally, callers can distinguish a return value of 0, which means error, from 2, which means empty string.\n\nWe may want to switch to Utf16EncodeMaybeCopyAndReturnLength() for the 2 new APIs in this CL and for FPDF_StructElement_GetStringAttribute(). Then think about what to do with the other existing callers to WideStringToBuffer().",
      "revId": "98de19ee850ff763850d59688aaed11e992f7c4f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "932bec87_9da476bc",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-07-16T01:03:30Z",
      "side": 1,
      "message": "FPDF_StructElement_GetAltText(), FPDF_StructElement_GetType(), and FPDF_StructElement_GetTitle() are affected. Since all of them are stable APIs, we would have to deprecate them and create new variants, if we want them to be consistent with APIs in other files. OTOH, nobody has ever complained about this, so maybe we should leave them as is, and continue using WideStringToBuffer() in new code in fpdf_structtree.cpp, so at least the struct tree APIs are consistent with each other.",
      "parentUuid": "ebccf0a1_7362f1ce",
      "revId": "98de19ee850ff763850d59688aaed11e992f7c4f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7b7df6b_aa0a1799",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 8056
      },
      "writtenOn": "2020-07-16T04:20:26Z",
      "side": 1,
      "message": "Distinguishing between empty and null sounds like a good idea, but I\u0027d\nexpect this example to return null if the document doesn\u0027t have an ID.\nI added an example where the ID is explicitly set to an empty string,\ni.e. () in the PDF, and then I modified the code to return 0 if the\nstring isn\u0027t present, and 2 if it\u0027s empty, using\nUtf16EncodeMaybeCopyAndReturnLength.\n\nI think that\u0027d actually be a worthwhile change for GetAlt, because\non the web at least there is an important semantic difference between\nno alt text, and explicitly empty alt text.\n\nOr did you expect it to always return an empty string? I\u0027m all for\nconsistency with the rest of Pdfium, but that seems surprising and\nless useful to me, honestly.",
      "parentUuid": "932bec87_9da476bc",
      "revId": "98de19ee850ff763850d59688aaed11e992f7c4f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9328ff5_8546aae1",
        "filename": "fpdfsdk/fpdf_structtree_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-07-21T01:07:34Z",
      "side": 1,
      "message": "Many PDFium APIs distinguish between failure and empty string. So the change to use Utf16EncodeMaybeCopyAndReturnLength() looks good, since you agree that the distinction is important. I\u0027ll file a bug for deprecating FPDF_StructElement_GetAltText() and the other affected APIs.",
      "parentUuid": "a7b7df6b_aa0a1799",
      "revId": "98de19ee850ff763850d59688aaed11e992f7c4f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}