{
  "comments": [
    {
      "key": {
        "uuid": "a9056235_59c6d75b",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 5
      },
      "lineNbr": 302,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-01-17T19:37:30Z",
      "side": 1,
      "message": "Nit: I kinda prefer this pattern when we have to keep an unowned reference to a moved, newly-created object:\n\nauto new_thing \u003d pdfium::MakeUnique\u003cThing\u003e();\nThing* thing \u003d new_thing.get();\nother-\u003eSetThing(std::move(new_thing));\n\nrather than calling static_cast\u003cThing\u003e(other-\u003eGetThing()) esp. when GetThing() returns a superclass of Thing.",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 302,
        "endChar": 2
      },
      "revId": "4905eccb1866a39657eddc629a9f1e79a8d01b90",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "127edd71_b16517b5",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 5
      },
      "lineNbr": 302,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-01-21T20:03:27Z",
      "side": 1,
      "message": "I don\u0027t think this pattern is applicable here because\n\n static_cast\u003cCPDFXFA_Context*\u003e(pDocument-\u003eGetExtension());\n\nwill still have to get called in the event that the document already has an extension.\n\n pdfium::MakeUnique\u003cCPDFXFA_Context\u003e(pDocument)\n\nis only being called if the document doesn\u0027t have an extension.",
      "parentUuid": "a9056235_59c6d75b",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 302,
        "endChar": 2
      },
      "revId": "4905eccb1866a39657eddc629a9f1e79a8d01b90",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "563ce6ec_93b1afd4",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 5
      },
      "lineNbr": 331,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-21T23:44:05Z",
      "side": 1,
      "message": "Note that this changes when the embedder gets the callback. There\u0027s no well defined contract to specify when the callback gets called, so this may be ok?",
      "revId": "4905eccb1866a39657eddc629a9f1e79a8d01b90",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b45d7d_d08bc5a9",
        "filename": "public/fpdf_formfill.h",
        "patchSetId": 5
      },
      "lineNbr": 727,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-01-17T19:37:30Z",
      "side": 1,
      "message": "NOTE: One other thing to consider is that we\u0027ll want to do a manual roll into chromium so that we can set this in pdf/pdfium/pdfium_form_filler.cc in the same chromium CL that advances the dependent PDF version, so ping Lei about how to pause the autoroller before landing this.",
      "range": {
        "startLine": 727,
        "startChar": 12,
        "endLine": 727,
        "endChar": 24
      },
      "revId": "4905eccb1866a39657eddc629a9f1e79a8d01b90",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94832a9e_5356b556",
        "filename": "public/fpdf_formfill.h",
        "patchSetId": 5
      },
      "lineNbr": 727,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-01-21T20:03:27Z",
      "side": 1,
      "message": "Ah good point, for whatever reason I thought int in C/C++ had a determinant default value of 0.",
      "parentUuid": "d8b45d7d_d08bc5a9",
      "range": {
        "startLine": 727,
        "startChar": 12,
        "endLine": 727,
        "endChar": 24
      },
      "revId": "4905eccb1866a39657eddc629a9f1e79a8d01b90",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cde85ad_f6f5af04",
        "filename": "public/fpdf_formfill.h",
        "patchSetId": 5
      },
      "lineNbr": 727,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-21T23:44:05Z",
      "side": 1,
      "message": "Yes, we should schedule a time to land this CL and manually roll it in Chromium. Fuzzers in Chromium build with PDF_ENABLE_XFA turned on, so we don\u0027t want to break all the fuzzers.\n\nBTW, PDFiumFuzzerHelper::RenderPdf() and EmbedderTest::SetupFormFillEnvironment() are the other two spots where we may want to set this. As is, they both use memset() to zero-out the entire structure, so there is no uninitialized field issue.",
      "parentUuid": "94832a9e_5356b556",
      "range": {
        "startLine": 727,
        "startChar": 12,
        "endLine": 727,
        "endChar": 24
      },
      "revId": "4905eccb1866a39657eddc629a9f1e79a8d01b90",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}