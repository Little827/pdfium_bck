{
  "comments": [
    {
      "key": {
        "uuid": "d08e861d_7eb9498b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-11-20T21:49:35Z",
      "side": 1,
      "message": "... for text rendering with invalid CMap entry ? Assuming that accurately describes the problem.",
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "299d5a70_935c6d7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-11-21T02:14:39Z",
      "side": 1,
      "message": "This case the ToUnicode mapping is valid, but it should be ignored.\nI did more digging after CL was up for review. Updated the latest commit message to contain more info about this bug.",
      "parentUuid": "d08e861d_7eb9498b",
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3efd68f2_e6429ba4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 7613
      },
      "writtenOn": "2019-11-20T22:15:44Z",
      "side": 1,
      "message": "Typo: \"text\" -\u003e \"test\"",
      "range": {
        "startLine": 9,
        "startChar": 12,
        "endLine": 9,
        "endChar": 16
      },
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a088f509_e8c7a3aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-11-21T02:14:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3efd68f2_e6429ba4",
      "range": {
        "startLine": 9,
        "startChar": 12,
        "endLine": 9,
        "endChar": 16
      },
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98771896_013a2e8d",
        "filename": "testing/resources/pixel/bug_1021762.in",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 7613
      },
      "writtenOn": "2019-11-20T22:15:44Z",
      "side": 1,
      "message": "Not sure about something: How does \u003c0004\u003e get mapped to \u0027!\u0027 (U+0021)?",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 34,
        "endChar": 5
      },
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a6c455d_70f2cd40",
        "filename": "testing/resources/pixel/bug_1021762.in",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 7613
      },
      "writtenOn": "2019-11-20T22:26:11Z",
      "side": 1,
      "message": "To answer my own question: In the Arial-Bold font, glyph 4 is mapped to \u0027!\u0027.",
      "parentUuid": "98771896_013a2e8d",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 34,
        "endChar": 5
      },
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27daa4f0_a99d0a19",
        "filename": "testing/resources/pixel/bug_1021762.in",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-11-21T01:39:23Z",
      "side": 1,
      "message": "Haha, that\u0027s right. This is another case that an non-embedded font has CIDToGIDMap object (has string value \"Identity\", instead of a stream). \"Identity\" basically means glyph index should be the same as char code, which should be the case here.\n\nIn CPDF_CIDFont::Load(), if I remove the check for |m_pFontFile| in the following line:\n\n    else if (m_pFontFile \u0026\u0026 pmap-\u003eGetString() \u003d\u003d \"Identity\")\n\nit will make sure glyph index \u003d charcode for this test case and renders correctly.\nBut at the same time, this will cause regression under corpus/fx/FRC_8.2.4_part1/ directory. I still need to do more digging on how to fix it.",
      "parentUuid": "0a6c455d_70f2cd40",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 34,
        "endChar": 5
      },
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55881a1c_32ededd0",
        "filename": "testing/resources/pixel/bug_1021762.in",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-11-20T21:49:35Z",
      "side": 1,
      "message": "Can we order this as: /Registry, /Ordering, /Supplement, like in the PDF spec and with object 8 0?",
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b206db36_b53b5ac3",
        "filename": "testing/resources/pixel/bug_1021762.in",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-11-21T01:39:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55881a1c_32ededd0",
      "revId": "35da8c52b03c357a48c290c109d3ae303268eb4a",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}