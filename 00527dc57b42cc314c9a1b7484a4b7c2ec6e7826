{
  "comments": [
    {
      "key": {
        "uuid": "45b2af01_51a53279",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.cpp",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T06:20:43Z",
      "side": 1,
      "message": "Existing comment goes in the header. Put // static here.",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2febbbfe_011bc615",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.cpp",
        "patchSetId": 4
      },
      "lineNbr": 89,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-02-26T19:39:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45b2af01_51a53279",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c53dd024_e9ff6bd2",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.cpp",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T06:20:43Z",
      "side": 1,
      "message": "auto",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 30
      },
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "543e7b3e_f7fc84d5",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.cpp",
        "patchSetId": 4
      },
      "lineNbr": 94,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-02-26T19:39:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c53dd024_e9ff6bd2",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 30
      },
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02820726_2e3751ee",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T06:20:43Z",
      "side": 1,
      "message": "- Combine with line 106 block and save a loop iteration?\n- Maybe also do the same check for |m_pExp2|? Otherwise a heavily lopsided chain on the left will take O(N) to pivot.",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b806c71f_8901645b",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-02-26T19:04:12Z",
      "side": 1,
      "message": "- Are you suggesting I reorder them instead of combining them?\n- Ack, I really like that second suggestion. Thanks.",
      "parentUuid": "02820726_2e3751ee",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e645d67_4b1a1339",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-02-26T19:39:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b806c71f_8901645b",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5f22e65_ab4a411f",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-02-26T04:54:08Z",
      "side": 1,
      "message": "Note to reviewers: I know that the operator token can give insight into the type of expression, but I thought this boolean property would be safer.",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 18
      },
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d0ef4a7_64da181a",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T06:20:43Z",
      "side": 1,
      "message": "We got rid of most/all the default arguments in PDFium. It\u0027s really easy to have dead code hiding inside. Just add a second ctor and delegate the first to the second instead?",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "320050f6_68538b67",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-02-26T19:39:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d0ef4a7_64da181a",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acd578cf_abf6f278",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T17:23:00Z",
      "side": 1,
      "message": "Binary?",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 22
      },
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51dd9d17_4a380da3",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-02-26T19:04:12Z",
      "side": 1,
      "message": "I thought about that, but the name conflicts with CXFA_FMBinExpression. I found this name to be less conflicting and more descriptive.",
      "parentUuid": "acd578cf_abf6f278",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 22
      },
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "227d3c31_9d166d47",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T22:00:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "51dd9d17_4a380da3",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 22
      },
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad896366_0cac8a5f",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T06:20:43Z",
      "side": 1,
      "message": "Not needed?",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "200af8ea_5c093ad0",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-02-26T19:04:12Z",
      "side": 1,
      "message": "I was deliberating adding this, and I found arguments for both sides.\n\n1) Keeping the pure virtual function is a clear reminder to the reader that this class is abstract. \n\n2) Removing the pure virtual function ensures that this class stays consistent with the base class. i.e., its abstraction is dependent on that of the base class.\n\nI have no strong preference. I went with choice (1) for readability.",
      "parentUuid": "ad896366_0cac8a5f",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abaf5d33_590f7322",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T22:00:12Z",
      "side": 1,
      "message": "- The CXFA_FMChainableExpression ctor is already protected, which is a strong signal that this class cannot be instantiated.\n- If CXFA_FMSimpleExpression has N pure virtual methods, would you copy them all to CXFA_FMChainableExpression? Copy just 1?",
      "parentUuid": "200af8ea_5c093ad0",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28f4d52b_96ea92aa",
        "filename": "xfa/fxfa/fm2js/cxfa_fmsimpleexpression.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-02-26T22:03:37Z",
      "side": 1,
      "message": "You may want to verify this comment, but I think the legit use case for \"override \u003d 0\" is when the base class has a non-pure method, but a derived class wants to force its own subclasses to implement it and ignore the base class\u0027s impl.",
      "parentUuid": "abaf5d33_590f7322",
      "revId": "00527dc57b42cc314c9a1b7484a4b7c2ec6e7826",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}