{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2da825d9_74715102",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-11-04T23:31:09Z",
      "side": 1,
      "message": "Red bots.",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4edebc03_b63add58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7613
      },
      "writtenOn": "2022-11-05T07:18:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2da825d9_74715102",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20c38dd1_a6fd6b8d",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2878,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-11-04T23:31:09Z",
      "side": 1,
      "message": "Combine with next line?",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dccfd079_531a9d05",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2878,
      "author": {
        "id": 7613
      },
      "writtenOn": "2022-11-05T07:18:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20c38dd1_a6fd6b8d",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7998963c_bcb48687",
        "filename": "fpdfsdk/fpdf_view.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-11-04T23:31:09Z",
      "side": 1,
      "message": "Is this needed if `recorder` is never dereferenced?",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcf61199_2fe26220",
        "filename": "fpdfsdk/fpdf_view.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 7613
      },
      "writtenOn": "2022-11-05T07:18:01Z",
      "side": 1,
      "message": "The std::unique_ptr\u003cSkPictureRecorder\u003e requires the destructor.\n\nI do think it\u0027s of questionable value to define FPDF_RECORDER as SkPictureRecorder* in the first place, but I didn\u0027t want to change the FPDF_RenderPageSkp() API in this CL.",
      "parentUuid": "7998963c_bcb48687",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0f71263_e567d03d",
        "filename": "fpdfsdk/fpdf_view.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-11-04T23:31:09Z",
      "side": 1,
      "message": "Then if CreateRecorder() takes ints like before, maybe we don\u0027t need fpdfsdk to depend on skia?",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3141e894_accfbc64",
        "filename": "fpdfsdk/fpdf_view.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 7613
      },
      "writtenOn": "2022-11-05T07:18:01Z",
      "side": 1,
      "message": "Given the SkPictureRecorder dependency is required, there doesn\u0027t seem to be any gain in avoiding this.\n\nI considered using something like FX_RECT or CFX_Size, but given that CreateRecorder() is a Skia-specific internal API anyway, it seemed more elegant to just pass through the Skia type.",
      "parentUuid": "a0f71263_e567d03d",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "550f3971_5c89ffeb",
        "filename": "fpdfsdk/fpdf_view.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-11-08T17:14:17Z",
      "side": 1,
      "message": "It\u0027s only required if SkPictureRecorder is wrapped in a unique_ptr. If it was a raw pointer, e.g. release() in CFX_DefaultRenderDevice::CreateRecorder() instead, then fpdfsdk won\u0027t need any Skia includes.\n\nTaking a step back, do you foresee non-test fpdfsdk code needing more direct access to Skia? Or can the Skia usage stay in core/fxge?",
      "parentUuid": "3141e894_accfbc64",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af00f461_342349fc",
        "filename": "fpdfsdk/fpdf_view.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 7613
      },
      "writtenOn": "2022-11-08T20:26:34Z",
      "side": 1,
      "message": "I think the fundamental problem is the design of the FPDF_RenderPageSkp() API: It returns an SkPictureRecorder, and pretending it doesn\u0027t creates these sort of design issues. The public API effectively has a dependency on Skia.\n\nIs there a problem with fpdfsdk code depending internally on Skia? I think passing this as a unique_ptr fundamentally is the right design, so if we\u0027re going to deviate from that, I think we need a good reason, rather than vice versa.",
      "parentUuid": "550f3971_5c89ffeb",
      "revId": "39f4c383b22e4a47976e9cc64bcc81fda6a60548",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}