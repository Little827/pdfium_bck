{
  "comments": [
    {
      "key": {
        "uuid": "ab115449_ae1c137a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "Need to update the struct name here.",
      "range": {
        "startLine": 9,
        "startChar": 32,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1272fb43_04e2b3a8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab115449_ae1c137a",
      "range": {
        "startLine": 9,
        "startChar": 32,
        "endLine": 9,
        "endChar": 49
      },
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c079d41_8aa7ce3b",
        "filename": "core/fxge/cfx_glyphcache.cpp",
        "patchSetId": 8
      },
      "lineNbr": 256,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "Might be a good opportunity to use mutable references, now that the style guide allows them? Would need to make it clear that this parameter is mutable, though. (Maybe using a parameter name comment?)",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51adb42d_504ec76e",
        "filename": "core/fxge/cfx_glyphcache.cpp",
        "patchSetId": 8
      },
      "lineNbr": 256,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Change |text_options| into |mutable_text_options| to indicate this parameter is both an input and an output parameter.",
      "parentUuid": "0c079d41_8aa7ce3b",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8708ee00_8297b367",
        "filename": "core/fxge/cfx_renderdevice.cpp",
        "patchSetId": 8
      },
      "lineNbr": 881,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "It might be better to have a helper method that returns whether the edging type is smooth or not, rather than encoding the logic at the point of use. Particularly if new values get added in the future.",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e87fa96e_a17ac651",
        "filename": "core/fxge/cfx_renderdevice.cpp",
        "patchSetId": 8
      },
      "lineNbr": 881,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8708ee00_8297b367",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85f417ac_9e96a497",
        "filename": "core/fxge/cfx_renderdevice.cpp",
        "patchSetId": 8
      },
      "lineNbr": 912,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "Ditto here.",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b38832_2318a503",
        "filename": "core/fxge/cfx_renderdevice.cpp",
        "patchSetId": 8
      },
      "lineNbr": 912,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-16T01:50:12Z",
      "side": 1,
      "message": "That is to say, we can encode the logic for whether this is an \"LCD\"-style aliasing type in one place.",
      "parentUuid": "85f417ac_9e96a497",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53c316db_9c82aeeb",
        "filename": "core/fxge/cfx_renderdevice.cpp",
        "patchSetId": 8
      },
      "lineNbr": 912,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-16T22:26:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24b38832_2318a503",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89a419e5_d8a75d35",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "Would this be better as an enum class? (This would make it more awkward to use arithmetically, though.)",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 12,
        "endChar": 6
      },
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29d45bce_8d1bdb5c",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Seems like enum is more common than enum class when it\u0027s inside a class or struct.",
      "parentUuid": "89a419e5_d8a75d35",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 12,
        "endChar": 6
      },
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf0a8ee3_907bc406",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-16T01:50:12Z",
      "side": 1,
      "message": "That\u0027s not really the most important criteria for whether this should be an enum or an enum class: Enums implicitly convert to int, so you can do arithmetic on them. Enum classes do not. Enum classes also need to be qualified, but I think that\u0027s a more minor difference in many cases. (It reduces the chance of name conflicts, and arguably improves clarity, at the cost of more typing.)\n\nI think it\u0027s fine to choose an enum here, but you need to be intentional about your decision. :-)",
      "parentUuid": "29d45bce_8d1bdb5c",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 12,
        "endChar": 6
      },
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7983b74_cc0a8009",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 12,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-16T22:26:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cf0a8ee3_907bc406",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 12,
        "endChar": 6
      },
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5120f1e7_b9f52578",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 14,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "I don\u0027t recall if there\u0027s a rule that says you need to initialize the first enumerator to 0. I personally would omit it in this case, since the exact values for this enum aren\u0027t important.",
      "range": {
        "startLine": 14,
        "startChar": 16,
        "endLine": 14,
        "endChar": 17
      },
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0bf4fed_adddb8c2",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 14,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5120f1e7_b9f52578",
      "range": {
        "startLine": 14,
        "startChar": 16,
        "endLine": 14,
        "endChar": 17
      },
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4034ed98_4c8377cc",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "Consider making this a static factory, rather than a constructor. A static factory allows you to choose a more meaningful name for this operation.\n\nAlso, this would need to be \"explicit\".",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ec7b970_5a090103",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4034ed98_4c8377cc",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34f73927_2e1292d7",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "The destructor probably is trivial?",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fe90f68_a7dc43a1",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Yes, it\u0027s trivial.",
      "parentUuid": "34f73927_2e1292d7",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a688e6ae_1334f849",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-16T01:50:12Z",
      "side": 1,
      "message": "I think you can omit it from the class definition, then. (The default constructor might be small enough to allow this, too, but that may change anyway, if more fields are added, so I don\u0027t think that\u0027s as useful.)",
      "parentUuid": "6fe90f68_a7dc43a1",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa960d84_ebd990c1",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-16T22:26:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a688e6ae_1334f849",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c04b5e47_f3afb6c9",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "Can\u0027t you use default member initialization for the fields here? This would also eliminate the need to comment on what the defaults are.",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fe3a78a_815238a4",
        "filename": "core/fxge/cfx_textrenderoptions.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c04b5e47_f3afb6c9",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0f2881d_97a9a151",
        "filename": "fxbarcode/oned/BC_OneDimWriter.cpp",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "If it\u0027s common to want this configuration (also seems useful in cfde_texout.cpp, for example), could have a factory method on CFX_TextRenderOptions instead.",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7675ea1a_c74b16ce",
        "filename": "fxbarcode/oned/BC_OneDimWriter.cpp",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0f2881d_97a9a151",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef05f52b_7bf7969c",
        "filename": "xfa/fde/cfde_textout.cpp",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-09T21:17:54Z",
      "side": 1,
      "message": "Might be able to get away with making this a static constant. Alternatively, could just pass a temporary at each call site (since the const reference extends the lifetime o the temporary).\n\nThe main advantage here is that the options would be defined closer to the point of use. It also would eliminate the possibility that the options are modified in between.",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f34448a_1f2879ef",
        "filename": "xfa/fde/cfde_textout.cpp",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-15T16:44:51Z",
      "side": 1,
      "message": "Maybe make it static const and still keep it out of the for loop. So that the constructor doesn\u0027t get invoked everytime it enters the loop.(https://google.github.io/styleguide/cppguide.html#Local_Variables)",
      "parentUuid": "ef05f52b_7bf7969c",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9b2f4fb_fe776a3e",
        "filename": "xfa/fde/cfde_textout.cpp",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-06-16T01:50:12Z",
      "side": 1,
      "message": "This probably has a pretty low runtime cost, so I wouldn\u0027t worry too much about it.\n\nOn the other hand, you\u0027ve made this a (static) reference to a temporary; I\u0027m pretty sure that is a problem. It\u0027s probably best to leave it the way it was before.",
      "parentUuid": "9f34448a_1f2879ef",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "561437be_cd333db1",
        "filename": "xfa/fde/cfde_textout.cpp",
        "patchSetId": 8
      },
      "lineNbr": 72,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-06-16T22:26:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9b2f4fb_fe776a3e",
      "revId": "54eeb23563e0d53b147fd79d9af1a8fed9cd7975",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}