{
  "comments": [
    {
      "key": {
        "uuid": "87ca9833_df246ec7",
        "filename": "core/fpdfdoc/cpdf_formfield.cpp",
        "patchSetId": 2
      },
      "lineNbr": 800,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-08-13T01:42:08Z",
      "side": 1,
      "message": "It\u0027s a weird pattern for a getter method to internally be a setter.",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d02f6034_7d975927",
        "filename": "core/fpdfdoc/cpdf_formfield.cpp",
        "patchSetId": 2
      },
      "lineNbr": 800,
      "author": {
        "id": 7644
      },
      "writtenOn": "2019-08-13T02:22:12Z",
      "side": 1,
      "message": "I justified it as getting and setting a default value when the value doesn\u0027t already exist.",
      "parentUuid": "87ca9833_df246ec7",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a84664cc_3322b5a7",
        "filename": "core/fpdfdoc/cpdf_formfield.cpp",
        "patchSetId": 2
      },
      "lineNbr": 800,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-08-13T18:50:35Z",
      "side": 1,
      "message": "Can you see if it is possible to keep GetTopVisibleIndex() as a getter?",
      "parentUuid": "d02f6034_7d975927",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae02ab3f_54d3da16",
        "filename": "core/fpdfdoc/cpdf_formfield.cpp",
        "patchSetId": 2
      },
      "lineNbr": 800,
      "author": {
        "id": 7644
      },
      "writtenOn": "2019-08-22T00:02:56Z",
      "side": 1,
      "message": "The way I see it, there\u0027s a trade off. \n\nIf I keep is as it is, it\u0027s still essentially a \"getter\" because it\u0027s extracting a certain property from the form, and if it can\u0027t directly find it, it tries to calculate it and then \"caches\" it using the setter.\n\nIf I change it, I\u0027m going to have to replicate this logic anywhere the getter is called. \n\nMy personal philosophy is that variables are encapsulated so that added logic like this can be added, in addition to security, of course.",
      "parentUuid": "a84664cc_3322b5a7",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be783933_0f0786e0",
        "filename": "core/fpdfdoc/cpdf_formfield.cpp",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-08-13T01:42:08Z",
      "side": 1,
      "message": "No need for an else after an return. I would have written:\n\nint nTopIndex \u003d FindTopSelectedOption();\nif (nTopIndex \u003c 0)\n  return 0;\nSetTopVisibleIndex(nTopIndex);\nreturn nTopIndex;",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c204e3b7_f2bf6e72",
        "filename": "core/fpdfdoc/cpdf_formfield.cpp",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 7644
      },
      "writtenOn": "2019-08-13T02:22:12Z",
      "side": 1,
      "message": "I agree. Will change.",
      "parentUuid": "be783933_0f0786e0",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5573bf2b_8b0acbab",
        "filename": "core/fpdfdoc/cpdf_formfield.cpp",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 7644
      },
      "writtenOn": "2019-08-22T00:02:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c204e3b7_f2bf6e72",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb652cd3_23847837",
        "filename": "fpdfsdk/fpdf_formfill_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2129,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-08-13T01:42:08Z",
      "side": 1,
      "message": "Why change existing tests?",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc4a690c_abcec43b",
        "filename": "fpdfsdk/fpdf_formfill_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2129,
      "author": {
        "id": 7644
      },
      "writtenOn": "2019-08-13T02:22:12Z",
      "side": 1,
      "message": "Because the Multiselect field is set to \u0027Banana\u0027 upon opening and the field is consequently scrolled down to \u0027Banana\u0027, ClickOnMultiSelectFormOption(0) would only click on something that\u0027s already selected. The existing test attempts to select something that isn\u0027t selected (\u0027Apple\u0027), so I replicate that test by selecting \u0027Cherry\u0027 instead.",
      "parentUuid": "cb652cd3_23847837",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "face74ea_010451f9",
        "filename": "fpdfsdk/fpdf_formfill_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2129,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-08-13T18:50:35Z",
      "side": 1,
      "message": "Can you add a comment to describe what\u0027s happening? It\u0027s not obvious at all. Whereas before, even without the comment, it mostly makes sense that clicking item 0 makes the item at index 0 selected.",
      "parentUuid": "cc4a690c_abcec43b",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fb199f6_43992b29",
        "filename": "fpdfsdk/fpdf_formfill_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2129,
      "author": {
        "id": 7644
      },
      "writtenOn": "2019-08-22T00:02:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "face74ea_010451f9",
      "revId": "056bce89900cc1c649b48e4376fc81f369e8de07",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}