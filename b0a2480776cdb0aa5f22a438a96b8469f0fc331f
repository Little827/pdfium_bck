{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a6022a1b_3b1f0e37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-10-20T22:41:03Z",
      "side": 1,
      "message": "LG, but remind me if there are a boatload of these allocated such that converting to full-byte bools would be costly ...",
      "revId": "b0a2480776cdb0aa5f22a438a96b8469f0fc331f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1985e3f_fbca0954",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-10-20T23:38:14Z",
      "side": 1,
      "message": "There aren\u0027t too many, but it just happens that there are 8 bits here, so it felt nice to pack them into 1 byte.",
      "parentUuid": "a6022a1b_3b1f0e37",
      "revId": "b0a2480776cdb0aa5f22a438a96b8469f0fc331f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09a76c43_d502f336",
        "filename": "core/fxge/cfx_fillrenderoptions.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-10-20T22:42:06Z",
      "side": 1,
      "message": "nit: inline initialize this member as well, and write `\u003d default` here?",
      "range": {
        "startLine": 34,
        "startChar": 7,
        "endLine": 34,
        "endChar": 51
      },
      "revId": "b0a2480776cdb0aa5f22a438a96b8469f0fc331f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0706519a_879a0d86",
        "filename": "core/fxge/cfx_fillrenderoptions.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-10-20T23:38:14Z",
      "side": 1,
      "message": "If the member is not initialized where it is defined, then one sees that and would likely assume it\u0027s ctor initialized. Since there\u0027s multiple ctors that can set it to different values, I\u0027d like to consistently initialize in the ctors.",
      "parentUuid": "09a76c43_d502f336",
      "range": {
        "startLine": 34,
        "startChar": 7,
        "endLine": 34,
        "endChar": 51
      },
      "revId": "b0a2480776cdb0aa5f22a438a96b8469f0fc331f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "148a5457_5c73bfa6",
        "filename": "core/fxge/cfx_fillrenderoptions.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-10-21T00:01:20Z",
      "side": 1,
      "message": "s\u0027awright.  This feels like it would be better off as an aggregate (e.g. no user-defined ctors) with designated initializers e.g. `return { .fill_type_ \u003d FillType::kWinding }; ` at line 30 above, but I\u0027m not sure if designated initializers play with the bitfields below, so this is just fine as is.",
      "parentUuid": "0706519a_879a0d86",
      "range": {
        "startLine": 34,
        "startChar": 7,
        "endLine": 34,
        "endChar": 51
      },
      "revId": "b0a2480776cdb0aa5f22a438a96b8469f0fc331f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a894186_8ee8ab2d",
        "filename": "core/fxge/cfx_fillrenderoptions.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-10-21T00:25:55Z",
      "side": 1,
      "message": "I will try to clean this up a bit more later. For now, I just want to break some PDFium users who are still building with C++17. :)",
      "parentUuid": "148a5457_5c73bfa6",
      "range": {
        "startLine": 34,
        "startChar": 7,
        "endLine": 34,
        "endChar": 51
      },
      "revId": "b0a2480776cdb0aa5f22a438a96b8469f0fc331f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "b0a2480776cdb0aa5f22a438a96b8469f0fc331f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "b0a2480776cdb0aa5f22a438a96b8469f0fc331f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}