{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cb65590c_76ddefaf",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7620
      },
      "writtenOn": "2023-06-14T16:48:05Z",
      "side": 1,
      "message": "Maybe use NOTREACHED_NORETURN()?",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4a130bc_96b5b469",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-14T17:34:07Z",
      "side": 1,
      "message": "This function does return, so NOTREACHED_NORETURN() wouldn\u0027t be appropriate. The code here works, I just don\u0027t want anyone to use it. ðŸ˜Š",
      "parentUuid": "cb65590c_76ddefaf",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d376f7d8_7ed778ca",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 8281
      },
      "writtenOn": "2023-06-14T17:38:36Z",
      "side": 1,
      "message": "The point of using NOTREACHED_NORETURN() is that you don\u0027t need the \"return\" line after calling it.",
      "parentUuid": "d4a130bc_96b5b469",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "279d7482_e946722c",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-14T17:52:37Z",
      "side": 1,
      "message": "Yes, but my point is that this is the behavior I want in non-DCHECK builds. I want to discourage use of this call site, but if we missed a spot in production, I don\u0027t want it to crash, because the implementation works.",
      "parentUuid": "d376f7d8_7ed778ca",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "435c2c0a_29bfde08",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-14T17:53:03Z",
      "side": 1,
      "message": "/missed a spot in production/missing a spot in testing/",
      "parentUuid": "279d7482_e946722c",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2709476e_880b9981",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-14T17:54:06Z",
      "side": 1,
      "message": "Put another way, I want DCHECK(false) behavior here, not CHECK(false). Perhaps DCHECK(false) would be better than NOTREACHED()? It\u0027s the same thing now, but maybe not always.",
      "parentUuid": "435c2c0a_29bfde08",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f7a1561_da7ac157",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-06-14T18:00:13Z",
      "side": 1,
      "message": "The Chromium folks driving the NOTREAHCED_NORETURN() change are trying to get developers to stop being indecisive about whether the code is reachable or not. How about just putting NOTREACHED_NORETURN() here and leave the implementation empty? If it turns out to be reachable, a follow-up CL can fix that.",
      "parentUuid": "2709476e_880b9981",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41e21256_31bbd2c7",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-14T18:03:45Z",
      "side": 1,
      "message": "I\u0027d rather take out the NOTREACHED() than take out the implementation, as the implementation is correct and crashing is risky.\n\nBut I\u0027d prefer not to introduce new uses, as it\u0027s not efficient. Once we have more confidence that it\u0027s not used (preferably enforced by the type system), then it could be removed entirely.",
      "parentUuid": "1f7a1561_da7ac157",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b480eaab_a2b6e564",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-14T18:06:30Z",
      "side": 1,
      "message": "Essentially, I\u0027d like to get the type returned from CPDF_PageImageCache to a state where the only calls are to RealizeSkImage() (and perhaps some future successor that implements tiled rendering). The best way to do that would be to introduce an interface that only allows calls to RealizeSkImage(), but such a change is viral, so it\u0027s simpler to lean on CFX_DIBBase for now.",
      "parentUuid": "41e21256_31bbd2c7",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abd64b5d_891d8f83",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-06-14T18:44:56Z",
      "side": 1,
      "message": "How about leaving the NOTREACHED() in for now, but add a comment to re-evaluate this and either remove the NOTREACHED(), or change it to NOTREACHED_NORETURN()?",
      "parentUuid": "b480eaab_a2b6e564",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59035a5b_899a433e",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7620
      },
      "writtenOn": "2023-06-14T18:48:50Z",
      "side": 1,
      "message": "I see kmoon@ \u0027s concern now: Due to the change is viral, it might cause unwanted crashes for stable users in the future (if these code are not completely removed by then). It\u0027s safer to rely on the correct implementation even though we do not want those implementation to be called.\nMeanwhile, it still allows fuzzers or other tests to catch potential issues before these code goes to stable. \n\nIs this correct, kmoon@?",
      "parentUuid": "b480eaab_a2b6e564",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c641cf9b_6152de8c",
        "filename": "core/fpdfapi/page/cpdf_pageimagecache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 7613
      },
      "writtenOn": "2023-06-14T18:54:38Z",
      "side": 1,
      "message": "Done\n\nAdding a comment SGTM. nigi@: Yes, that\u0027s essentially it.",
      "parentUuid": "abd64b5d_891d8f83",
      "range": {
        "startLine": 206,
        "startChar": 2,
        "endLine": 206,
        "endChar": 15
      },
      "revId": "3195d8e7ab84b2dc1db11969ea584632bb4fad53",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}