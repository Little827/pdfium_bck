{
  "comments": [
    {
      "key": {
        "uuid": "67aa83cf_e0100d1b",
        "filename": "fpdfsdk/fpdf_text.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-08-17T19:26:11Z",
      "side": 1,
      "message": "I would just remove this since most of the CPDFFooFromFPDFFoo() functions can handle nullptr.",
      "revId": "87da3cf0450ffceb1f59fca939df6d34b0725a52",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c41e3c7e_43c6b3a3",
        "filename": "fpdfsdk/fpdf_text.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 6295
      },
      "writtenOn": "2018-08-17T19:35:07Z",
      "side": 1,
      "message": "CPDFTextPageFromFPDFTextPage is an inline reinterpret_cast. So it wouldn\u0027t necessarily handle NULL properly.",
      "parentUuid": "67aa83cf_e0100d1b",
      "revId": "87da3cf0450ffceb1f59fca939df6d34b0725a52",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "769c4aff_6ccbf7d1",
        "filename": "fpdfsdk/fpdf_text.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-08-17T19:43:33Z",
      "side": 1,
      "message": "Sure it will. https://en.cppreference.com/w/cpp/language/reinterpret_cast #9.",
      "parentUuid": "c41e3c7e_43c6b3a3",
      "revId": "87da3cf0450ffceb1f59fca939df6d34b0725a52",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f47c6df4_4b1f75df",
        "filename": "fpdfsdk/fpdf_text.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 6295
      },
      "writtenOn": "2018-08-17T19:54:00Z",
      "side": 1,
      "message": "I don\u0027t understand that because it seems to contradict #3 \"The null pointer constant NULL or integer zero is not guaranteed to yield the null pointer value of the target type; static_cast or implicit conversion should be used for this purpose\"\n\nAnyways, for now I\u0027ll leave it like this for consistency with the other methods.",
      "parentUuid": "769c4aff_6ccbf7d1",
      "revId": "87da3cf0450ffceb1f59fca939df6d34b0725a52",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70bc479c_681af80a",
        "filename": "fpdfsdk/fpdf_text.cpp",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-08-20T23:27:49Z",
      "side": 1,
      "message": "It\u0027s saying \"pointer -\u003e int -\u003e pointer\" will always return the same output for a given input, but \"int -\u003e pointer -\u003e int\" will not. Since NULL is oftentimes defined as 0, NULL -\u003e pointer may always convert to nullptr.\n\nThis case doesn\u0027t apply here, since CPDFTextPageFromFPDFTextPage() does a \"pointer -\u003e pointer\" conversion.",
      "parentUuid": "f47c6df4_4b1f75df",
      "revId": "87da3cf0450ffceb1f59fca939df6d34b0725a52",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}