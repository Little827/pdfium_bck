{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c2b1f530_63f29d54",
        "filename": "core/fpdfapi/font/cpdf_cmapparser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-05-10T20:39:50Z",
      "side": 0,
      "message": "If `CIDSET_NUM_SETS` increases, will std::array complain?",
      "revId": "9e67709fb358aa9bf1c5906007e92b918d819944",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "076141b9_5b5d7f1f",
        "filename": "core/fpdfapi/font/cpdf_cmapparser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 5495
      },
      "writtenOn": "2024-05-10T20:47:52Z",
      "side": 0,
      "message": "Alas no. Silent nul init for the extras.  Same as before in this particular case.  Note the assert was useless, would need to write kCharsetNames[] \u003d {...} for the array to be sized by the number of initializers.\n\nBut assuming that was the intended behaviour .. using the [] instead, to get the same thing in the std::array world, you\u0027d need to write\n\nconst char * kCharSetNameData[] \u003d { ... };\npdfium::span\u003cconst char*\u003e kCharSetNames{kCharSetNameData};\n\nTheres an XFA cl forthcoming that does this to cope with \nfoo[] \u003d{\n#include baz;\n};",
      "parentUuid": "c2b1f530_63f29d54",
      "revId": "9e67709fb358aa9bf1c5906007e92b918d819944",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}