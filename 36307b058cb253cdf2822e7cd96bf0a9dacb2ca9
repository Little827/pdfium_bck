{
  "comments": [
    {
      "key": {
        "uuid": "c4de7152_b58b333b",
        "filename": "testing/image_diff/image_diff.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-10T00:22:09Z",
      "side": 1,
      "message": "Is it possible to use |PATH_SEPARATOR| from testing/utils/path_service.h here, instead of repeating the definition?",
      "revId": "36307b058cb253cdf2822e7cd96bf0a9dacb2ca9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a886adb1_c7476a55",
        "filename": "testing/image_diff/image_diff.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-01-10T00:44:47Z",
      "side": 1,
      "message": "Thank you very much, I was hoping for something like this to exist already.",
      "parentUuid": "c4de7152_b58b333b",
      "revId": "36307b058cb253cdf2822e7cd96bf0a9dacb2ca9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6be5df38_1a51b0dc",
        "filename": "testing/image_diff/image_diff.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-10T00:47:32Z",
      "side": 1,
      "message": "Resolved",
      "parentUuid": "a886adb1_c7476a55",
      "revId": "36307b058cb253cdf2822e7cd96bf0a9dacb2ca9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5d0d970_150e089e",
        "filename": "testing/image_diff/image_diff.cpp",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-10T00:22:09Z",
      "side": 1,
      "message": "Since strrchr() returns char*, and we just use const char* in all the function parameters above, and pass the const char* to printf(), rather than doing the C-string -\u003e std::string -\u003e C-string dance?",
      "revId": "36307b058cb253cdf2822e7cd96bf0a9dacb2ca9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bfa5e73_6a90ec58",
        "filename": "testing/image_diff/image_diff.cpp",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-10T00:47:32Z",
      "side": 1,
      "message": "Optional: How about a string view? :-) Then you can use either. (Probably too many changes, though.)\n\nAlso, instead of a bare call to strrchr() here, could we add the equivalent of basename() to PathService?",
      "parentUuid": "c5d0d970_150e089e",
      "revId": "36307b058cb253cdf2822e7cd96bf0a9dacb2ca9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a287bd34_204a1a59",
        "filename": "testing/image_diff/image_diff.cpp",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-01-10T00:52:48Z",
      "side": 1,
      "message": "Lei and I just talked offline about this. We should keep it std::string because of consistency (in this CL at least).\n\nIn regards to the helper function, sounds like good follow-up idea.",
      "parentUuid": "6bfa5e73_6a90ec58",
      "revId": "36307b058cb253cdf2822e7cd96bf0a9dacb2ca9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ba0608a_e935f942",
        "filename": "testing/image_diff/image_diff.cpp",
        "patchSetId": 3
      },
      "lineNbr": 339,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-10T00:55:20Z",
      "side": 1,
      "message": "One good reason to do a helper function is you might be less tempted to try and make this a one-liner. :-) It seems Lei already found a potential bug.\n\nIt\u0027d be more idiomatic C++ to use something like std::string::rfind, too, rather than something from the C standard library.",
      "parentUuid": "a287bd34_204a1a59",
      "revId": "36307b058cb253cdf2822e7cd96bf0a9dacb2ca9",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}