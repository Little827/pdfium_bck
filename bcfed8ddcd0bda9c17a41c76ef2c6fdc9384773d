{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f151416a_9d61a8e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9326
      },
      "writtenOn": "2023-08-30T10:18:42Z",
      "side": 1,
      "message": "PTAL",
      "revId": "bcfed8ddcd0bda9c17a41c76ef2c6fdc9384773d",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff9a01f8_f847c937",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9326
      },
      "writtenOn": "2023-08-30T10:35:19Z",
      "side": 1,
      "message": "I\u0027m unfamiliar with how PA is rolled here but I guess https://crrev.com/c/4750750 is not rolled here and we should wait a bit more to land this.",
      "revId": "bcfed8ddcd0bda9c17a41c76ef2c6fdc9384773d",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07271da2_535bcd9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-08-30T15:57:53Z",
      "side": 1,
      "message": "We roll PA into PDFium ~monthly, except in the case of breaking API changes, where we will do it on demand.  I think this justifies a roll. See https://pdfium-review.googlesource.com/c/pdfium/+/111550",
      "parentUuid": "ff9a01f8_f847c937",
      "revId": "bcfed8ddcd0bda9c17a41c76ef2c6fdc9384773d",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed8275d5_fb95bf73",
        "filename": "core/fxcrt/fx_memory_pa.cpp",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 9326
      },
      "writtenOn": "2023-08-30T10:35:19Z",
      "side": 1,
      "message": "We have two options here - `Alloc` and `AllocInline`. As `AllocWithFlags` was inline, I choose `AllocInline` to keep inline-ness.\nHowever, if PDFium was using `AllocWithFlags` just to pass flags, we may consider using `Alloc` for smaller binary size + better instruction cache efficiency.",
      "revId": "bcfed8ddcd0bda9c17a41c76ef2c6fdc9384773d",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f0612d1_64f76e3d",
        "filename": "core/fxcrt/fx_memory_pa.cpp",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 5495
      },
      "writtenOn": "2023-08-30T15:57:53Z",
      "side": 1,
      "message": "This is a .cpp file, so the inlinc call should only be expaneded once, no?",
      "parentUuid": "ed8275d5_fb95bf73",
      "revId": "bcfed8ddcd0bda9c17a41c76ef2c6fdc9384773d",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}