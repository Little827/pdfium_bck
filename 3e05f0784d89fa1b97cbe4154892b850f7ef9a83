{
  "comments": [
    {
      "key": {
        "uuid": "aceac458_43c08fe5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-14T19:09:16Z",
      "side": 1,
      "message": "Keep the summary brief, rather than trying to cramp details into it and use abbr to keep the sentence from getting too long. e.g. \"Split PDF_DataDecode() in two\"",
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b4fa0f3_65cf51d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 7633
      },
      "writtenOn": "2019-06-17T20:35:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aceac458_43c08fe5",
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3186f8ca_2cf37593",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-14T19:09:16Z",
      "side": 1,
      "message": "refer to a function as FunctionName(), so it is obvious it is a function and not something with ClassName.",
      "range": {
        "startLine": 9,
        "startChar": 10,
        "endLine": 9,
        "endChar": 24
      },
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7d30b83_b82323c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 7633
      },
      "writtenOn": "2019-06-17T20:35:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3186f8ca_2cf37593",
      "range": {
        "startLine": 9,
        "startChar": 10,
        "endLine": 9,
        "endChar": 24
      },
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf5c4da5_30b16c44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-14T19:21:12Z",
      "side": 1,
      "message": "I just realized this is suppose to be a variable. Refer to variables as |variable_name|, so it is obvious that\u0027s that. Otherwise, if you have a variable named \"pizza\", you are going to write \"it generates pizza\" and that sounds weird. (and delicious)",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1942e24a_f18bd4d7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 7633
      },
      "writtenOn": "2019-06-17T20:35:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf5c4da5_30b16c44",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "984c6bd3_58347b39",
        "filename": "core/fpdfapi/parser/fpdf_parser_decode.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-14T19:21:12Z",
      "side": 1,
      "message": "This is more of an information retrieval function. Thus I think GetDecoderArray() makes more sense, naming-wise.",
      "range": {
        "startLine": 74,
        "startChar": 5,
        "endLine": 74,
        "endChar": 20
      },
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24af7753_a3095bb2",
        "filename": "core/fpdfapi/parser/fpdf_parser_decode.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-14T19:21:12Z",
      "side": 1,
      "message": "A lot of code have the pattern of a boolean return value and a single out parameter. In modern C++, a better way of doing this is with std::optional. But std::optional is not allowed in PDFium yet, so one should use pdfium::Optional instead. Write this as:\n\nOptional\u003cstd::vector\u003cstd::pair\u003cByteString, const CPDF_Object*\u003e\u003e\u003e GetDecoderArray(const CPDF_Dictionary* pDict);",
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4074bac4_6a40e712",
        "filename": "core/fpdfapi/parser/fpdf_parser_decode.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 7633
      },
      "writtenOn": "2019-06-17T20:35:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "984c6bd3_58347b39",
      "range": {
        "startLine": 74,
        "startChar": 5,
        "endLine": 74,
        "endChar": 20
      },
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "415ab87c_40c30a20",
        "filename": "core/fpdfapi/parser/fpdf_parser_decode.h",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 7633
      },
      "writtenOn": "2019-06-17T20:35:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24af7753_a3095bb2",
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6844dbec_8f5986ab",
        "filename": "core/fpdfapi/parser/fpdf_parser_decode.h",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-14T19:21:12Z",
      "side": 1,
      "message": "\"git cl lint\" should have warned you not to pass parameters by non-const reference. https://google.github.io/styleguide/cppguide.html#Reference_Arguments",
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1419fc7b_2ef8fd1b",
        "filename": "core/fpdfapi/parser/fpdf_parser_decode.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-14T19:21:12Z",
      "side": 1,
      "message": "Pass by const-reference. As is, this passes by value, which means the vector has to be duplicated.",
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "877a98e6_75a47c62",
        "filename": "core/fpdfapi/parser/fpdf_parser_decode.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-06-14T19:21:12Z",
      "side": 1,
      "message": "decoder_array",
      "range": {
        "startLine": 86,
        "startChar": 65,
        "endLine": 86,
        "endChar": 77
      },
      "revId": "3e05f0784d89fa1b97cbe4154892b850f7ef9a83",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}