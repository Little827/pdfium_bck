{
  "comments": [
    {
      "key": {
        "uuid": "35244f72_05c043b4",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 5965
      },
      "writtenOn": "2018-06-19T14:57:19Z",
      "side": 1,
      "message": "This should probably store m_pInfoDict so we can avoid re-creating it each time.",
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43657d97_712e8425",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T15:19:05Z",
      "side": 1,
      "message": "We do not create it every time.\nIt is always stored in the document as one of the objects.",
      "parentUuid": "35244f72_05c043b4",
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ba1ef46_7346fe80",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 5965
      },
      "writtenOn": "2018-06-19T15:25:25Z",
      "side": 1,
      "message": "It\u0027s confusing that we have m_pInfoDict here which will sometimes be set (if you make a new document) but others not. We should either consistently store the pointer, or not.  Storing it means we don\u0027t have to remake the CPDF_Reference and call GetDirect on it every time.",
      "parentUuid": "43657d97_712e8425",
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88de14d4_8756464d",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T15:35:51Z",
      "side": 1,
      "message": "We can not store it, because we don\u0027t know in what moment it is will be available.\nBut i can fill |m_pInfoDict| once in this method, to cache it, if it becomes available.\nI mean:\n  m_pInfoDict \u003d ToDictionary(CPDF_Reference(this, m_pParser-\u003eGetInfoObjNum()).GetDirect());\n  return m_pInfoDict;\nAre you agree?",
      "parentUuid": "2ba1ef46_7346fe80",
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68eb6b8a_0ab01b67",
        "filename": "core/fpdfapi/parser/cpdf_document.cpp",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 5965
      },
      "writtenOn": "2018-06-19T15:38:58Z",
      "side": 1,
      "message": "Yes, that\u0027s what I meant by storing it above (sorry, I should have said cache it). Then when we call this a second time we\u0027ll just return m_pInfoDict.",
      "parentUuid": "88de14d4_8756464d",
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d94f32c4_e4fe68e5",
        "filename": "core/fpdfapi/parser/cpdf_document.h",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 5965
      },
      "writtenOn": "2018-06-19T14:57:19Z",
      "side": 1,
      "message": "Why is this static and why does it need to receive the pages now?",
      "range": {
        "startLine": 123,
        "startChar": 2,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7beb8ce_73417c2b",
        "filename": "core/fpdfapi/parser/cpdf_document.h",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T15:19:05Z",
      "side": 1,
      "message": "Oops, sorry, this is changes from other CL.",
      "parentUuid": "d94f32c4_e4fe68e5",
      "range": {
        "startLine": 123,
        "startChar": 2,
        "endLine": 123,
        "endChar": 9
      },
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceaec0db_23ed0a3a",
        "filename": "fpdfsdk/fpdf_dataavail_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 5965
      },
      "writtenOn": "2018-06-19T14:57:19Z",
      "side": 1,
      "message": "If the Info is on the first page, do we still have to load the whole document or just the first page?",
      "range": {
        "startLine": 275,
        "startChar": 34,
        "endLine": 275,
        "endChar": 69
      },
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6253850a_479c556d",
        "filename": "fpdfsdk/fpdf_dataavail_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T15:19:05Z",
      "side": 1,
      "message": "If is is on first page, we should load only first page.",
      "parentUuid": "ceaec0db_23ed0a3a",
      "range": {
        "startLine": 275,
        "startChar": 34,
        "endLine": 275,
        "endChar": 69
      },
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe4ee39e_0d26e680",
        "filename": "fpdfsdk/fpdf_dataavail_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 5965
      },
      "writtenOn": "2018-06-19T15:25:25Z",
      "side": 1,
      "message": "Can we have a test for that?",
      "parentUuid": "6253850a_479c556d",
      "range": {
        "startLine": 275,
        "startChar": 34,
        "endLine": 275,
        "endChar": 69
      },
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66ae4e0c_da2adb19",
        "filename": "fpdfsdk/fpdf_dataavail_embeddertest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 7160
      },
      "writtenOn": "2018-06-19T15:35:51Z",
      "side": 1,
      "message": "I have not seen linearized pdfs with this case. I need it to write test.",
      "parentUuid": "fe4ee39e_0d26e680",
      "range": {
        "startLine": 275,
        "startChar": 34,
        "endLine": 275,
        "endChar": 69
      },
      "revId": "48a59065a870daa758135a38568cc8042c0ea99f",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}