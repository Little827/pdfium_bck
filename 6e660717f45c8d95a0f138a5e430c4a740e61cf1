{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8ca6b402_f4188b34",
        "filename": "testing/resources/hello_world_2_pages_split_streams.in",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 7620
      },
      "writtenOn": "2023-03-28T03:25:05Z",
      "side": 1,
      "message": "Put /Contents above /Resources for keeping the alphabetic order.",
      "range": {
        "startLine": 23,
        "startChar": 1,
        "endLine": 23,
        "endChar": 17
      },
      "revId": "6e660717f45c8d95a0f138a5e430c4a740e61cf1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9e4d7c0_7e702c01",
        "filename": "testing/resources/hello_world_2_pages_split_streams.in",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5045
      },
      "writtenOn": "2023-03-28T20:46:49Z",
      "side": 1,
      "message": "All the hello_world*.in files are written this way. One way to think about it is to define the resources before referencing them in the content stream. Of course, one can also argue for alphabetical ordering the keys, and many .in files are written that way.",
      "parentUuid": "8ca6b402_f4188b34",
      "range": {
        "startLine": 23,
        "startChar": 1,
        "endLine": 23,
        "endChar": 17
      },
      "revId": "6e660717f45c8d95a0f138a5e430c4a740e61cf1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e5af520_1ee648ab",
        "filename": "testing/resources/hello_world_2_pages_split_streams.in",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 7620
      },
      "writtenOn": "2023-03-28T21:22:04Z",
      "side": 1,
      "message": "It\u0027s not a deal breaker. Still LGTM.",
      "parentUuid": "a9e4d7c0_7e702c01",
      "range": {
        "startLine": 23,
        "startChar": 1,
        "endLine": 23,
        "endChar": 17
      },
      "revId": "6e660717f45c8d95a0f138a5e430c4a740e61cf1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "6e660717f45c8d95a0f138a5e430c4a740e61cf1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "6e660717f45c8d95a0f138a5e430c4a740e61cf1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}