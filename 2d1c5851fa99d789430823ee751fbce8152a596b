{
  "comments": [
    {
      "key": {
        "uuid": "2167c574_bf7c4f96",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 691,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-03-22T17:59:11Z",
      "side": 1,
      "message": "Probably should revert this to make Macs pass.",
      "revId": "2d1c5851fa99d789430823ee751fbce8152a596b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28c20280_900c2918",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 691,
      "author": {
        "id": 7541
      },
      "writtenOn": "2019-03-22T18:34:07Z",
      "side": 1,
      "message": "The test is comparing bitmap hash before (line 699) and after serialization (line 714). The float serialization is causing pixel level changes. I dumped the PNGs, they don\u0027t visually look different. One possible fix is to add kNonPrimesAfterSaveMD5 and compare against this hash on line 714. The new patch I uploaded has this fixed, but I could not validate it locally on Mac (I can do it only on Monday).",
      "parentUuid": "2167c574_bf7c4f96",
      "revId": "2d1c5851fa99d789430823ee751fbce8152a596b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea812740_d254d0d0",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 691,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-03-22T21:08:22Z",
      "side": 1,
      "message": "I can test it locally on Mac. This is the only piece that needs a bit more investigation. Otherwise the CL looks good.",
      "parentUuid": "28c20280_900c2918",
      "revId": "2d1c5851fa99d789430823ee751fbce8152a596b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ed82be1_2c24919b",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 691,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-03-22T23:02:13Z",
      "side": 1,
      "message": "There are some very minor pixel differences that are almost impossible to see unless one is zoomed in and looking very carefully.\n\nThe generated output PDF is different, and what we are observing here is CQuartz2D\u0027s handling of coordinates with more/less digits of precision. OTOH, if we switch to the Skia backend, its rendering is consistent.",
      "parentUuid": "ea812740_d254d0d0",
      "revId": "2d1c5851fa99d789430823ee751fbce8152a596b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c183066_f95ad36e",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 691,
      "author": {
        "id": 7553
      },
      "writtenOn": "2019-03-25T11:05:05Z",
      "side": 1,
      "message": "Hi Lei, \nAre you using \"pdf_use_skia\" flag for skia backend or making any other code changes ? If possible,  please share your args.gn file.\n\nThanks",
      "parentUuid": "5ed82be1_2c24919b",
      "revId": "2d1c5851fa99d789430823ee751fbce8152a596b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70f857af_6d0bea80",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 691,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-03-26T06:31:19Z",
      "side": 1,
      "message": "I was just testing the Skia backend to see how it behaved here vs. CQuartz2D. There\u0027s nothing special about my args.gn file. pdfium.org already explains how to use pdf_use_skia.",
      "parentUuid": "0c183066_f95ad36e",
      "revId": "2d1c5851fa99d789430823ee751fbce8152a596b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}