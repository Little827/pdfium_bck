{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "34796fd2_426ed118",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-03-16T19:05:00Z",
      "side": 1,
      "message": "WDYT of this one?",
      "revId": "9379843c42a6f25773d79aed4c8892300762c9b7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0081832b_aa34ec2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-03-16T21:18:24Z",
      "side": 1,
      "message": "As an intellectual exercise, I was trying to see if I could come up with a tail-recursive version of RDFD(), but I don\u0027t think there\u0027s a way to do that over intializer lists.",
      "revId": "9379843c42a6f25773d79aed4c8892300762c9b7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9411b8d3_970c30a0",
        "filename": "core/fpdfapi/parser/fpdf_parser_utility.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-03-16T20:52:06Z",
      "side": 1,
      "message": "nit: could just update \u0027dict\u0027 if you liked and avoid local.",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 113,
        "endChar": 41
      },
      "revId": "9379843c42a6f25773d79aed4c8892300762c9b7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "939e9d14_a9553719",
        "filename": "core/fpdfdoc/cpdf_bafontmap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 5495
      },
      "writtenOn": "2022-03-16T21:27:43Z",
      "side": 1,
      "message": "the only downside is we allocate and copy all of these into bytestring temporaries even if the earlier keys are not found (and this is a consequence of std::map needing a bytestring for key purposes.) Bytestringviews would be cheaper to set-up, but there are places where you are using *alias or something which is already a bytestring.",
      "range": {
        "startLine": 173,
        "startChar": 47,
        "endLine": 173,
        "endChar": 74
      },
      "revId": "9379843c42a6f25773d79aed4c8892300762c9b7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}