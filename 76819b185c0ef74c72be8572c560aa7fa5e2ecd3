{
  "comments": [
    {
      "key": {
        "uuid": "08b1c962_6ef561f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "Capitalize \"SkiaPaths\" consistently.",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 11
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e871f561_2b033c6b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "an -\u003e a",
      "range": {
        "startLine": 11,
        "startChar": 69,
        "endLine": 11,
        "endChar": 71
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbae78bb_92717bbc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e871f561_2b033c6b",
      "range": {
        "startLine": 11,
        "startChar": 69,
        "endLine": 11,
        "endChar": 71
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a393b8c_bbedd87d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08b1c962_6ef561f0",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 11
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef38b774_4959e60a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "skia -\u003e Skia",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 4
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f70cb8b_77885563",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef38b774_4959e60a",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 4
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b5e3de1_65d53acd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "This sentence runs a bit long, and I\u0027m not sure what it\u0027s trying to say.",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93d39fa1_b4ceab0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b5e3de1_65d53acd",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cffdd58a_5d080355",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "added -\u003e adds (match verb tense with \"modifies\")",
      "range": {
        "startLine": 18,
        "startChar": 60,
        "endLine": 18,
        "endChar": 65
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5092b4a1_74302453",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cffdd58a_5d080355",
      "range": {
        "startLine": 18,
        "startChar": 60,
        "endLine": 18,
        "endChar": 65
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "832a1ad2_8f5fd885",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:32:49Z",
      "side": 1,
      "message": "... and hook up the test to run as part of the presubmit process.",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0147471a_c7f3a9d0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "832a1ad2_8f5fd885",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09b61b6f_6b7c3bb6",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "Thanks for setting up PRESUBMIT_test!",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4220a101_b077ca41",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:32:49Z",
      "side": 1,
      "message": "Not used.",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b3b6d4c_be36fdef",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4220a101_b077ca41",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8964f42e_f7ea7b31",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "Parentheses aren\u0027t needed here.",
      "range": {
        "startLine": 10,
        "startChar": 33,
        "endLine": 10,
        "endChar": 34
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe08336e_e81dc2f4",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done. Removed parentheses in the new patch.\n\nI do see some code use parentheses when there are more than 2 methods to be imported. But I couldn\u0027t find any rules about using parentheses in the python style guide so far. There is also code which has more than 2 methods in one line without using parentheses. I am wondering if there is a generic preference for this.",
      "parentUuid": "8964f42e_f7ea7b31",
      "range": {
        "startLine": 10,
        "startChar": 33,
        "endLine": 10,
        "endChar": 34
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48af0ba1_b55ff06d",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-09T00:20:59Z",
      "side": 1,
      "message": "It\u0027s subjective, but in general, we don\u0027t write code that isn\u0027t needed. There\u0027s no need for the parentheses, and they don\u0027t improve readability.",
      "parentUuid": "fe08336e_e81dc2f4",
      "range": {
        "startLine": 10,
        "startChar": 33,
        "endLine": 10,
        "endChar": 34
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30f9085e_f49764dc",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:32:49Z",
      "side": 1,
      "message": "Not needed?",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8797a074_c3d50b52",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "Was this for debugging?",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0067ab7d_493d8ed4",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Yes. Somehow missed this one when I was cleaning up the debugging message.",
      "parentUuid": "8797a074_c3d50b52",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7f6d3d_cae08f06",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30f9085e_f49764dc",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2b98479_c1da5ac5",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "Maybe map(MockFile, [...])?",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c850304_48fa7211",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2b98479_c1da5ac5",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d75a908_580f7bca",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:32:49Z",
      "side": 1,
      "message": "What about \u0027expected.pdf.0.png\u0027 ? That has \u0027expected\u0027 but is not in the wrong format.",
      "range": {
        "startLine": 27,
        "startChar": 39,
        "endLine": 27,
        "endChar": 57
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "101e2896_3c58a15b",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d75a908_580f7bca",
      "range": {
        "startLine": 27,
        "startChar": 39,
        "endLine": 27,
        "endChar": 57
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4a2b087_78c9a9b7",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:32:49Z",
      "side": 1,
      "message": "This is probably not effective, as it is missing the page number as well.",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8fee745_3c622c5c",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 31,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4a2b087_78c9a9b7",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66e521d4_b2ec2b0d",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "How about a single assertEqual() instead?\n\n  self.assertEqual(map(str, errors), [...])\n\n(Can also reverse the first and second arguments, although I think this formats a bit better.)",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9418c680_b545d9e9",
        "filename": "PRESUBMIT_test.py",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "After offline discussion, implement this part with forloop for better readability.",
      "parentUuid": "66e521d4_b2ec2b0d",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5fcca19_79c91bf7",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "In chromium/src, this file is named PRESUBMIT_test_mocks.py.\n\nI\u0027m going to assume the contents don\u0027t need to be reviewed.",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3459153b_9785f329",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Yes, the file in chromium is with uppercase \"PRESUBMIT\". \nThe reason why I named this pdfium code with all lowercase was to be similar to src/third_party/webrtc/presubmit_test_mocks.py, since it\u0027s also third-party code derived from the chromium/src/PRESUBMIT_test_mocks.py. I hope the lowercase name can help tell the difference that this is not chromium\u0027s original code but with modifications.",
      "parentUuid": "f5fcca19_79c91bf7",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c29b178_fa8e7728",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-09T00:20:59Z",
      "side": 1,
      "message": "Why would we want to indicate that the code is modified using different capitalization? I suspect what happened here is that someone thought an all-lower name was better stylistically.\n\nIn any case, we should pick a name that makes sense: PRESUBMIT_test_mocks.py is derived from PRESUBMIT_test.py.",
      "parentUuid": "3459153b_9785f329",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef158f66_e904bb1e",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:32:49Z",
      "side": 1,
      "message": "No \"(c)\".",
      "range": {
        "startLine": 1,
        "startChar": 12,
        "endLine": 1,
        "endChar": 16
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da7a1285_c063a75e",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "This is PDFium, not Chromium. I\u0027m not sure if we need to cite Chromium as well, though...\n\nI think the copyright statement is too long, too. It\u0027s not the format we use today.",
      "range": {
        "startLine": 1,
        "startChar": 21,
        "endLine": 1,
        "endChar": 41
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64586d74_75b05f25",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:42:25Z",
      "side": 1,
      "message": "We\u0027ve kept the \"Chromium authors\" line for many files cloned from Chromium, so this is fine.",
      "parentUuid": "da7a1285_c063a75e",
      "range": {
        "startLine": 1,
        "startChar": 21,
        "endLine": 1,
        "endChar": 41
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5d5ead9_2d16b421",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef158f66_e904bb1e",
      "range": {
        "startLine": 1,
        "startChar": 12,
        "endLine": 1,
        "endChar": 16
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9db5efb6_b8af34a7",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-09T00:20:59Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "64586d74_75b05f25",
      "range": {
        "startLine": 1,
        "startChar": 21,
        "endLine": 1,
        "endChar": 41
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d11fc57b_baa3d6a5",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 3,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:42:25Z",
      "side": 1,
      "message": "Yes, please use the modern copyright header, as seen in Chromium\u0027s PRESUBMIT_test_mocks.py. Despite being the original, it has been better maintained than the WebRTC one.",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8d398d7_0310ef25",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 3,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d11fc57b_baa3d6a5",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c82e3b73_35cfe28a",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:32:49Z",
      "side": 1,
      "message": "There\u0027s no need to write this?",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17868a7e_e57e080f",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-07T22:34:05Z",
      "side": 1,
      "message": "This seems a little silly. I\u0027d just list the URL (breaking to the next line).",
      "range": {
        "startLine": 9,
        "startChar": 27,
        "endLine": 9,
        "endChar": 30
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e9a21c8_86bcd45d",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17868a7e_e57e080f",
      "range": {
        "startLine": 9,
        "startChar": 27,
        "endLine": 9,
        "endChar": 30
      },
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9ce06b_56e87d5e",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c82e3b73_35cfe28a",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "905797be_5f584df5",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-07T22:32:49Z",
      "side": 1,
      "message": "Despite what line 9-10 says, this looks like it came from Chromium\u0027s third_party/webrtc/presubmit_test_mocks.py.\n\nWhy clone WebRTC\u0027s version and not the Chromium version? Whichever version you clone, can you minimize the amount of code needed? e.g. I\u0027m not sure |bugs_from_description| is actually used for anything.",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12433d84_751bfb6b",
        "filename": "presubmit_test_mocks.py",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-08T23:32:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "905797be_5f584df5",
      "revId": "76819b185c0ef74c72be8572c560aa7fa5e2ecd3",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}