{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d481b827_7f8265e1",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1738,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-11-13T23:43:26Z",
      "side": 1,
      "message": "It would be nice to comment in the param names on these, as such\n\n /*bStrict\u003d*/false",
      "range": {
        "startLine": 1738,
        "startChar": 60,
        "endLine": 1738,
        "endChar": 65
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dad9c6f5_59653081",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1738,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-11-14T00:06:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d481b827_7f8265e1",
      "range": {
        "startLine": 1738,
        "startChar": 60,
        "endLine": 1738,
        "endChar": 65
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fbfa428_ca69fa3d",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1770,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-11-13T23:43:26Z",
      "side": 1,
      "message": "Technically this is against the style guide:\n\n\"You should not use the unsigned integer types such as uint32_t, unless there is a valid reason such as representing a bit pattern rather than a number, or you need defined overflow modulo 2^N. In particular, do not use unsigned types to say a number will never be negative. Instead, use assertions for this.\"\nhttps://google.github.io/styleguide/cppguide.html#Integer_Types\n\nHowever, I see you\u0027re trying to be consistent in the file, which is ok.",
      "range": {
        "startLine": 1770,
        "startChar": 2,
        "endLine": 1770,
        "endChar": 10
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ded9b2f_b4b0ec1c",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1770,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-11-13T23:57:34Z",
      "side": 1,
      "message": "Chrome security team has a well-known longstanding violent objection to this part of the guide, because overflow for signed types is undefined, and these overflow all the time.  So it\u0027s not a matter of needing modulo, its a matter of being able to prove these can\u0027t overflow  --- for these cases where there can\u0027t be negative values. We do not adhere to this anywhere in chrome.",
      "parentUuid": "3fbfa428_ca69fa3d",
      "range": {
        "startLine": 1770,
        "startChar": 2,
        "endLine": 1770,
        "endChar": 10
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5c94768_531756ca",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1770,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-11-14T00:03:19Z",
      "side": 1,
      "message": "That\u0027s very good to know. Should there be an update to this doc then?\nhttps://chromium.googlesource.com/chromium/src/+/HEAD/styleguide/c++/c++.md#types",
      "parentUuid": "3ded9b2f_b4b0ec1c",
      "range": {
        "startLine": 1770,
        "startChar": 2,
        "endLine": 1770,
        "endChar": 10
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83667457_cdf1e2c3",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1807,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-11-13T23:43:26Z",
      "side": 1,
      "message": "Over parenthesized?",
      "range": {
        "startLine": 1807,
        "startChar": 16,
        "endLine": 1807,
        "endChar": 29
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38fae176_afb3e1e1",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1807,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-11-14T00:06:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83667457_cdf1e2c3",
      "range": {
        "startLine": 1807,
        "startChar": 16,
        "endLine": 1807,
        "endChar": 29
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "343eb369_8b23a95c",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1828,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-11-13T23:43:26Z",
      "side": 1,
      "message": "Ditto",
      "range": {
        "startLine": 1828,
        "startChar": 16,
        "endLine": 1828,
        "endChar": 29
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9f8ce36_0e688f76",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1828,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-11-14T00:06:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "343eb369_8b23a95c",
      "range": {
        "startLine": 1828,
        "startChar": 16,
        "endLine": 1828,
        "endChar": 29
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a9f2896_b0d15058",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.h",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-11-13T23:43:26Z",
      "side": 1,
      "message": "IWYU \u003cfunctional\u003e",
      "range": {
        "startLine": 278,
        "startChar": 29,
        "endLine": 278,
        "endChar": 37
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26a7d538_959b0008",
        "filename": "fxjs/xfa/cfxjse_formcalc_context.h",
        "patchSetId": 3
      },
      "lineNbr": 278,
      "author": {
        "id": 5495
      },
      "writtenOn": "2020-11-14T00:06:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a9f2896_b0d15058",
      "range": {
        "startLine": 278,
        "startChar": 29,
        "endLine": 278,
        "endChar": 37
      },
      "revId": "e970dbe169cf1afc88441c44d373d105b1e9510e",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}