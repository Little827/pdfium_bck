{
  "comments": [
    {
      "key": {
        "uuid": "e1b9fafe_a35a4271",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1771,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-07-26T22:03:49Z",
      "side": 1,
      "message": "17U",
      "range": {
        "startLine": 1771,
        "startChar": 12,
        "endLine": 1771,
        "endChar": 42
      },
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "addf2816_4dc665c5",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1771,
      "author": {
        "id": 6835
      },
      "writtenOn": "2018-07-27T08:22:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1b9fafe_a35a4271",
      "range": {
        "startLine": 1771,
        "startChar": 12,
        "endLine": 1771,
        "endChar": 42
      },
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "360e16fc_7a4d9044",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1773,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-07-26T22:03:49Z",
      "side": 1,
      "message": "resize(), not reserve().",
      "range": {
        "startLine": 1773,
        "startChar": 12,
        "endLine": 1773,
        "endChar": 19
      },
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75e86d09_78c6062a",
        "filename": "fpdfsdk/fpdf_edit_embeddertest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1773,
      "author": {
        "id": 6835
      },
      "writtenOn": "2018-07-27T08:22:20Z",
      "side": 1,
      "message": "Ah, thanks. `is_asan \u003d true` reproduced the problem locally, the new patch set now passes the test with asan enabled as well.",
      "parentUuid": "360e16fc_7a4d9044",
      "range": {
        "startLine": 1773,
        "startChar": 12,
        "endLine": 1773,
        "endChar": 19
      },
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd14985c_5825d846",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1266,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-07-26T21:03:50Z",
      "side": 1,
      "message": "Add new line after this. This statement and the next are separate things.",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28b5cb28_c11f0e74",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1266,
      "author": {
        "id": 6835
      },
      "writtenOn": "2018-07-27T08:22:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd14985c_5825d846",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dce8ac72_cf918158",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1270,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-07-26T21:03:50Z",
      "side": 1,
      "message": "That\u0027s not really true, if buffer is not large enough, I don\u0027t think we can consider the Get a success, yet something \u003e 0 will be returned.",
      "range": {
        "startLine": 1269,
        "startChar": 70,
        "endLine": 1270,
        "endChar": 10
      },
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39f1bdc2_3fc066db",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1270,
      "author": {
        "id": 6835
      },
      "writtenOn": "2018-07-27T08:22:20Z",
      "side": 1,
      "message": "I\u0027ve updated the description to match the one of FPDFAction_GetFilePath for consistency. It\u0027s the same \"what to return when in fact the real return value is an outgoing parameter\" problem.",
      "parentUuid": "dce8ac72_cf918158",
      "range": {
        "startLine": 1269,
        "startChar": 70,
        "endLine": 1270,
        "endChar": 10
      },
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06747957_a3b7adaa",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-07-25T20:21:47Z",
      "side": 1,
      "message": "Normally we return strings encoded in UTF-16. Not sure if we want to continue to do so here. Lei?",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7114954d_f54b47fa",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 6835
      },
      "writtenOn": "2018-07-26T20:23:17Z",
      "side": 1,
      "message": "My intention was to be consistent with FPDFPageObj_NewTextObj(), which takes a byte string, not a wide string.\n\nBut sure, can rework the change that way if wanted.",
      "parentUuid": "06747957_a3b7adaa",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23b83045_ece0beb5",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-07-26T20:25:19Z",
      "side": 1,
      "message": "Ah yes, many methods take a ByteString as parameter, but I think all methods that return a string encode it in UTF-16.",
      "parentUuid": "7114954d_f54b47fa",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb4ee993_e8778e26",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 6835
      },
      "writtenOn": "2018-07-26T20:32:34Z",
      "side": 1,
      "message": "I see. Still, DefaultGetFaceName() returns a byte string, so consistency between DefaultGetFaceName() and this new FPDFText_GetFontName() would be probably nice, since both expose font names.\n\n(Though I maintain that of course if requested, I can rework this change, it just feels inconsistent when it comes to exposing font names.)",
      "parentUuid": "23b83045_ece0beb5",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30f0e017_10057e4a",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-07-26T21:03:50Z",
      "side": 1,
      "message": "Lei pointed out that FPDFAction_GetFilePath(), FPDFAction_GetURIPath(), and FPDFImageObj_GetImageFilter() returns utf-8. I suppose we can go with utf-8, just mention that in the comment and switch to a void* to be consistent.",
      "parentUuid": "cb4ee993_e8778e26",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "185d30bb_2f39b309",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-07-26T21:16:44Z",
      "side": 1,
      "message": "Do we know if the font name is always going to be ASCII?",
      "parentUuid": "30f0e017_10057e4a",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cb11de5_54f9022e",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 6835
      },
      "writtenOn": "2018-07-27T08:22:20Z",
      "side": 1,
      "message": "Reading the spec (PDF 1.7, table 111, BaseFont; table 122, FontName), I don\u0027t see any restriction why this would have to be ASCII only.",
      "parentUuid": "185d30bb_2f39b309",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e39364d3_f1f49510",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 2
      },
      "lineNbr": 1273,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-07-27T15:47:21Z",
      "side": 1,
      "message": "pdfium_engine.cc MapFont() considers font names as utf-8, so it should be fine and in line with DefaultGetFaceName().",
      "parentUuid": "3cb11de5_54f9022e",
      "revId": "ad2967216949b850471e3a72fce682b421560cba",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}