{
  "pushCert": "certificate version 0.1\npusher 5A66FD7B 1633713860 -0700\npushee https://pdfium.googlesource.com/pdfium/\nnonce ALC2d1/kVRxkpXRbEGUff9mAhhXbRzirARwhiNM28hVxGihv+HGYLuNgzg8k8Raal2KCjCU0UvNB\n\n0000000000000000000000000000000000000000 95ebccd927b24ecee26b8bb08a0d7993cf85f996 refs/for/refs/heads/main%wip,m\u003dInitial_upload,cc\u003dpdfium-reviews@googlegroups.com,l\u003dCommit-Queue+1\n-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEE5k8iyLVP2jn8A19DqzYtYVpm/XsFAmFgfsQACgkQqzYtYVpm\n/XvVZggAvr+k2pLxikvchPh4CJQ+6P8v40XTPiyyN6VQyKAvwxPD/XT17v6oVJWt\nRliRUrenkuke4oyCq1cbdVzgeN+i5CivxTfrlvYiW4R1Eo9ZBMAOwWwPyw7ly8Tm\nW1t0RS9LJlueSJjldrb4Re1MkAiLsKFR91o1ZojRRHqvoFpibVOwekWTdHdVQMLp\nSdBV1OLrhMl9tkZdaR+NxLgYaDXEynw2DV3/OK9tJCQPEU2ZQJ6hRTZqoJqx+v06\neD11pQtyMKGIDYNZsQ0hvHo84pqFUMbCQXexWDxMelG0pIPTb/ZsJEB+CSomiKta\nljWed7HRb4g8tzuyxAcosNHdwACs6w\u003d\u003d\n\u003dQKrT\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7972ee02_7fb4b03b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-08T19:06:29Z",
      "side": 1,
      "message": "Note that this may be a game of whac-a-mole with ClusterFuzz, but this one has been around for a while, so it\u0027s time to give it a whack.",
      "revId": "95ebccd927b24ecee26b8bb08a0d7993cf85f996",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e2f0b05_a6d7ee6c",
        "filename": "third_party/lcms/0034-eval4inputs-integer-overflow.patch",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-10-08T19:43:02Z",
      "side": 1,
      "message": "pre-existing: from a strict type safety point of view, this seems odd. It takes an int and returns a cmsMumbleThing type, but we\u0027re already passing \u0027Rest\u0027 as a  cmsMumbleThing.",
      "range": {
        "startLine": 27,
        "startChar": 56,
        "endLine": 27,
        "endChar": 78
      },
      "revId": "95ebccd927b24ecee26b8bb08a0d7993cf85f996",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "761eb61a_ff0b0026",
        "filename": "third_party/lcms/src/cmsintrp.c",
        "patchSetId": 1
      },
      "lineNbr": 846,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-10-08T19:35:43Z",
      "side": 1,
      "message": "nit: this might make more sense as a hex constant 0x7fff0000",
      "range": {
        "startLine": 846,
        "startChar": 41,
        "endLine": 846,
        "endChar": 51
      },
      "revId": "95ebccd927b24ecee26b8bb08a0d7993cf85f996",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80afc9a8_63a88efa",
        "filename": "third_party/lcms/src/cmsintrp.c",
        "patchSetId": 1
      },
      "lineNbr": 847,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-10-08T19:35:43Z",
      "side": 1,
      "message": "Can you explain why not 32767 if we care about signed short and 32768 doesn\u0027t fit in signed short?\nnit: this might make more sense as 0x00010000",
      "range": {
        "startLine": 847,
        "startChar": 54,
        "endLine": 847,
        "endChar": 59
      },
      "revId": "95ebccd927b24ecee26b8bb08a0d7993cf85f996",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f36f7b66_acb9da26",
        "filename": "third_party/lcms/src/cmsintrp.c",
        "patchSetId": 1
      },
      "lineNbr": 857,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-10-08T19:53:48Z",
      "side": 1,
      "message": "isn\u0027t this really a int32_t - equivalent, since its in the 0..32768, not a (0 .. 32767) \u003c\u003c 16 | fract ?",
      "range": {
        "startLine": 857,
        "startChar": 4,
        "endLine": 857,
        "endChar": 23
      },
      "revId": "95ebccd927b24ecee26b8bb08a0d7993cf85f996",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3874684_c3b95294",
        "filename": "third_party/lcms/src/cmsintrp.c",
        "patchSetId": 1
      },
      "lineNbr": 949,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-10-08T19:35:43Z",
      "side": 1,
      "message": "so does this overflow, too, otherwise wondering why we don\u0027t just clamp this result to 32768",
      "range": {
        "startLine": 949,
        "startChar": 36,
        "endLine": 949,
        "endChar": 54
      },
      "revId": "95ebccd927b24ecee26b8bb08a0d7993cf85f996",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}