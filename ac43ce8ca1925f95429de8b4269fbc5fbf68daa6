{
  "comments": [
    {
      "key": {
        "uuid": "4a3b6320_5b4bf474",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-03T00:27:06Z",
      "side": 1,
      "message": "As always, once the CL changes, remember to keep the CL description in sync.",
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b130d41_4637b7d9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-03T05:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a3b6320_5b4bf474",
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82fbfc24_7ace542f",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-03T00:33:40Z",
      "side": 1,
      "message": "How about \"_RunImageDiff\", since the function\u0027s goal is to run a command, and its return value is very similar to that of RunCommand()?",
      "range": {
        "startLine": 51,
        "startChar": 6,
        "endLine": 51,
        "endChar": 19
      },
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41fab17c_31857c99",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-03T00:37:16Z",
      "side": 1,
      "message": "Or \"_RunImageDiffCommand\" if that\u0027s not too long. GetImageDiff() makes me think it\u0027s going to return some representation of the difference between images.",
      "parentUuid": "82fbfc24_7ace542f",
      "range": {
        "startLine": 51,
        "startChar": 6,
        "endLine": 51,
        "endChar": 19
      },
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec16ddd_22664c85",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 51,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-03T05:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41fab17c_31857c99",
      "range": {
        "startLine": 51,
        "startChar": 6,
        "endLine": 51,
        "endChar": 19
      },
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26689b94_a9648b78",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-03T00:27:06Z",
      "side": 1,
      "message": "NotFoundError(\"put an error message here\"), otherwise line 93 will only print: \"\"FAILURE: input_filename.pdf; \", with an empty string where the error message should go.",
      "range": {
        "startLine": 54,
        "startChar": 14,
        "endLine": 54,
        "endChar": 29
      },
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf8157b3_58d0cf43",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-03T00:27:06Z",
      "side": 1,
      "message": "Just return the NotFoundError(). Raising the error, catching it, and then returning it is a convoluted way of accomplishing the same thing.",
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20cf4f72_6c34bac2",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-03T05:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26689b94_a9648b78",
      "range": {
        "startLine": 54,
        "startChar": 14,
        "endLine": 54,
        "endChar": 29
      },
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "228feed9_c33e6d5f",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-03T05:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf8157b3_58d0cf43",
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49f098b8_e4f020fe",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-04-04T00:01:20Z",
      "side": 1,
      "message": "I disagree with this, but mostly because I think this function should let the exception bubble out and be caught by the caller, instead of trying to return it.\n\nFor example, now we have an awkward isinstance() check in the outer code.",
      "parentUuid": "228feed9_c33e6d5f",
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7a329c6_bb26a3d0",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-04T00:13:59Z",
      "side": 1,
      "message": "RunCommand() already returns (not raise) an exception, so this is just going with the flow. It\u0027s awkward to use return values half the time and catch exceptions the other half.",
      "parentUuid": "49f098b8_e4f020fe",
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "228da9c9_d4f81f6a",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-03T00:08:34Z",
      "side": 1,
      "message": "To check whether the error is NotFoundError type, I am using __class__.__name__  to check the class name. It doesn\u0027t look good to me but it\u0027s so far the only solution I can find. Do you have any suggestion on improving this?",
      "range": {
        "startLine": 91,
        "startChar": 13,
        "endLine": 91,
        "endChar": 64
      },
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b36914d7_30d1a0cb",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-04-03T00:27:06Z",
      "side": 1,
      "message": "Use isinstance().",
      "parentUuid": "228da9c9_d4f81f6a",
      "range": {
        "startLine": 91,
        "startChar": 13,
        "endLine": 91,
        "endChar": 64
      },
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f5bc5d5_da6a3132",
        "filename": "testing/tools/pngdiffer.py",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-04-03T05:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b36914d7_30d1a0cb",
      "range": {
        "startLine": 91,
        "startChar": 13,
        "endLine": 91,
        "endChar": 64
      },
      "revId": "ac43ce8ca1925f95429de8b4269fbc5fbf68daa6",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}