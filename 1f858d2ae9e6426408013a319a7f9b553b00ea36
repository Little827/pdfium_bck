{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d273a9d_751feb75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5045
      },
      "writtenOn": "2024-04-05T18:06:31Z",
      "side": 1,
      "message": "Should GetBuffer() call GetWritableBuffer() instead to avoid needing remove_const_span()?",
      "revId": "1f858d2ae9e6426408013a319a7f9b553b00ea36",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "129877f7_3dac2f6c",
        "filename": "core/fxcrt/span_util.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 9516
      },
      "writtenOn": "2024-04-05T16:46:35Z",
      "side": 1,
      "message": "I would want to avoid remove_const_span(as_bytes(s)) which should be as_writable_bytes(s), how can we avoid that?",
      "range": {
        "startLine": 129,
        "startChar": 23,
        "endLine": 129,
        "endChar": 40
      },
      "revId": "1f858d2ae9e6426408013a319a7f9b553b00ea36",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f34c7717_55764f66",
        "filename": "core/fxcrt/span_util.h",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 9516
      },
      "writtenOn": "2024-04-05T16:46:35Z",
      "side": 1,
      "message": "do we not need to also preserve the size_t N (and I see a P above too)?",
      "range": {
        "startLine": 129,
        "startChar": 54,
        "endLine": 129,
        "endChar": 61
      },
      "revId": "1f858d2ae9e6426408013a319a7f9b553b00ea36",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "1f858d2ae9e6426408013a319a7f9b553b00ea36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1f858d2ae9e6426408013a319a7f9b553b00ea36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}