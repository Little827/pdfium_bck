{
  "comments": [
    {
      "key": {
        "uuid": "fd746d5f_1c98112c",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 9
      },
      "lineNbr": 298,
      "author": {
        "id": 5965
      },
      "writtenOn": "2018-03-20T15:39:03Z",
      "side": 1,
      "message": "Add a line that the FPDF_PAGEOBJECTMARK does not need to be free\u0027d and is owned by the library? Something about when it will become invalid? (Page closed? Document closed?)",
      "range": {
        "startLine": 298,
        "startChar": 14,
        "endLine": 298,
        "endChar": 27
      },
      "revId": "edd32e63aaee0e8236b9ad910309e07fa55335bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4b65522_6c8da1cf",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 9
      },
      "lineNbr": 298,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-03-20T19:19:24Z",
      "side": 1,
      "message": "+1. It will be helpful for readers to understand the lifetime and ownership semantics. Presumably it\u0027s tied to the life time of |page_object|.\n\nThinking ahead - are we going to have editing APIs that can invalidate the page marks?",
      "parentUuid": "fd746d5f_1c98112c",
      "range": {
        "startLine": 298,
        "startChar": 14,
        "endLine": 298,
        "endChar": 27
      },
      "revId": "edd32e63aaee0e8236b9ad910309e07fa55335bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3befb72d_8256ac1b",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 9
      },
      "lineNbr": 298,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-03-20T19:37:08Z",
      "side": 1,
      "message": "What does \"invalidating the page marks\" mean? Modifying them?",
      "parentUuid": "a4b65522_6c8da1cf",
      "range": {
        "startLine": 298,
        "startChar": 14,
        "endLine": 298,
        "endChar": 27
      },
      "revId": "edd32e63aaee0e8236b9ad910309e07fa55335bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37fa24a6_fc969532",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 9
      },
      "lineNbr": 298,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-03-20T20:01:13Z",
      "side": 1,
      "message": "Added the comment about not freeing the handle.",
      "parentUuid": "3befb72d_8256ac1b",
      "range": {
        "startLine": 298,
        "startChar": 14,
        "endLine": 298,
        "endChar": 27
      },
      "revId": "edd32e63aaee0e8236b9ad910309e07fa55335bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a384057_193ebf27",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 9
      },
      "lineNbr": 298,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-03-20T20:22:14Z",
      "side": 1,
      "message": "Underneath, it\u0027s a const CPDF_ContentMarkItem* in the CPDF_ContentMark::MarkData::m_Marks vector. If anything happens to that vector to cause the pointers to be invalid...",
      "parentUuid": "37fa24a6_fc969532",
      "range": {
        "startLine": 298,
        "startChar": 14,
        "endLine": 298,
        "endChar": 27
      },
      "revId": "edd32e63aaee0e8236b9ad910309e07fa55335bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a6c649f_8ed2d89a",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 9
      },
      "lineNbr": 298,
      "author": {
        "id": 7035
      },
      "writtenOn": "2018-03-20T20:33:52Z",
      "side": 1,
      "message": "Another option is copying the CPDF_ContentMarkItem and transfer ownership of the copy to the caller. That was what a previous version of the CL did. It would avoid the problem you\u0027re raising. Do we have guarantees, though, in the rest of the API, that editing the .pdf will maintain the handles passed to callers valid? I don\u0027t think this is a problem specific to this cl.",
      "parentUuid": "5a384057_193ebf27",
      "range": {
        "startLine": 298,
        "startChar": 14,
        "endLine": 298,
        "endChar": 27
      },
      "revId": "edd32e63aaee0e8236b9ad910309e07fa55335bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89472ec7_ce150063",
        "filename": "public/fpdf_edit.h",
        "patchSetId": 9
      },
      "lineNbr": 298,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-03-20T21:40:31Z",
      "side": 1,
      "message": "CPDF_ContentMarkItem still has an UnownedPtr that may be used to point to a property dict from some higher level object. So a copy would still have to deal with that.\n\nI agree this issue is not unique to this CL. Nevertheless, we should try to get the API right on the first try if possible.",
      "parentUuid": "1a6c649f_8ed2d89a",
      "range": {
        "startLine": 298,
        "startChar": 14,
        "endLine": 298,
        "endChar": 27
      },
      "revId": "edd32e63aaee0e8236b9ad910309e07fa55335bf",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}