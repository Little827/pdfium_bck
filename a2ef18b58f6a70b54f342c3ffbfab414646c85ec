{
  "comments": [
    {
      "key": {
        "uuid": "d99d132a_62fd3a1f",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-03T19:08:27Z",
      "side": 1,
      "message": "Would it be more symmetrical to name this FXSYS_IsUpperASCII(), for more symmetry with the FXSYS_ToUpperASCII() function?\n\nSide note: I think you should stick with \"ASCII\" for consistency, but the Google style guide would want this to be spelled \"Ascii\" normally.",
      "range": {
        "startLine": 51,
        "startChar": 18,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f69760_29437ac3",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-03T19:08:27Z",
      "side": 1,
      "message": "Should this take a char instead? FXSYS_ToUpperASCII() suggests it should be a char, but I think you could make a case for int32_t, too...\n\n1. char: Discourages use with Unicode characters (non-ByteString, for example).\n2. int32_t: It\u0027s valid to want to check this property for Unicode characters.",
      "range": {
        "startLine": 51,
        "startChar": 31,
        "endLine": 51,
        "endChar": 38
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf23cae5_dd4a2f62",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-03-03T19:54:05Z",
      "side": 1,
      "message": "- FXSYS_iswupper() expands out to \"is wide upper\" so IsUpperASCII() seems fine.\n- Please stick with \"ASCII\" in PDFium.",
      "parentUuid": "d99d132a_62fd3a1f",
      "range": {
        "startLine": 51,
        "startChar": 18,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b83a662a_fcf37e59",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-03-03T19:54:05Z",
      "side": 1,
      "message": "I vote for int32_t, as fxbarcode/ has non-char caller.",
      "parentUuid": "b6f69760_29437ac3",
      "range": {
        "startLine": 51,
        "startChar": 31,
        "endLine": 51,
        "endChar": 38
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf5195f8_1eec97aa",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-03-03T21:25:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b83a662a_fcf37e59",
      "range": {
        "startLine": 51,
        "startChar": 31,
        "endLine": 51,
        "endChar": 38
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f8d2ad0_a7488dcc",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-03-03T21:25:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf23cae5_dd4a2f62",
      "range": {
        "startLine": 51,
        "startChar": 18,
        "endLine": 51,
        "endChar": 30
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9727f6eb_877db6d8",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-03T19:08:27Z",
      "side": 1,
      "message": "Optional: It might be useful to add an FXSYS_IsLowerASCII() at the same time, for symmetry.",
      "range": {
        "startLine": 56,
        "startChar": 9,
        "endLine": 56,
        "endChar": 31
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0af4871c_a9a29957",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-03T19:10:50Z",
      "side": 1,
      "message": "I see you commented on this here:\nhttps://pdfium-review.googlesource.com/c/pdfium/+/65752/24/core/fxge/cfx_fontmapper.cpp#262\n\nI think it still might be useful, but not urgent.",
      "parentUuid": "9727f6eb_877db6d8",
      "range": {
        "startLine": 56,
        "startChar": 9,
        "endLine": 56,
        "endChar": 31
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d229ee3_a3acb2fb",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-03-03T19:54:05Z",
      "side": 1,
      "message": "I suggest doing that in another CL.",
      "parentUuid": "0af4871c_a9a29957",
      "range": {
        "startLine": 56,
        "startChar": 9,
        "endLine": 56,
        "endChar": 31
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2875854a_f3c36263",
        "filename": "core/fxcrt/fx_extension.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-03-03T21:25:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0d229ee3_a3acb2fb",
      "range": {
        "startLine": 56,
        "startChar": 9,
        "endLine": 56,
        "endChar": 31
      },
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5668d6c9_f867cc7c",
        "filename": "core/fxge/cfx_fontmapper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-03-03T19:08:27Z",
      "side": 1,
      "message": "Optional: It occurs to me now that this could just be a range-based for loop. If you want to get fancy, you can even use std::all_of() for this (presumably with a non-capturing lambda).",
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7236d544_b4eb14a4",
        "filename": "core/fxge/cfx_fontmapper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-03-03T19:54:05Z",
      "side": 1,
      "message": "Maybe another, optional CL?",
      "parentUuid": "5668d6c9_f867cc7c",
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3acb18d5_5fcc829e",
        "filename": "core/fxge/cfx_fontmapper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 261,
      "author": {
        "id": 7620
      },
      "writtenOn": "2020-03-03T21:25:07Z",
      "side": 1,
      "message": "In another CL SGTM.",
      "parentUuid": "7236d544_b4eb14a4",
      "revId": "a2ef18b58f6a70b54f342c3ffbfab414646c85ec",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}