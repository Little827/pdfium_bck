{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "11597e15_89c70319",
        "filename": "core/fxge/dib/cstretchengine.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-09-12T16:34:15Z",
      "side": 1,
      "message": "Does this check need to be here? Would the caller in the Skia renderer need to check it separately anyway? i.e. Skia renderer needs to replicable lines 205-214 in some way.",
      "range": {
        "startLine": 37,
        "startChar": 42,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a021c66_709f4dc0",
        "filename": "core/fxge/dib/cstretchengine.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 7620
      },
      "writtenOn": "2022-09-12T17:57:56Z",
      "side": 1,
      "message": "With or without this check, this CL won\u0027t change CStretchEngine\u0027s bahavior. The incentive to have \"!options.bNoSmoothing\" here is to make Skia code more readable.\n\nWhen it comes to calling this function for Skia renderer, without this check, the condition check in StartDIBitsSkia() will become something like:\n(options.bInterpolateBilinear ||\n           (optimize_sampling_option \u0026\u0026 !options.bNoSmoothing \u0026\u0026\n            CStretchEngine::UseInterpolateBilinear(options, dest_width,\n                                                   dest_height, width, height)))\n                                                   \nSince the only option that matters for Skia in StartDIBitsSkia() was whether to use linear sampling option (when the condition check happens), it would be more straight-forward to have a function that already have all the flag checks instead of having an extra `bNoSmoothing` flag check outside the function.",
      "parentUuid": "11597e15_89c70319",
      "range": {
        "startLine": 37,
        "startChar": 42,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf0dc8d9_f2b1f8e7",
        "filename": "core/fxge/dib/cstretchengine.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-09-12T18:48:58Z",
      "side": 1,
      "message": "This CL does not change the CStretchEngine behavior, but it does do an extra redundant check for `bNoSmoothing`. Maybe that\u0027s ok since it\u0027s not an expensive check.\n\nBasically, this is making me wonder if the Skia renderer needs to handle `bNoSmoothing` like CStretchEngine. Or if lines 205-214 together would be useful to the Skia renderer code.",
      "parentUuid": "0a021c66_709f4dc0",
      "range": {
        "startLine": 37,
        "startChar": 42,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5f769b0_ab39e26c",
        "filename": "core/fxge/dib/cstretchengine.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 7620
      },
      "writtenOn": "2022-09-12T19:16:33Z",
      "side": 1,
      "message": "I think `bNoSmoothing` is handled by Skia in the form of SkSamplingOptions.\n\nBy looking into PDFium code, we can tell that `bNoSmoothing` affects pixel weight for SkiaPaths and AGG but Skia rendering does not have an equivalent concept due to not using a real CFX_ImageRenderer.\n\nBut if we look at how `bNoSmoothing` is used in core/fxge/win32/cgdi_plus_ext.cpp, it affects the interpolate options to be set to K-Nearest (which is the default algorithm for SkSamplingOptions).",
      "parentUuid": "cf0dc8d9_f2b1f8e7",
      "range": {
        "startLine": 37,
        "startChar": 42,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16aeacc5_f5e3c134",
        "filename": "core/fxge/dib/cstretchengine.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 7620
      },
      "writtenOn": "2022-09-12T19:16:33Z",
      "side": 1,
      "message": "`bNoSmoothing` is affecting SkPaint, which is outside the control of sampling options.",
      "parentUuid": "cf0dc8d9_f2b1f8e7",
      "range": {
        "startLine": 37,
        "startChar": 42,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bb080c0_190647a4",
        "filename": "core/fxge/dib/cstretchengine.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 7620
      },
      "writtenOn": "2022-09-12T19:18:21Z",
      "side": 1,
      "message": "Please ignore the previous comment \"bNoSmoothing  is affecting SkPaint, which is outside the control of sampling options.\" That was a wrong rendering option I was looking at.",
      "parentUuid": "a5f769b0_ab39e26c",
      "range": {
        "startLine": 37,
        "startChar": 42,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92342612_0b7ac87b",
        "filename": "core/fxge/dib/cstretchengine.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 5045
      },
      "writtenOn": "2022-09-12T20:21:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4bb080c0_190647a4",
      "range": {
        "startLine": 37,
        "startChar": 42,
        "endLine": 37,
        "endChar": 66
      },
      "revId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "cef45b85c802da18d774d132b662fca7786d27c7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}