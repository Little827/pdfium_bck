{
  "comments": [
    {
      "key": {
        "uuid": "8a7acbdf_bf4aae66",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "FPDFAnnot_SetAP() - \"annot\" needs to be capitalized to match the definition verbatim. Add parenthesis to distinguish FunctioName() from ClassName.",
      "range": {
        "startLine": 7,
        "startChar": 15,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bf9c0f8_1cf75fb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a7acbdf_bf4aae66",
      "range": {
        "startLine": 7,
        "startChar": 15,
        "endLine": 7,
        "endChar": 30
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c33a0013_dc71c97c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 7699
      },
      "writtenOn": "2019-12-12T07:23:06Z",
      "side": 1,
      "message": "for is not needed?",
      "range": {
        "startLine": 10,
        "startChar": 58,
        "endLine": 10,
        "endChar": 61
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "074b755f_15de418a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c33a0013_dc71c97c",
      "range": {
        "startLine": 10,
        "startChar": 58,
        "endLine": 10,
        "endChar": 61
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd92999c_a21df4d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "FPDFAnnot_SetAP()",
      "range": {
        "startLine": 15,
        "startChar": 52,
        "endLine": 15,
        "endChar": 67
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30744a0a_c019b473",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd92999c_a21df4d6",
      "range": {
        "startLine": 15,
        "startChar": 52,
        "endLine": 15,
        "endChar": 67
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2f092cc_97d2907b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "One blank line is fine. Remove this one?",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf4ed207_4a1aff2a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2f092cc_97d2907b",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "244408e4_d3f08800",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "pdfium:1434",
      "range": {
        "startLine": 24,
        "startChar": 5,
        "endLine": 24,
        "endChar": 61
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b42544e4_067d58ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "244408e4_d3f08800",
      "range": {
        "startLine": 24,
        "startChar": 5,
        "endLine": 24,
        "endChar": 61
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75d671c7_56bb3120",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 234,
      "author": {
        "id": 7699
      },
      "writtenOn": "2019-12-12T07:23:06Z",
      "side": 1,
      "message": "Will this be always true? given we are entering this method only after this check. Also, given the method name I am expecting callers will do a \"CA\" check before calling it.",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 33
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b602d00_e40a690a",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 234,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Removed redundant check",
      "parentUuid": "75d671c7_56bb3120",
      "range": {
        "startLine": 234,
        "startChar": 6,
        "endLine": 234,
        "endChar": 33
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43a4de34_960ba256",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 250,
      "author": {
        "id": 7699
      },
      "writtenOn": "2019-12-12T07:23:06Z",
      "side": 1,
      "message": "A small confusion, will pExtGStateDict and pGSDict pointing to the same byte stream pool? How does it work, I tried the code but could not understand it in details.",
      "range": {
        "startLine": 250,
        "startChar": 7,
        "endLine": 250,
        "endChar": 22
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e61fd9f6_b524cd94",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 250,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-27T10:23:42Z",
      "side": 1,
      "message": "Yes, pExtGStateDict and pGSDict are pointing to same string pool. But this string pool is only used to update the given key(string type) if equivalent is already present in string pool, which will be eventually used to create an entry in map and both of maps are independent of each other.",
      "parentUuid": "43a4de34_960ba256",
      "range": {
        "startLine": 250,
        "startChar": 7,
        "endLine": 250,
        "endChar": 22
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "633cea0f_3d356840",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "#include \u003ccmath\u003e",
      "range": {
        "startLine": 841,
        "startChar": 26,
        "endLine": 841,
        "endChar": 35
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87925570_2fb877bb",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "Can we just check if the \"CA\" value is in range, i.e. not negative as well? Just check it as a float instead of converting to int and then checking.",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2428796_62c5a20c",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Only way to set \"CA\" value in annotation\u0027s dictionary is by calling method FPDFAnnot_SetColor(). Since this method is taking only unsigned integer as parameter(corresponding to alpha), negative value is not possible. Please let me know if you have different opinion.",
      "parentUuid": "87925570_2fb877bb",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb863c54_92b3186e",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "633cea0f_3d356840",
      "range": {
        "startLine": 841,
        "startChar": 26,
        "endLine": 841,
        "endChar": 35
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43a67da2_4a97a045",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 7659
      },
      "writtenOn": "2019-12-13T04:27:31Z",
      "side": 1,
      "message": "But is the conversion of float into int necessary. Couldn\u0027t we do this instead.\npAnnotDict-\u003eGetNumberFor(\"CA\") \u003c\u003d 1.f\n\nThe CA value goes from [0,1] please take care of inclusive ends.",
      "parentUuid": "b2428796_62c5a20c",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41699f96_c66f8f5e",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-13T10:33:36Z",
      "side": 1,
      "message": "We are strictly checking for value \u003c 255 and not \u003c\u003d255 so that we don\u0027t bloat up size of Pdf unnecessarily by creating a new dictionary value in case of solid color.",
      "parentUuid": "43a67da2_4a97a045",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eee81f76_ae0cfe27",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 7659
      },
      "writtenOn": "2019-12-13T14:24:26Z",
      "side": 1,
      "message": "Let\u0027s mention the same in the comment here.",
      "parentUuid": "41699f96_c66f8f5e",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1b8c99d_04e3e5fd",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-27T10:23:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb863c54_92b3186e",
      "range": {
        "startLine": 841,
        "startChar": 26,
        "endLine": 841,
        "endChar": 35
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68cf1a6b_793a3677",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-27T11:45:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eee81f76_ae0cfe27",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77c3fa6b_4313ec64",
        "filename": "fpdfsdk/fpdf_annot.cpp",
        "patchSetId": 5
      },
      "lineNbr": 841,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-09T21:35:47Z",
      "side": 1,
      "message": "Can we check for: pAnnotDict-\u003eGetNumberFor(\"CA\") \u003c 1.0f then, and avoid multiplying both sides of the equation by 255? i.e. Take Ankit\u0027s sugguestion, but check for [0, 1).",
      "parentUuid": "68cf1a6b_793a3677",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c86c5e7_b306e9a4",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "Use an anonymous namespace, rather than the static keyword.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 6
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "299a5a64_61d0c52f",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "wchar_t kStreamData[]\n\nSince std::wstring is a class and not Plain Old Data, this usage will add static initializers. Let\u0027s avoid adding SIs.",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 37
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77ece4ae_19da324b",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c86c5e7_b306e9a4",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 6
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7e29de2_4a6122ea",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "299a5a64_61d0c52f",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 37
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78e97077_3a1d5ba4",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "opaque",
      "range": {
        "startLine": 69,
        "startChar": 64,
        "endLine": 69,
        "endChar": 70
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d804910c_268bb96a",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "non-existence",
      "range": {
        "startLine": 69,
        "startChar": 15,
        "endLine": 69,
        "endChar": 28
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f5a0884_3547f98a",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d804910c_268bb96a",
      "range": {
        "startLine": 69,
        "startChar": 15,
        "endLine": 69,
        "endChar": 28
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8ed7724_0ee3b701",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78e97077_3a1d5ba4",
      "range": {
        "startLine": 69,
        "startChar": 64,
        "endLine": 69,
        "endChar": 70
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "def1abbd_94e2ac44",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 7659
      },
      "writtenOn": "2019-12-12T10:02:11Z",
      "side": 1,
      "message": "ASSERT_FALSE(resources_dict);",
      "range": {
        "startLine": 71,
        "startChar": 2,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d310609_6b0e15fc",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "def1abbd_94e2ac44",
      "range": {
        "startLine": 71,
        "startChar": 2,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d40eb01_0ab54fc8",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 128,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-12-11T18:36:15Z",
      "side": 1,
      "message": "Does EXPECT_FLOAT_EQ() work well here?",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b10b293_397c09ea",
        "filename": "fpdfsdk/fpdf_annot_unittest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 128,
      "author": {
        "id": 7747
      },
      "writtenOn": "2019-12-12T14:02:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d40eb01_0ab54fc8",
      "revId": "0f2ec669b1bbf03f5a9f42575f929ba056316647",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    }
  ]
}