{
  "comments": [
    {
      "key": {
        "uuid": "0be84419_15e8fdaa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-10-15T21:07:10Z",
      "side": 1,
      "message": "Remove the space after the colon, so Gerrit has a better chance of auto-linkifying it.",
      "range": {
        "startLine": 10,
        "startChar": 23,
        "endLine": 10,
        "endChar": 35
      },
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7965f0ff_6bfc032e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-10-16T00:33:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0be84419_15e8fdaa",
      "range": {
        "startLine": 10,
        "startChar": 23,
        "endLine": 10,
        "endChar": 35
      },
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50192fd8_f5eae9ea",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1176,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-10-15T21:07:10Z",
      "side": 1,
      "message": "BTW, if you don\u0027t mind, can you make |identityMatrix| \"static const\" or possibly \"static constexpr\" ?",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73c973b9_416f260b",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1176,
      "author": {
        "id": 7613
      },
      "writtenOn": "2019-10-15T21:10:01Z",
      "side": 1,
      "message": "CFX_Matrix also has an .IsIdentity() method, which internally does something very similar. I thought about suggesting using it, but the code seems a bit less elegant.",
      "parentUuid": "50192fd8_f5eae9ea",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec7f0b0d_2557fc90",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1176,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-10-15T21:14:18Z",
      "side": 1,
      "message": "The issue here is |pMatrix| may be nullptr. CFX_Matrix::IsIdentity() is not helpful when there\u0027s a nullptr.",
      "parentUuid": "73c973b9_416f260b",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58743ca9_897d0a4f",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1176,
      "author": {
        "id": 7613
      },
      "writtenOn": "2019-10-15T21:24:48Z",
      "side": 1,
      "message": "Right, the code would end up looking something like this:\n\n  return pMatrix ? *pMatrix !\u003d m_drawMatrix : !m_drawMatrix.IsIdentity();\n\nNot quite as tidy. And actually, I\u0027m not sure how this special behavior for nullptr is useful, but I assume there\u0027s a reason.",
      "parentUuid": "ec7f0b0d_2557fc90",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d758d7f_0f4a8813",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1176,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-10-15T21:36:30Z",
      "side": 1,
      "message": "I assume it would be useful if |pMatrix| is nullptr, and |m_drawMatrix| may or may not be the identity matrix.",
      "parentUuid": "58743ca9_897d0a4f",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e23b3a1b_b1659b04",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1176,
      "author": {
        "id": 7613
      },
      "writtenOn": "2019-10-16T00:19:16Z",
      "side": 1,
      "message": "I think my concern is a bit more high-level than that: The method is called \"MatrixChanged\", but is not being the identity matrix the same as being changed? I would argue that it\u0027s not really clear.\n\nIt\u0027s obvious that we\u0027re comparing against pMatrix when pMatrix !\u003d nullptr, but it\u0027s less clear that we want to compare against the identity matrix when pMatrix \u003d\u003d nullptr. It would be clearer to just pass in the identity matrix if that\u0027s what we actually want to test against, rather than nullptr. (Also, then we could make this parameter a const reference instead of a pointer.)\n\nThat said, I think it\u0027s more important not to change behavior than to worry about the design of this API. :-)\n\nTo try not to derail this thread too much, and return to your original point, the two main options at this point seem to be:\n\n1. \"static const\" or \"static constexpr\" identityMatrix. This should be compatible with https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables, since the destructor is trivial.\n\n2. Rewrite the logic to use CFX_MAtrix::IsIdentity() instead.",
      "parentUuid": "0d758d7f_0f4a8813",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4c02a27_5e55a18e",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1176,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-10-16T00:33:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d758d7f_0f4a8813",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd310109_411df7d6",
        "filename": "core/fxge/skia/fx_skia_device.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1176,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-10-16T00:35:10Z",
      "side": 1,
      "message": "Here, \"changed\" means the current matrix, represented by |pMatrix| is different from the last used matrix, represented by |m_drawMatrix|. Does that make this clearer?\n\nI do think this is derailing the conversation quite a bit. We are trying to do a small change here and it\u0027s turned in a big discussion. If you\u0027d like |pMatrix| to be non-optional, let\u0027s file a bug for that and work on it separately. That issue goes beyond this class and possibly several layers up the call stack.",
      "parentUuid": "e23b3a1b_b1659b04",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7c5493d_8799e39c",
        "filename": "testing/resources/pixel/bug_1402.in",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-10-15T21:07:10Z",
      "side": 1,
      "message": "Is a CID font really necessary to test this issue?",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69b37fc0_d9f7d477",
        "filename": "testing/resources/pixel/bug_1402.in",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 5045
      },
      "writtenOn": "2019-10-15T23:35:33Z",
      "side": 1,
      "message": "Let\u0027s work out what this test file should look like. I can help generate the missing platform-specific expectations after that.",
      "parentUuid": "b7c5493d_8799e39c",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "414381f5_f4cd1101",
        "filename": "testing/resources/pixel/bug_1402.in",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 7620
      },
      "writtenOn": "2019-10-16T00:33:38Z",
      "side": 1,
      "message": "I don\u0027t think CID font is necessary. It just happens to be CJK characters are the ones that come with adjust matrixes and CJK characters are CIDFontType2 a lot. English letters usually only have widths.\nAs long as the pdf has a glyph with its own adjust matrix, we should be able to reproduce the bug and make it a test file.",
      "parentUuid": "69b37fc0_d9f7d477",
      "revId": "4dd7d8e5ed0b8b3f08e0e030a420a32e99ee9cca",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}