{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "36cb5d92_5099b5fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-10-12T18:57:30Z",
      "side": 1,
      "message": "So I think this might fix some of the CHECKS() I disabled.",
      "revId": "0e4a420eb73c32391a5b959284287987c7bf2aa7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72fb546b_3fce3dd6",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1101,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-12T19:50:48Z",
      "side": 1,
      "message": "Should this also return a span of size `src_pitch_value`, like line 1110? Should we make sure all the return paths that are not failures return a span of the same size?",
      "revId": "0e4a420eb73c32391a5b959284287987c7bf2aa7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cdc2b9f_53f717be",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1101,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-10-12T20:14:40Z",
      "side": 1,
      "message": "My intent was to return a span representing the initialized portion of data. Here we fill the whole buffer, so using the whole buffer would be acceptable.",
      "parentUuid": "72fb546b_3fce3dd6",
      "revId": "0e4a420eb73c32391a5b959284287987c7bf2aa7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c33d134_eb19f07f",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1101,
      "author": {
        "id": 5045
      },
      "writtenOn": "2021-10-12T20:28:41Z",
      "side": 1,
      "message": "How about the returns on lines 1126 and below? With line 1126, it\u0027s not obvious that `m_Width` entries initializes all of `m_MaskBuf`.",
      "parentUuid": "3cdc2b9f_53f717be",
      "revId": "0e4a420eb73c32391a5b959284287987c7bf2aa7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "523a4dfc_fa6d831f",
        "filename": "core/fpdfapi/page/cpdf_dib.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1101,
      "author": {
        "id": 5495
      },
      "writtenOn": "2021-10-12T21:29:33Z",
      "side": 1,
      "message": "Indeed. But https://source.chromium.org/chromium/chromium/src/+/main:third_party/pdfium/core/fpdfapi/page/cpdf_dib.cpp;drc\u003df26a4d7ff08614daa145943a4aacdec3562ff3c6;l\u003d242\n\nsizes m_MaskBuf and m_LineBuf (nearby) according to pitch, which was computed from m_Width. So I\u0027d assumed loops up to m_Width didn\u0027t require\nspecial checks. So that covers the loop at 1122.\n\nYou\u0027re right that the code at 1130 might be short.\nThe code at 1134, 1150, 1169. etc. should be coverd by the m_Width case. I\u0027m not sure how to make this clearer",
      "parentUuid": "4c33d134_eb19f07f",
      "revId": "0e4a420eb73c32391a5b959284287987c7bf2aa7",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b"
    }
  ]
}