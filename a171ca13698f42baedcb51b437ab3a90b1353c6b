{
  "comments": [
    {
      "key": {
        "uuid": "71193ab5_c67ea469",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-05-22T22:04:28Z",
      "side": 1,
      "message": "section?",
      "range": {
        "startLine": 12,
        "startChar": 51,
        "endLine": 12,
        "endChar": 55
      },
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "044403b2_cfffc876",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 6295
      },
      "writtenOn": "2018-05-23T19:45:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71193ab5_c67ea469",
      "range": {
        "startLine": 12,
        "startChar": 51,
        "endLine": 12,
        "endChar": 55
      },
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70dbea73_eab7ad5b",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-05-22T22:04:28Z",
      "side": 1,
      "message": "Not used?",
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba0baa96_fc37e18a",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 6295
      },
      "writtenOn": "2018-05-23T19:45:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70dbea73_eab7ad5b",
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80544f84_ea0a4df2",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-05-22T22:04:28Z",
      "side": 1,
      "message": "Not needed.",
      "range": {
        "startLine": 75,
        "startChar": 17,
        "endLine": 75,
        "endChar": 20
      },
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ed2ec2a_2b0faf29",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 6295
      },
      "writtenOn": "2018-05-23T19:45:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80544f84_ea0a4df2",
      "range": {
        "startLine": 75,
        "startChar": 17,
        "endLine": 75,
        "endChar": 20
      },
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "123d9ea7_b121c325",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-05-22T22:04:28Z",
      "side": 1,
      "message": "Be specific about which file.",
      "range": {
        "startLine": 77,
        "startChar": 67,
        "endLine": 77,
        "endChar": 75
      },
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0927bb35_a488ddc3",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 6295
      },
      "writtenOn": "2018-05-23T19:45:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "123d9ea7_b121c325",
      "range": {
        "startLine": 77,
        "startChar": 67,
        "endLine": 77,
        "endChar": 75
      },
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "846be289_5d2d65bd",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-05-22T22:04:28Z",
      "side": 1,
      "message": "Would it be slightly easier to gather a list of lists, and then process it later? Then you can do that inside main(), and not rely on asserts here.",
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2342f35_23a4aac3",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 6295
      },
      "writtenOn": "2018-05-23T19:45:21Z",
      "side": 1,
      "message": "List of lists feels more convoluted than just having a \u0027current\u0027 list and checking every time we get to the end of it. We already use asserts in other places of this file. And this function also needs to return |functions|, which is better suited to the other checks outside of this function.",
      "parentUuid": "846be289_5d2d65bd",
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bd38af5_3b335ffe",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 5045
      },
      "writtenOn": "2018-05-23T23:17:13Z",
      "side": 1,
      "message": "The existing asserts are more to make sure the header parsing is sane. If those asserts go away, the checks will still continue to work. Whereas the new asserts are required to do the check.",
      "parentUuid": "b2342f35_23a4aac3",
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a47a54_26f59ad9",
        "filename": "testing/tools/api_check.py",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 6295
      },
      "writtenOn": "2018-05-24T16:20:59Z",
      "side": 1,
      "message": "It will still show up as a presubmit error so I think the only functional difference is that the asserts will cause the remaining checks to not be considered. Fine I\u0027ll return a list of lists.",
      "parentUuid": "3bd38af5_3b335ffe",
      "revId": "a171ca13698f42baedcb51b437ab3a90b1353c6b",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}