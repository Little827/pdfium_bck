{
  "comments": [
    {
      "key": {
        "uuid": "2dae5564_e08d474b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-07T03:16:52Z",
      "side": 1,
      "message": "This seems like a lot of words to describe this change. Can you capture the same idea more concisely?\n\nFor example, I think all you need to say here is something to the effect of, \"Replace an explicit delete with std::unique_ptr.\" You can assume the reader understands common C++ idioms like std::unique_ptr.",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14bbb54e_2ab8aa3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-07T03:18:30Z",
      "side": 1,
      "message": "(Do continue to be specific about which explicit delete you\u0027re replacing.)",
      "parentUuid": "2dae5564_e08d474b",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d3724a3_f30347e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-01-07T04:44:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14bbb54e_2ab8aa3d",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2319f03f_1cf4a0ad",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-07T03:16:52Z",
      "side": 1,
      "message": "I\u0027m going to assume there are no meaningful test changes required by this change.",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e982caaa_b349c471",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-08T04:21:15Z",
      "side": 1,
      "message": "This function gets plenty of test coverage. e.g. Every embedder test calls FPDFDOC_ExitFormFillEnvironment(). In fact, it has 100% test coverage since there are implicit callers that pass in nullptr.",
      "parentUuid": "2319f03f_1cf4a0ad",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a0697e8_52b115c2",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-07T03:16:52Z",
      "side": 1,
      "message": "I kinda wonder if it wouldn\u0027t be better to just check \"!hHandle\" instead (before doing anything else). This would more directly express the precondition.",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80bfefc0_65dbd747",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-01-07T04:28:18Z",
      "side": 1,
      "message": "I see a con to doing that:\nWhat if the implementation of CPDFSDKFormFillEnvironmentFromFPDFFormHandle() changes? Right now the function merely casts the input. But what if the implementation is changed to return a nullptr in response to an error.\n\nInstead, the optimization I see now is moving the check inside the build flags.",
      "parentUuid": "8a0697e8_52b115c2",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0aa7330_2eff6c3b",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-07T18:43:57Z",
      "side": 1,
      "message": "A couple points:\n\n1. Is it reasonable for CPDFSDKFormFillEnvironmentFromFPDFFormHandle() to return a nullptr? Won\u0027t that result in the handle leaking, since it won\u0027t get deleted in that case?\n2. What is the contract of this method, and what is the contract of CPDFSDKFormFillEnvironmentFromFPDFFormHandle()? The two shouldn\u0027t be conflated.\n\n(As for moving the check inside the #ifdef, I think that would be premature optimization at best.)",
      "parentUuid": "80bfefc0_65dbd747",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5992112_cb17afa7",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 7644
      },
      "writtenOn": "2020-01-07T19:08:19Z",
      "side": 1,
      "message": "1. Hmm, I agree on that ðŸ˜Š. I can change easily change that. \n2. There is no documentation/comment contracting the behavior of the method.",
      "parentUuid": "f0aa7330_2eff6c3b",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46895033_940415f9",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 7613
      },
      "writtenOn": "2020-01-07T19:12:56Z",
      "side": 1,
      "message": "Re: 2: Not sure which method you were referring to, but if we\u0027re talking about FPDFDOC_ExitFormFillEnvironment(), there\u0027s API documentation here:\nhttps://source.chromium.org/chromium/_/pdfium/pdfium.git/+/7d0916bb7588ca5f7f1ae7707edae7b02cbb5c26:public/fpdf_formfill.h;l\u003d1083\n\nIdeally, I think we would update this documentation to be more precise about the semantics here, but there seems to be at least an implied contract about ownership from the function name. (Otherwise, deleting here would be wrong entirely.)\n\nIf we\u0027re talking about CPDFSDKFormFillEnvironmentFromFPDFFormHandle(), that seems to be an internal API, and again, any contracts may only be implicit/conventional.\n\nWe can talk more about this offline, if you\u0027d like. :-)",
      "parentUuid": "d5992112_cb17afa7",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b71b6a6a_98d0f0ce",
        "filename": "fpdfsdk/fpdf_formfill.cpp",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 5045
      },
      "writtenOn": "2020-01-08T04:21:15Z",
      "side": 1,
      "message": "- CPDFSDKFormFillEnvironmentFromFPDFFormHandle() is unlikely to change. If it changes, that means the public API would change, which would break compatibility, which we are unlikely to du.\n- Assuming we can stop worrying about CPDFSDKFormFillEnvironmentFromFPDFFormHandle() and understand it just does a cast and will stay that way, I would suggest doing what most functions in this file do. Which is to convert from FPDF types to CPDF types ASAP, and then work with CPDF types as much as possible.\n- If you want to document the contract for the various CPDF \u003c-\u003e FPDF conversion helpers, I would mention most of them are just straight up casts first, and then document the exceptions.",
      "parentUuid": "46895033_940415f9",
      "revId": "087fa4420a8761de02886b9454fe1fdf1de39fa1",
      "serverId": "fca2d64a-0420-3532-b200-12848c95a47b",
      "unresolved": true
    }
  ]
}